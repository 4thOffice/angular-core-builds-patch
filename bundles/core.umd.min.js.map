{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","fn","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","EMPTY_OBJ","EMPTY_ARRAY","NodeInjectorFactory","__window","window","__self","WorkerGlobalScope","_global","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR","RENDERER_FACTORY","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","HEADER_OFFSET","ACTIVE_INDEX","VIEWS","NATIVE","LCONTAINER_LENGTH","MONKEY_PATCH_KEY_NAME","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","isProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isOnChangesDirectiveWrapper","obj","isExactInstanceOf","getPrototypeOf","OnChangesDirectiveWrapper","unwrapOnChangesDirectiveWrapper","instance","seenProps","previous","changes","stringify$1","loadInternal","view","record","readElementValue","isArray","getNativeByIndex","lView","getNativeByTNode","tNode","hostView","getTNode","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","flags","isComponent","isComponentDef","def","template","isLContainer","isRootView","getRootView","readPatchedLView","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","R3ResolvedDependencyType","defaultScheduler","requestAnimationFrame","setTimeout","addAllToArray","items","arr","findComponentView","rootTNode","resolveWindow","element","ownerDocument","defaultView","resolveDocument","resolveBody","body","getCompilerFacade","globalNg","ɵcompilerFacade","InjectFlags","Inject","Optional","Self","SkipSelf","Host","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","injectInjectorOnly","Default","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","j","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","ngContentSelectors","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","outputs","exportAs","onChanges","ngOnChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","id","styles","_","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","forEach","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","elementDepthCount","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","throwNotFound","registerPreOrderHooks","directiveIndex","directiveDef","tView","initHooks","checkHooks","registerPostOrderHooks","firstTemplatePass","directiveStart","end","directiveEnd","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","checkNoChangesMode","executeHooks","firstPassHooks","hooksToCall","callHooks","hook","isOnChangesHook","directiveOrWrappedDirective","directive","bindingsEnabled","previousOrParentTNode","isParent","currentDirectiveDef","setCurrentDirectiveDef","enableBindings","disableBindings","getLView","restoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","getFirstTemplatePass","setFirstTemplatePass","bindingRootIndex","getBindingRoot","setBindingRoot","enterView","newView","hostTNode","oldView","bindingStartIndex","nextContextImpl","level","walkUpViews","nestingLevel","leaveView","includeViewProviders","setIncludeViewProviders","v","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","parent","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","attrs","attrName","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","searchTokensOnInjector","NOT_FOUND","moduleInjector","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","previousIncludeViewProviders","previousInjectImplementation","injectorView","isFirstHostTNode","NodeInjector","_tNode","_lView","getFactoryOf","typeAny","getInheritedFactory","getLContext","mpValue","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","context","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","slice","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootContext$1","getRootView$1","componentOrView","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","node","Node","isBrowserEvents","listener","useCapture","getListeners","lCleanup","tCleanup","cleanup","listeners","firstParam","secondParam","name_1","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","a","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","looseIdentical","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","throwMultipleComponentError","tagName","NO_CHANGE","updateBinding","bindingIndex","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","nativeParentNode","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","head","projection","nativeInsertBefore","nativeRemoveChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","executeOnDestroys","removeListeners","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","cleanupFn","destroy","getRenderParent","getHighestElementOrICUContainer","getHostNative","insertBefore","removeChild","appendChild","childEl","childTNode","parentTNode","getBeforeNodeForView","containerNative","viewTNode","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","NG_TEMPLATE_SELECTOR","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","current","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","ANIMATION_PROP_PREFIX","createEmptyStylingContext","sanitizer","initialStyles","initialClasses","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","hasClassInput","initializeStaticContext","attr","patchInitialStylingValue","initialStyling","prop","existingValue","renderInitialStylingValues","initialStylingValues","isEntryClassBased","setClass","setStyle","getMatchingBindingIndex","bindingName","start","getProp","_updateSingleStylingValue","offset","input","isClassBased","directiveRef","getDirectiveIndexFromRegistry","singleIndex","getSinglePropIndexValue","singlePropOffsetRegistryIndex","offsets","currValue","getValue","currFlag","getPointers","currDirective","getDirectiveIndexFromEntry","hasValueChanged","allowValueChange","newValue","currentDirectiveOwner","newDirectiveOwner","isClassBased_1","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","playerBuilderIndex","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","getStyleSanitizer","setSanitizeFlag","sanitizeYes","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setDirectiveDirty","setContextDirty","setContextPlayersDirty","store","DashCase","setProperty","removeStyle","removeProperty","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","limitToSingleClasses","findEntryPositionByProp","startIndex","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","entryIsClassBased","initialIndex","getInitialStylingValuesIndexOf","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","getDirectiveRegistryValuesIndexOf","keyValues","dirs","dirtyYes","getInitialClassNameValue","initialClassValues","_CLEAN_PROMISE","Promise","resolve","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","setHostBindings","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","viewAttached","syncViewWithBlueprint","componentTView","checkView","createLView","rendererFactory","createNodeAtIndex","createTNode","createViewNode","allocExpando","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","getRenderFlags","nextContext","renderComponentOrTemplate","templateFn","normalExecutionPath","begin","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","createDirectivesAndLocals","elementContainerEnd","currentQueries","addNode","elementCreate","hasStyling","setUpAttributes","getElementDepthCount","increaseElementDepthCount","inputData","initializeTNodeInputs","renderInitialStylesAndClasses","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","previousExpandoLength","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","changesHooks","pipeRegistry","isProc","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","eventName","listenerFn","eventTargetResolver","resolved","lCleanupIndex","getCleanup","listen","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","generatePropertyAliases","propsLength","minifiedName","subscription","subscribe","idx","decreaseElementDepthCount","setInputsForProperty","elementAttribute","element_1","removeAttribute","strValue","elementProperty","nativeOnly","elementPropertyInternal","componentHostSyntheticProperty","loadComponentRenderer","loadRendererFn","markDirtyIfOnPush","childComponentLView","tViews","tParent","initialInputs","inputAliases","privateName","recordChangeAndUpdateProperty","direction","propStore","isInput","defs","publicToMinifiedNames","publicToDeclaredNames","elementStyling","classBindingNames","styleBindingNames","styleSanitizer","updateContextWithBindings","onlyProcessSingleClasses","findOrPatchDirectiveIntoRegistry","directiveRefs","nextOffsetInsertionIndex","detectedIndex","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","stylesOffset","singleClassesStartIndex","multiStylesStartIndex","multiClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","i_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","totalNewEntries","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","elementHostAttrs","patchContextWithStaticAttrs","elementStylingApply","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","targetDirectiveIndex","isContextDirty","isDirectiveDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","stillDirty","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","updateStyleProp","elementClassProp","classIndex","onOrOffClassValue","updateClassProp","addOrRemove","elementStylingMap","classes","hackImplementationOfElementStylingMap","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","classNames","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","split","styleProps","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","adjustedPropIndex","newProp","initialValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","ctxIndex_1","textNative","textBinding","element_2","textContent","directiveCount","elementIndex","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","recordChange","simpleChanges","has","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInternal","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","markDirty","allocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","interpolationV","content","interpolation1","prefix","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextLView","loadQueryList","queryListIdx","load","directiveInject","injectAttribute","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","getCurrentView","getTViewCleanup","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","rNode","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","rf","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","ngInherit","e_1_1","return","superPrototype","noop","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR$1","NullInjector","Injector","StaticInjector","NULL","SWITCH_INJECTOR_FACTORY","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","USE_VALUE","provide","String","useValue","NULL_INJECTOR$1","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","charAt","substr","parts","JSON","replace","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","_this","injectorDefTypes","destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","existing","multiRecord_1","hasOnDestroy","Function","paramLength","isExistingProvider","isFactoryProvider","classRef_1","ngModuleDetail","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","factoryFn","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","item","multiResolve","result","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","enumerable","configurable","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","_injectorIndex","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","queries","viewRef","hostContainer","createViewRef","componentIndex","hostComponentView","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","SecurityContext","Renderer2","SWITCH_RENDERER2_FACTORY","Version","Sanitizer","VERSION","full","major","minor","patch","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ComponentFactory$$1","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","tElementNode","rootLView","oldLView","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","_rootLView","destroyCbs","changeDetectorRef","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","sanitizeSrcset","srcset","trim","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","elAttr","lower","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","ELEMENT_MARKER","marker","COMMENT_MARKER","MARKER","ICU_BLOCK_REGEX","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","PP_PLACEHOLDERS","PP_ICU_VARS","PP_ICUS","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","exec","pos","pop","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","str","binding","parseInt","blocks","assertGreaterThan","actual","expected","msg","throwError","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","RegExp","phIndex","icuNodeIndex","icuStart","tIcuIndex","hasBinding","update","icus","appendI18nNode","i18nPostprocess","replacements","_match","shift","some","_idx","list","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","visitedPlaceholders","readCreateOpCodes","removeNode","currentTNode","opCode","destinationNodeIndex","destinationTNode","commentValue","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","k","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","worstCaseSize","max","opCodes","parseNodes","currentNode","nestedIcusToCreate","element$$1","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","_bootstrapComponents","_r3Injector","injectFlags","NgModuleFactory$1","NgModuleFactory$$1","moduleType","parentInjector","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","unwrapValue","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","QueryList","_results","filter","find","reduce","init","toArray","reset","flatten$1","flat","flatItem","last","notifyOnChanges","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","clone","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","memoryIndex","getOrCreateCurrentQueries","QueryType","storeCleanupWithContext","queryRefresh","templateRefExtractor","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","SAFE_STYLE_VALUE","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","getSanitizer","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","getUrlSanitizer","tag","sanitizeUrlOrResourceUrl","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetFactoryOf","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵloadQueryList","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵallocHostVars","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵcomponentHostSyntheticProperty","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵquery","ɵqueryRefresh","ɵregisterContentQuery","ɵreference","ɵelementStyling","ɵelementHostAttrs","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵresolveWindow","ɵresolveDocument","ɵresolveBody","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ɵsanitizeUrl","ɵsanitizeUrlOrResourceUrl","NgModuleFactoryLoader","modules","assertSameOrNotExisting","incoming","getModuleFactory__PRE_R3__","noModuleError","getModuleFactory","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","compiler","dep","reflectDependency","host","optional","Token","skipSelf","setTokenAndResolvedType","param","EMPTY_ARRAY$2","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","flatten$2","expandModuleWithProviders","emitInline","registerNgModuleType","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","from","compilation","dir","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","mapFn","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","preserveWhitespaces","viewQueries","extractQueriesMetadata","interpolation","hasSelectorScope","compileDirective","facade","typeArgumentCount","isContentQuery","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","extractExportAs","part","isQueryAnn","queriesMeta","field","ann","convertToR3QueryMetadata","propertyName","convertToR3QueryPredicate","splitByComma","piece","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","initializeBaseDef","inheritedBaseDef","getOrCreateDefinitionAndUpdateMappingFor","getPropertyToUpdate","updateIOProp","defProp","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","USE_VALUE$1","EMPTY_ARRAY$3","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","USE_VALUE$2","isUseClassProvider","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError$1","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","then","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","scope","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","promise","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","delete","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","DebugElement__PRE_R3__","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","eAttrs","lContext","lNode","eClasses","classList","styleName","eStyles","style","getPropertyValue","children","getDebugNode__POST_R3__","_queryNodeChildrenR3","elementsOnly","_nativeNodeToDebugNode","getDebugNode","getDebugNode__PRE_R3__","indexDebugNode","DebugNode","DebugElement","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","ApplicationModule","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","parentEl","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","templateRef","insert","createComponent","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","ɵangular_packages_core_core_q","ɵangular_packages_core_core_n","ɵangular_packages_core_core_o","ɵangular_packages_core_core_p","ɵangular_packages_core_core_r","ɵangular_packages_core_core_e","ɵangular_packages_core_core_l","ɵangular_packages_core_core_m","ɵangular_packages_core_core_k","ɵangular_packages_core_core_j","ɵangular_packages_core_core_a","ɵangular_packages_core_core_b","ɵangular_packages_core_core_c","ɵangular_packages_core_core_d","ɵangular_packages_core_core_i","ɵangular_packages_core_core_s","ɵangular_packages_core_core_u","ɵangular_packages_core_core_t","ɵangular_packages_core_core_x","ɵangular_packages_core_core_v","ɵangular_packages_core_core_w","ɵangular_packages_core_core_ba","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_be","ɵangular_packages_core_core_bj","ɵangular_packages_core_core_bg","ɵangular_packages_core_core_f","ɵangular_packages_core_core_g","ɵangular_packages_core_core_h","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_bl","ɵangular_packages_core_core_bn","ɵangular_packages_core_core_y","ɵangular_packages_core_core_z","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵinject","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","getRootContext$2","ɵsetClassMetadata","setClassMetadata","clazz","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","compilerMeta","ctorDeps","userDeps","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","adjustedIdx","_adjustIndex","commentNode","nativeNextSibling","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ɵgetModuleFactory__POST_R3__","getModuleFactory__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵSWITCH_INJECTOR_FACTORY__POST_R3__","injectInjector","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue$1","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.2.0+133.sha-b73d678\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY_OBJ);\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        assertEqual(node instanceof Node, true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6; // Rename to `T_HOST`?\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var TAIL = 14;\n    var CONTAINER_INDEX = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 18;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 6;\n    // Because interfaces in TS/JS cannot be instanceof-checked this means that we\n    // need to rely on predictable characteristics of data-structures to check if they\n    // are what we expect for them to be. The `LContainer` interface code below has a\n    // fixed length and the constant value below references that. Using the length value\n    // below we can predictably gaurantee that we are dealing with an `LContainer` array.\n    // This value MUST be kept up to date with the length of the `LContainer` array\n    // interface below so that runtime type checking can work.\n    var LCONTAINER_LENGTH = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, \n        /**\n         * Set to `true` if the token is a provider, and not a directive.\n         */\n        isProvider, injectImplementation) {\n            this.factory = factory;\n            this.isProvider = isProvider;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Checks an object to see if it's an exact instance of a particular type\n     * without traversing the inheritance hierarchy like `instanceof` does.\n     * @param obj The object to check\n     * @param type The type to check the object against\n     */\n    function isExactInstanceOf(obj, type) {\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == type.prototype;\n    }\n    /**\n     * Checks to see if an object is an instance of {@link OnChangesDirectiveWrapper}\n     * @param obj the object to check (generally from `LView`)\n     */\n    function isOnChangesDirectiveWrapper(obj) {\n        return isExactInstanceOf(obj, OnChangesDirectiveWrapper);\n    }\n    /**\n     * Removes the `OnChangesDirectiveWrapper` if present.\n     *\n     * @param obj to unwrap.\n     */\n    function unwrapOnChangesDirectiveWrapper(obj) {\n        return isOnChangesDirectiveWrapper(obj) ? obj.instance : obj;\n    }\n    /**\n     * A class that wraps directive instances for storage in LView when directives\n     * have onChanges hooks to deal with.\n     */\n    var OnChangesDirectiveWrapper = /** @class */ (function () {\n        function OnChangesDirectiveWrapper(instance) {\n            this.instance = instance;\n            this.seenProps = new Set();\n            this.previous = {};\n            this.changes = null;\n        }\n        return OnChangesDirectiveWrapper;\n    }());\n    /**\n     * Updates the `changes` property on the `wrapper` instance, such that when it's\n     * checked in {@link callHooks} it will fire the related `onChanges` hook.\n     * @param wrapper the wrapper for the directive instance\n     * @param declaredName the declared name to be used in `SimpleChange`\n     * @param value The new value for the property\n     */\n    function recordChange(wrapper, declaredName, value) {\n        var simpleChanges = wrapper.changes || (wrapper.changes = {});\n        var firstChange = !wrapper.seenProps.has(declaredName);\n        if (firstChange) {\n            wrapper.seenProps.add(declaredName);\n        }\n        var previous = wrapper.previous;\n        var previousValue = previous[declaredName];\n        simpleChanges[declaredName] = new SimpleChange(firstChange ? undefined : previousValue && previousValue.currentValue, value, firstChange);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        if (typeof value == 'object' && typeof value.type == 'function')\n            return value.type.name || value.type;\n        return '' + value;\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        var record = view[index + HEADER_OFFSET];\n        // If we're storing an array because of a directive or component with ngOnChanges,\n        // return the directive or component instance.\n        return isOnChangesDirectiveWrapper(record) ? record.instance : record;\n    }\n    /**\n     * Takes the value of a slot in `LView` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LView. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LView`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return readElementValue(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && value.length === LCONTAINER_LENGTH;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 128 /* IsRoot */) !== 0;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lView = Array.isArray(target) ? target : readPatchedLView(target);\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[HOST_NODE];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[HOST_NODE];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     * Equivalent to ES6 spread, add each item to an array.\n     *\n     * @param items The items to add\n     * @param arr The array to which you want to add the items\n     */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[HOST_NODE];\n        }\n        return lView;\n    }\n    function resolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    function resolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    function resolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't descend into ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: typePrototype.ngOnChanges || null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * The TView's hooks arrays are arranged in alternating pairs of directiveIndex and hookFunction,\n     * i.e.: `[directiveIndexA, hookFunctionA, directiveIndexB, hookFunctionB, ...]`. For `OnChanges`\n     * hooks, the `directiveIndex` will be *negative*, signaling {@link callHooks} that the\n     * `hookFunction` must be passed the the appropriate {@link SimpleChanges} object.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (onChanges) {\n            (tView.initHooks || (tView.initHooks = [])).push(-directiveIndex, onChanges);\n            (tView.checkHooks || (tView.checkHooks = [])).push(-directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(directiveIndex, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView` such that\n     * they're added in alternating pairs of directiveIndex and hookFunction,\n     * i.e.: `[directiveIndexA, hookFunctionA, directiveIndexB, hookFunctionB, ...]`\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * Has the side effect of updating the RunInit flag in `lView` to be `0`, so that\n     * this isn't run a second time.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     */\n    function executeInitHooks(currentView, tView, checkNoChangesMode) {\n        if (!checkNoChangesMode && currentView[FLAGS] & 32 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, checkNoChangesMode);\n            currentView[FLAGS] &= ~32 /* RunInit */;\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param lView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = currentView[FLAGS] & 2 /* FirstLViewPass */ ? firstPassHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass, and skipping onChanges hooks if there are no changes present.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            var directiveIndex = arr[i];\n            var hook = arr[i + 1];\n            // Negative indices signal that we're dealing with an `onChanges` hook.\n            var isOnChangesHook = directiveIndex < 0;\n            var directiveOrWrappedDirective = currentView[isOnChangesHook ? -directiveIndex : directiveIndex];\n            var directive = unwrapOnChangesDirectiveWrapper(directiveOrWrappedDirective);\n            if (isOnChangesHook) {\n                var onChanges = directiveOrWrappedDirective;\n                var changes = onChanges.changes;\n                if (changes) {\n                    onChanges.previous = changes;\n                    onChanges.changes = null;\n                    hook.call(onChanges.instance, changes);\n                }\n            }\n            else {\n                hook.call(directive);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== lView[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = lView[QUERIES] = currentQueries.clone());\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        return currentQueries || (lView[QUERIES] = new QueryType(null, null, null));\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    function getFirstTemplatePass() {\n        return firstTemplatePass;\n    }\n    function setFirstTemplatePass(value) {\n        firstTemplatePass = value;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            firstTemplatePass = tView.firstTemplatePass;\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~1 /* CreationMode */;\n        }\n        else {\n            try {\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(8 /* Dirty */ | 2 /* FirstLViewPass */);\n                lView[FLAGS] |= 32 /* RunInit */;\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        enterView(newView, null);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[HOST_NODE] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 3 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringify$1(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[HOST_NODE] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringify$1(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n                var tView = lData[TVIEW];\n                if (value && factory.isProvider && value.ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(index, value.ngOnDestroy);\n                }\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        else {\n            value = unwrapOnChangesDirectiveWrapper(value);\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    function injectInjector() {\n        var tNode = getPreviousOrParentTNode();\n        return new NodeInjector(tNode, getLView());\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (unwrapOnChangesDirectiveWrapper(lView[i]) === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] =\n                    directiveIndex === -1 ? getNativeByTNode(tNode, lView) : lView[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        while (lView[PARENT] && lView[HOST] === null) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = lView[PARENT];\n        }\n        return lView[FLAGS] & 128 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     *\n     */\n    function getRootContext$1(target) {\n        var lViewData = Array.isArray(target) ? target : loadLContext(target).lView;\n        var rootLView = getRootView$1(lViewData);\n        return rootLView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringify$1(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrView any component or view\n     *\n     */\n    function getRootView$1(componentOrView) {\n        var lView;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lView');\n            lView = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lView = readPatchedLView(componentOrView);\n        }\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = readElementValue(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (lView[bindingIndex] === NO_CHANGE) {\n            // initial pass\n            lView[bindingIndex] = value;\n        }\n        else if (isDifferent(lView[bindingIndex], value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                if (!devModeEqual$1(lView[bindingIndex], value)) {\n                    throwErrorIfNoChangesMode(isCreationMode(lView), lView[bindingIndex], value);\n                }\n            }\n            lView[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, node, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveChild(renderer, parent, node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LView, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LView.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 16 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~16 /* Attached */;\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LView */\n    function getLViewChild(lView) {\n        var childIndex = lView[TVIEW].childIndex;\n        return childIndex === -1 ? null : lView[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 64 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[HOST_NODE];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        readElementValue(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // DOM listener\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else if (typeof tCleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = lCleanup[tCleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode).parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (parent == null) {\n            var hostTNode = currentView[HOST_NODE];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            ngDevMode && assertNodeType(parent, 3 /* Element */);\n            // We've got a parent which is an element in the current view. We just need to verify if the\n            // parent element is not a component. Component's content nodes are not inserted immediately\n            // because they will be projected, and so doing insert at this point would be wasteful.\n            // Since the projection would then move it to its final destination.\n            if (parent.flags & 1 /* isComponent */) {\n                return null;\n            }\n            else {\n                return getNativeByTNode(parent, currentView);\n            }\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Removes a native child node from a given native parent node.\n     */\n    function nativeRemoveChild(renderer, parent, child) {\n        isProceduralRenderer(renderer) ? renderer.removeChild(parent, child) :\n            parent.removeChild(child);\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */ ||\n                parentTNode.type === 5 /* IcuContainer */) {\n                var anchorNode = getNativeByTNode(parentTNode, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(renderParent, childEl) :\n                    renderParent.appendChild(childEl);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        var parentNative = getRenderParent(childTNode, currentView);\n        // We only remove the element if it already has a render parent.\n        if (parentNative) {\n            nativeRemoveChild(currentView[RENDERER], parentNative, childEl);\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be perfomed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode. In \"projection\" mode, we do not need to check types, so if tag name\n     * matches selector, we declare a match. In \"directive matching\" mode, we also check whether tNode\n     * is of expected type:\n     * - whether tNode has either Element or ElementContainer type\n     * - or if we want to match \"ng-template\" tag, we check for Container type\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        return currentSelector === tNode.tagName &&\n            (isProjectionMode ||\n                (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) ||\n                (tNode.type === 0 /* Container */ && currentSelector === NG_TEMPLATE_SELECTOR));\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(3 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 3 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null &&\n                    isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true)) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(element, sanitizer, initialStyles, initialClasses) {\n        return [\n            0,\n            [null, -1, false, sanitizer || null],\n            initialStyles || [null],\n            initialClasses || [null],\n            [0, 0],\n            element || null,\n            null,\n            null,\n            null,\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[0 /* MasterFlagPosition */] |= 32 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LView or an LContainer\n        return Array.isArray(value) && typeof value[0 /* MasterFlagPosition */] === 'number' &&\n            Array.isArray(value[2 /* InitialStyleValuesPosition */]);\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[8 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[8 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n    function hasStyling(attrs) {\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (attr == 1 /* Classes */ || attr == 2 /* Styles */)\n                return true;\n        }\n        return false;\n    }\n    function hasClassInput(tNode) {\n        return tNode.flags & 8 /* hasClassInput */ ? true : false;\n    }\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `interfaces/styles.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs) {\n        var context = createEmptyStylingContext();\n        var initialClasses = context[3 /* InitialClassValuesPosition */] =\n            [null];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */] =\n            [null];\n        // The attributes array has marker values (numbers) indicating what the subsequent\n        // values represent. When we encounter a number, we set the mode to that type of attribute.\n        var mode = -1;\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode === 2 /* Styles */) {\n                initialStyles.push(attr, attrs[++i]);\n            }\n            else if (mode === 1 /* Classes */) {\n                initialClasses.push(attr, true);\n            }\n            else if (mode === 3 /* SelectOnly */) {\n                break;\n            }\n        }\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param directive the directive instance with which static data is associated with.\n     */\n    function patchContextWithStaticAttrs(context, attrs, directive) {\n        // If the styling context has already been patched with the given directive's bindings,\n        // then there is no point in doing it again. The reason why this may happen (the directive\n        // styling being patched twice) is because the `stylingBinding` function is called each time\n        // an element is created (both within a template function and within directive host bindings).\n        var directives = context[1 /* DirectiveRegistryPosition */];\n        if (getDirectiveRegistryValuesIndexOf(directives, directive) == -1) {\n            // this is a new directive which we have not seen yet.\n            directives.push(directive, -1, false, null);\n            var initialClasses = null;\n            var initialStyles = null;\n            var mode = -1;\n            for (var i = 0; i < attrs.length; i++) {\n                var attr = attrs[i];\n                if (typeof attr == 'number') {\n                    mode = attr;\n                }\n                else if (mode == 1 /* Classes */) {\n                    initialClasses = initialClasses || context[3 /* InitialClassValuesPosition */];\n                    patchInitialStylingValue(initialClasses, attr, true);\n                }\n                else if (mode == 2 /* Styles */) {\n                    initialStyles = initialStyles || context[2 /* InitialStyleValuesPosition */];\n                    patchInitialStylingValue(initialStyles, attr, attrs[++i]);\n                }\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is not\n     * present (or if it's value is falsy) then it will be inserted/updated in the list\n     * of initial styling values.\n     */\n    function patchInitialStylingValue(initialStyling, prop, value) {\n        // Even values are keys; Odd numbers are values; Search keys only\n        for (var i = 1 /* KeyValueStartPosition */; i < initialStyling.length;) {\n            var key = initialStyling[i];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                // If there is no previous style value (when `null`) or no previous class\n                // applied (when `false`) then we update the the newly given value.\n                if (existingValue == null || existingValue == false) {\n                    initialStyling[i + 1 /* ValueOffset */] = value;\n                }\n                return;\n            }\n            i = i + 2 /* Size */;\n        }\n        // We did not find existing key, add a new one.\n        initialStyling.push(prop, value);\n    }\n    /**\n     * Runs through the initial styling data present in the context and renders\n     * them via the renderer on the element.\n     */\n    function renderInitialStylesAndClasses(element, context, renderer) {\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialClasses, true);\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialStyles, false);\n    }\n    /**\n     * This is a helper function designed to render each entry present within the\n     * provided list of initialStylingValues.\n     */\n    function renderInitialStylingValues(element, renderer, initialStylingValues, isEntryClassBased) {\n        for (var i = 1 /* KeyValueStartPosition */; i < initialStylingValues.length; i += 2 /* Size */) {\n            var value = initialStylingValues[i + 1 /* ValueOffset */];\n            if (value) {\n                if (isEntryClassBased) {\n                    setClass(element, initialStylingValues[i + 0 /* PropOffset */], true, renderer, null);\n                }\n                else {\n                    setStyle(element, initialStylingValues[i + 0 /* PropOffset */], value, renderer, null);\n                }\n            }\n        }\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param directiveRef the directive that the new bindings will reference\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveRef, classBindingNames, styleBindingNames, styleSanitizer, onlyProcessSingleClasses) {\n        if (context[0 /* MasterFlagPosition */] & 32 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var directiveIndex = findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer);\n        if (directiveIndex === -1) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[4 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 9 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `elementStyleProp`\n        // and the `elementClassProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added incase a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = initialValuesToLookup.length + 1 /* ValueOffset */;\n                initialValuesToLookup.push(propName, entryIsClassBased ? false : null);\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 0 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer) {\n        var directiveRefs = context[1 /* DirectiveRegistryPosition */];\n        var nextOffsetInsertionIndex = context[4 /* SinglePropOffsetPositions */].length;\n        var directiveIndex;\n        var detectedIndex = getDirectiveRegistryValuesIndexOf(directiveRefs, directiveRef);\n        if (detectedIndex === -1) {\n            directiveIndex = directiveRefs.length / 4 /* Size */;\n            directiveRefs.push(directiveRef, nextOffsetInsertionIndex, false, styleSanitizer || null);\n        }\n        else {\n            var singlePropStartPosition = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            if (directiveRefs[singlePropStartPosition] >= 0) {\n                // the directive has already been patched into the context\n                return -1;\n            }\n            directiveIndex = detectedIndex / 4 /* Size */;\n            // because the directive already existed this means that it was set during elementHostAttrs or\n            // elementStart which means that the binding values were not here. Therefore, the values below\n            // need to be applied so that single class and style properties can be assigned later.\n            var singlePropPositionIndex = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            directiveRefs[singlePropPositionIndex] = nextOffsetInsertionIndex;\n            // the sanitizer is also apart of the binding process and will be used when bindings are\n            // applied.\n            var styleSanitizerIndex = detectedIndex + 3 /* StyleSanitizerOffset */;\n            directiveRefs[styleSanitizerIndex] = styleSanitizer || null;\n        }\n        return directiveIndex;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput, directiveRef) {\n        stylesInput = stylesInput || null;\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* CachedClassValueOrInitialClassString */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* CachedStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* CachedClassValueOrInitialClassString */] = classesValue;\n        context[7 /* CachedStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARRAY;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARRAY;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARRAY;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // SKIP IF INITIAL CHECK\n                        // If the former `value` is `null` then it means that an initial value\n                        // could be being rendered on screen. If that is the case then there is\n                        // no point in updating the value incase it matches. In other words if the\n                        // new value is the exact same as the previously rendered value (which\n                        // happens to be the initial value) then do nothing.\n                        if (value != null || hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            // same if statement logic as above (look for SKIP IF INITIAL CHECK).\n                            if (valueToCompare != null || hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(context, newProp, isClassBased, getStyleSanitizer(context, directiveIndex));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased, newProp, newFlag, newValue, directiveIndex, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context, directiveIndex);\n        while (propIndex < propLimit) {\n            var isClassBased = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(context, prop, isClassBased, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var ctxIndex_1 = context.length;\n                context.push(flag, prop, value, 0);\n                setPlayerBuilderIndex(context, ctxIndex_1, playerBuilderIndex, directiveIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n            setDirectiveDirty(context, directiveIndex, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, offset, addOrRemove, directiveRef) {\n        _updateSingleStylingValue(context, offset, addOrRemove, true, directiveRef);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     */\n    function updateStyleProp(context, offset, input, directiveRef) {\n        _updateSingleStylingValue(context, offset, input, false, directiveRef);\n    }\n    function _updateSingleStylingValue(context, offset, input, isClassBased, directiveRef) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            allowValueChange(currValue, value, currDirective, directiveIndex)) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setDirectiveDirty(context, directiveIndex, true);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param directiveRef an optional directive that will be used to target which\n     *    styling values are rendered. If left empty, only the bindings that are\n     *    registered on the template will be rendered.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveRef) {\n        var totalPlayersQueued = 0;\n        var targetDirectiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        if (isContextDirty(context) && isDirectiveDirty(context, targetDirectiveIndex)) {\n            var flushPlayerBuilders = context[0 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            var stillDirty = false;\n            for (var i = 9 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var flag = getPointers(context, i);\n                    var directiveIndex = getDirectiveIndexFromEntry(context, i);\n                    if (targetDirectiveIndex !== directiveIndex) {\n                        stillDirty = true;\n                        continue;\n                    }\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex) : null;\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    // Note that we ignore class-based deferals because otherwise a class can never\n                    // be removed in the case that it exists as true in the initial classes list...\n                    if (!isClassBased && !valueExists(valueToApply, isClassBased) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setDirectiveDirty(context, targetDirectiveIndex, false);\n            setContextDirty(context, stillDirty);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 63 /* BitMask */) | (staticIndex << 6 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 6 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[3 /* InitialClassValuesPosition */] :\n            context[2 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 6 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 6 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 9 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[0 /* MasterFlagPosition */]);\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[8 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[8 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[8 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 0 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[0 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 0 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[0 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[0 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = 0;\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, directiveIndexA);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[2 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getDirectiveIndexFromRegistry(context, directive) {\n        var index = getDirectiveRegistryValuesIndexOf(context[1 /* DirectiveRegistryPosition */], directive);\n        ngDevMode &&\n            assertNotEqual(index, -1, \"The provided directive \" + directive + \" has not been allocated to the element's style/class bindings\");\n        return index > 0 ? index / 4 /* Size */ : 0;\n        // return index / DirectiveRegistryValuesIndex.Size;\n    }\n    function getDirectiveRegistryValuesIndexOf(directives, directive) {\n        for (var i = 0; i < directives.length; i += 4 /* Size */) {\n            if (directives[i] === directive) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 1 /* KeyValueStartPosition */; i < keyValues.length; i += 2 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[1 /* DirectiveRegistryPosition */][(directiveIndex * 4 /* Size */) +\n            1 /* SinglePropValuesIndexOffset */];\n        var offsets = context[4 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 4 /* Size */ +\n            3 /* StyleSanitizerOffset */] ||\n            dirs[3 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function isDirectiveDirty(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        return dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */];\n    }\n    function setDirectiveDirty(context, directiveIndex, dirtyYes) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */] = dirtyYes;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced incase an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // ... this decides what to do if and when there is a collision.\n        if (currentValue) {\n            if (newValue) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value incase it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * This function is only designed to be called for `[class]` bindings when\n     * `[ngClass]` (or something that uses `class` as an input) is present. Once\n     * directive host bindings fully work for `[class]` and `[style]` inputs\n     * then this can be deleted.\n     */\n    function getInitialClassNameValue(context) {\n        var className = context[6 /* CachedClassValueOrInitialClassString */];\n        if (className == null) {\n            className = '';\n            var initialClassValues = context[3 /* InitialClassValuesPosition */];\n            for (var i = 1 /* KeyValueStartPosition */; i < initialClassValues.length; i += 2 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            context[6 /* CachedClassValueOrInitialClassString */] = className;\n        }\n        return className;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        setFirstTemplatePass(false);\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!isCreationMode(lView)) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executeInitHooks(lView, tView, checkNoChangesMode);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode);\n            setHostBindings(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        instruction(2 /* Update */, unwrapOnChangesDirectiveWrapper(viewData[currentDirectiveIndex]), currentElementIndex);\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function createLView(parentLView, tView, context, flags, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[FLAGS] = flags | 1 /* CreationMode */ | 16 /* Attached */ | 32 /* RunInit */ |\n            2 /* FirstLViewPass */;\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR] = injector || parentLView && parentLView[INJECTOR] || null;\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            // TODO(misko): Refactor createTNode so that it does not depend on LView.\n            tNode = tView.data[adjustedIndex] = createTNode(lView, type, adjustedIndex, name, attrs, null);\n        }\n        // Now link ourselves into the tree.\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(view, 2 /* View */, index, null, null, null);\n        }\n        return view[HOST_NODE] = view[TVIEW].node;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            tView.data.push(null);\n            view.push(null);\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 4 /* CheckAlways */);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var oldView;\n        if (viewToRender[FLAGS] & 128 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                setFirstTemplatePass(false);\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        try {\n            if (normalExecutionPath && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (isCreationMode(hostView)) {\n                // creation mode pass\n                if (templateFn) {\n                    namespaceHTML();\n                    templateFn(1 /* Create */, context);\n                }\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~1 /* CreationMode */;\n            }\n            // update mode pass\n            templateFn && templateFn(2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        registerPostOrderHooks(tView, previousOrParentTNode);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the first element\n            // is created. Then the styling context is locked and can only be instantiated for each\n            // successive element that is created.\n            if (tView.firstTemplatePass && !tNode.stylingTemplate && hasStyling(attrs)) {\n                tNode.stylingTemplate = initializeStaticContext(attrs);\n            }\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n        }\n        // There is no point in rendering styles when a class directive is present since\n        // it will take that over for us (this will be removed once #FW-882 is in).\n        if (tNode.stylingTemplate && (tNode.flags & 8 /* hasClassInput */) === 0) {\n            renderInitialStylesAndClasses(native, tNode.stylingTemplate, lView[RENDERER]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getFirstTemplatePass()) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, viewData, findDirectiveMatches(tView, viewData, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, viewData, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, viewData, previousOrParentTNode);\n        saveResolvedLocalsInData(viewData, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            changesHooks: null,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i++];\n            if (typeof attrName == 'number') {\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i++];\n                    var attrName_1 = attrs[i++];\n                    var attrVal = attrs[i++];\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                }\n                else {\n                    // All other `AttributeMarker`s are ignored here.\n                    break;\n                }\n            }\n            else {\n                /// attrName is string;\n                var attrVal = attrs[i++];\n                if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n                    // Standard attributes\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    if (isAnimationProp(attrName)) {\n                        if (isProc) {\n                            renderer.setProperty(native, attrName, attrVal);\n                        }\n                    }\n                    else {\n                        isProc ?\n                            renderer\n                                .setAttribute(native, attrName, attrVal) :\n                            native.setAttribute(attrName, attrVal);\n                    }\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function listener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : {};\n            var target = resolved.target || native;\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var useCaptureOrSubIdx = useCapture;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // The first argument of `listen` function in Procedural Renderer is:\n                // - either a target name (as a string) in case of global target (window, document, body)\n                // - or element reference (in all other cases)\n                var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                lCleanup.push(listenerFn, cleanupFn);\n                useCaptureOrSubIdx = lCleanupIndex + 1;\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                target.addEventListener(eventName, wrappedListener, useCapture);\n                lCleanup.push(wrappedListener);\n            }\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(readElementValue(_lView[tNode.index])).target; } :\n                tNode.index;\n            tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCaptureOrSubIdx);\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                // Subscribe to listeners for each output, and setup clean up for each.\n                for (var i = 0; i < propsLength;) {\n                    var directiveIndex = props[i++];\n                    var minifiedName = props[i++];\n                    var declaredName = props[i++];\n                    ngDevMode && assertDataInRange(lView, directiveIndex);\n                    var directive = unwrapOnChangesDirectiveWrapper(lView[directiveIndex]);\n                    var subscription = directive[minifiedName].subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        registerPostOrderHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        if (hasClassInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs, 'class', getInitialClassNameValue(stylingContext));\n        }\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element_1 = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var tNode = getTNode(index, lView);\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value, tNode.tagName || '', name);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function elementProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub components renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function componentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n    }\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, inputData, propName, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(lView, type, adjustedIndex, tagName, attrs, tViews) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && ngDevMode.tNode++;\n        var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && lView && parent !== lView[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputAliases mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param publicName public binding name. (This is the `<div [publicName]=value>`)\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputAliases, publicName, value) {\n        var inputs = inputAliases[publicName];\n        for (var i = 0; i < inputs.length;) {\n            var directiveIndex = inputs[i++];\n            var privateName = inputs[i++];\n            var declaredName = inputs[i++];\n            ngDevMode && assertDataInRange(lView, directiveIndex);\n            recordChangeAndUpdateProperty(lView[directiveIndex], declaredName, privateName, value);\n        }\n    }\n    function setNgReflectProperties(lView, element, type, inputs, value) {\n        var _a;\n        for (var i = 0; i < inputs.length;) {\n            var directiveIndex = inputs[i++];\n            var privateName = inputs[i++];\n            var declaredName = inputs[i++];\n            var renderer = lView[RENDERER];\n            var attrName = normalizeDebugBindingName(privateName);\n            var debugValue = normalizeDebugBindingValue(value);\n            if (type === 3 /* Element */) {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n            else if (value !== undefined) {\n                var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setValue(element, value_1);\n                }\n                else {\n                    element.textContent = value_1;\n                }\n            }\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNodeFlags node flags\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var publicToMinifiedNames = isInput ? directiveDef.inputs : directiveDef.outputs;\n                var publicToDeclaredNames = isInput ? directiveDef.declaredInputs : null;\n                for (var publicName in publicToMinifiedNames) {\n                    if (publicToMinifiedNames.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var minifiedName = publicToMinifiedNames[publicName];\n                        var declaredName = publicToDeclaredNames ? publicToDeclaredNames[publicName] : minifiedName;\n                        var aliases = propStore.hasOwnProperty(publicName) ?\n                            propStore[publicName] :\n                            propStore[publicName] = [];\n                        aliases.push(i, minifiedName, declaredName);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note for static values (no binding)\n     * see `elementStart` and `elementHostAttrs`.\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementClassProp` refers to the class name by index in this array.\n     *        (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementStyleProp` refers to the class name by index in this array.\n     *        (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        property values that are applied to the element (during rendering).\n     *        Note that the sanitizer instance itself is tied to the `directive` (if  provided).\n     * @param directive A directive instance the styling is associated with. If not provided\n     *        current view's controller instance is assumed.\n     *\n     * @publicApi\n     */\n    function elementStyling(classBindingNames, styleBindingNames, styleSanitizer, directive) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        updateContextWithBindings(tNode.stylingTemplate, directive || null, classBindingNames, styleBindingNames, styleSanitizer, hasClassInput(tNode));\n    }\n    /**\n     * Assign static styling values to a host element.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array containing class and styling information. The values must be marked with\n     *              `AttributeMarker`.\n     *\n     *        ```\n     *        var attrs = [AttributeMarker.Classes, 'foo', 'bar',\n     *                     AttributeMarker.Styles, 'width', '100px', 'height, '200px']\n     *        elementHostAttrs(directive, attrs);\n     *        ```\n     *\n     * @publicApi\n     */\n    function elementHostAttrs(directive, attrs) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = initializeStaticContext(attrs);\n        }\n        patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, directive);\n    }\n    /**\n     * Apply styling binding to the element.\n     *\n     * This instruction is meant to be run after `elementStyle` and/or `elementStyleProp`.\n     * if any styling bindings have changed then the changes are flushed to the element.\n     *\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStylingApply(index, directive) {\n        var lView = getLView();\n        var isFirstRender = (lView[FLAGS] & 2 /* FirstLViewPass */) !== 0;\n        var totalPlayersQueued = renderStyling(getStylingContext(index + HEADER_OFFSET, lView), lView[RENDERER], lView, isFirstRender, null, null, directive);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Update a style bindings value on an element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling element is updated as part of `elementStylingApply`.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementStlyingBindings`.\n     * @param value New value to write (null to remove). Note that if a directive also\n     *        attempts to write to the same binding value then it will only be able to\n     *        do so if the template binding value is `null` (or doesn't exist at all).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, directive) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd, directive);\n    }\n    /**\n     * Add or remove a class via a class binding on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case and, therefore,\n     * the class itself must already be applied using `elementStyling` within\n     * the creation block.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementStlyingBindings` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementClassProp(index, classIndex, value, directive) {\n        var onOrOffClassValue = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, onOrOffClassValue, directive);\n    }\n    /**\n     * Update style and/or class bindings using object literal.\n     *\n     * This instruction is meant apply styling via the `[style]=\"exp\"` and `[class]=\"exp\"` template\n     * bindings. When styles are applied to the Element they will then be placed with respect to\n     * any styles set with `elementStyleProp`. If any styles are set to `null` then they will be\n     * removed from the element.\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n     *\n     * @publicApi\n     */\n    function elementStylingMap(index, classes, styles, directive) {\n        if (directive != undefined)\n            return hackImplementationOfElementStylingMap(index, classes, styles, directive); // supported in next PR\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = getInitialClassNameValue(stylingContext);\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(lView, tNode.inputs, 'class', classInputVal);\n        }\n        else {\n            updateStylingMap(stylingContext, classes, styles);\n        }\n    }\n    /* START OF HACK BLOCK */\n    function hackImplementationOfElementStylingMap(index, classes, styles, directive) {\n        throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n    }\n    /* END OF HACK BLOCK */\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n                element_2.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!getFirstTemplatePass() && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = getFirstTemplatePass();\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = unwrapOnChangesDirectiveWrapper(viewData[i]);\n            if (def.hostBindings) {\n                var previousExpandoLength = expando.length;\n                setCurrentDirectiveDef(def);\n                def.hostBindings(1 /* Create */, directive, tNode.index - HEADER_OFFSET);\n                setCurrentDirectiveDef(null);\n                // `hostBindings` function may or may not contain `allocHostVars` call\n                // (e.g. it may not if it only contains host listeners), so we need to check whether\n                // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n                // expando block, to make sure we execute it for DI cycle\n                if (previousExpandoLength === expando.length && firstTemplatePass) {\n                    expando.push(def.hostBindings);\n                }\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(lView, directive, def, directiveDefIdx) {\n        if (def.onChanges) {\n            // We have onChanges, wrap it so that we can track changes.\n            lView[directiveDefIdx] = new OnChangesDirectiveWrapper(lView[directiveDefIdx]);\n        }\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(lView, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(lView, directiveDefIdx, def, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, lView);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n        // TODO(misko): setUpAttributes should be a feature for better treeshakability.\n        if (def.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, def.attributes);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var tView = getLView()[TVIEW];\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n    */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), false, null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, previousOrParentTNode.index, createLView(lView, tView, null, def.onPush ? 8 /* Dirty */ : 4 /* CheckAlways */, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = lView[previousOrParentTNode.index];\n        lView[previousOrParentTNode.index] = componentView;\n        if (getFirstTemplatePass()) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(lView, directiveIndex, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var directiveOrWrappedDirective = lView[directiveIndex];\n            for (var i = 0; i < initialInputs.length;) {\n                var privateName = initialInputs[i++];\n                var declaredName = initialInputs[i++];\n                var attrValue = initialInputs[i++];\n                recordChangeAndUpdateProperty(directiveOrWrappedDirective, declaredName, privateName, attrValue);\n            }\n        }\n    }\n    /**\n     * Checks to see if the instanced passed as `directiveOrWrappedDirective` is wrapped in {@link\n     * OnChangesDirectiveWrapper} or not.\n     * If it is, it will update the related {@link SimpleChanges} object with the change to signal\n     * `ngOnChanges` hook\n     * should fire, then it will unwrap the instance. After that, it will set the property with the key\n     * provided\n     * in `privateName` on the instance with the passed value.\n     * @param directiveOrWrappedDirective The directive instance or a directive instance wrapped in\n     * {@link OnChangesDirectiveWrapper}\n     * @param declaredName The original, declared name of the property to update.\n     * @param privateName The private, possibly minified name of the property to update.\n     * @param value The value to update the property with.\n     */\n    function recordChangeAndUpdateProperty(directiveOrWrappedDirective, declaredName, privateName, value) {\n        var instance;\n        if (isOnChangesDirectiveWrapper(directiveOrWrappedDirective)) {\n            instance = unwrapOnChangesDirectiveWrapper(directiveOrWrappedDirective);\n            recordChange(directiveOrWrappedDirective, declaredName, value);\n        }\n        else {\n            instance = directiveOrWrappedDirective;\n        }\n        instance[privateName] = value;\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, directiveDef, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            // If we hit Select-Only, Classes or Styles, we're done anyway. None of those are valid inputs.\n            if (attrName === 3 /* SelectOnly */ || attrName === 1 /* Classes */ ||\n                attrName === 2 /* Styles */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var privateName = directiveDef.inputs[attrName];\n            var declaredName = directiveDef.declaredInputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (privateName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(privateName, declaredName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (getFirstTemplatePass()) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        var currentQueries = lView[QUERIES];\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        attachPatchData(native, lView);\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        registerPostOrderHooks(tView, tNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        getFirstTemplatePass() && (tNode.tViews = []);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(lView[adjustedIndex], lView, comment);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, index + HEADER_OFFSET, lContainer);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executeInitHooks(lView, tView, getCheckNoChangesMode());\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = getLViewChild(lView); current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 4 /* CheckAlways */);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[HOST_NODE];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~1 /* CreationMode */;\n        }\n        refreshDescendantViews(lView); // update mode pass\n        leaveView(lView[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (4 /* CheckAlways */ | 8 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 16 /* Attached */) === 16 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(lView);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 2 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param state The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, adjustedHostIndex, state) {\n        var tView = lView[TVIEW];\n        var firstTemplatePass = getFirstTemplatePass();\n        if (lView[TAIL]) {\n            lView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        lView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 4 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 8 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n            lView[FLAGS] |= 8 /* Dirty */;\n            lView = lView[PARENT];\n        }\n        lView[FLAGS] |= 8 /* Dirty */;\n        return lView;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        if (isCreationMode(view)) {\n            checkView(view, context); // creation mode pass\n        }\n        checkView(view, context); // update mode pass\n        if (rendererFactory.end)\n            rendererFactory.end();\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView, component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            updateViewQuery(viewQuery, hostView, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, view, component) {\n        if (viewQuery && isCreationMode(view)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, view, component) {\n        if (viewQuery && !isCreationMode(view)) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        var lView = getLView();\n        return bindingUpdated(lView, lView[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     */\n    function allocHostVars(count) {\n        if (!getFirstTemplatePass())\n            return;\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX], v0);\n        lView[BINDING_INDEX] += 1;\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated2(lView, lView[BINDING_INDEX], v0, v1);\n        lView[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated3(lView, lView[BINDING_INDEX], v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated4(lView, lView[BINDING_INDEX], v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    function loadQueryList(queryListIdx) {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], queryListIdx);\n        return lView[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(getLView(), index);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList, currentDirectiveIndex) {\n        var viewData = getLView();\n        var tView = viewData[TVIEW];\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (getFirstTemplatePass()) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return getLView();\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lView);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    /*\n     * Publishes a collection of default debug tools onto `window._ng_`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    var _published = false;\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ngDevMode` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 8 /* Dirty */ | 128 /* IsRoot */ :\n            4 /* CheckAlways */ | 128 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~1 /* CreationMode */;\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 8 /* Dirty */ : 4 /* CheckAlways */, rendererFactory, renderer, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var rootTNode = getPreviousOrParentTNode();\n            setCurrentDirectiveDef(componentDef);\n            componentDef.hostBindings(1 /* Create */, component, rootTNode.index - HEADER_OFFSET);\n            setCurrentDirectiveDef(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            superHostBindings_1(rf, ctx, elementIndex);\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (dirIndex) {\n                            superContentQueries_1(dirIndex);\n                            prevContentQueries_1(dirIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                definition.onChanges = definition.onChanges || superDef.onChanges;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    definition.onChanges = definition.onChanges || superPrototype.ngOnChanges;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR$1 = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR$1); },\n        });\n        /** @internal */\n        /** @nocollapse */\n        Injector.__NG_ELEMENT_ID__ = function () { return SWITCH_INJECTOR_FACTORY(); };\n        return Injector;\n    }());\n    var SWITCH_INJECTOR_FACTORY__POST_R3__ = function () {\n        return injectInjector();\n    };\n    var SWITCH_INJECTOR_FACTORY__PRE_R3__ = noop;\n    var SWITCH_INJECTOR_FACTORY = SWITCH_INJECTOR_FACTORY__PRE_R3__;\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR$1 = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR$1; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR$1, { token: INJECTOR$1, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR$1 : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR$1, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Cannot instantiate cyclic dependency! \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            else if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            else if (token instanceof Function) {\n                var paramLength = token.length;\n                if (paramLength > 0) {\n                    var args = new Array(paramLength).fill('?');\n                    throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n                }\n                return function () { return new token(); };\n            }\n            throw new Error('unreachable');\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    var ngModuleDetail = '';\n                    if (ngModuleType && providers) {\n                        var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n                        ngModuleDetail =\n                            \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n                    }\n                    throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, true, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, true, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[HOST_NODE];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 64 /* Destroyed */) === 64 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~16 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 16 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context =\n                unwrapOnChangesDirectiveWrapper(this._lView[PARENT][this._componentIndex]);\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            result.push(getNativeByTNode(tNodeChild, lView));\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getLView()[RENDERER], hostContainer[QUERIES], hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], view[CONTAINER_INDEX]) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, true);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        /** @nocollapse */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        /** @nocollapse */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('7.2.0+133.sha-b73d678');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver$$1(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory$$1(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            // The component definition does not include the wildcard ('*') selector in its list.\n            // It is implicitly expected as the first item in the projectable nodes array.\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? __spread(['*'], componentDef.ngContentSelectors) : [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 8 /* Dirty */ | 128 /* IsRoot */ :\n                4 /* CheckAlways */ | 128 /* IsRoot */;\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var tView = rootLView[TVIEW];\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            if (tView.firstTemplatePass) {\n                                // For dynamically created components such as ComponentRef, we create a new TView for\n                                // each insert. This is not ideal since we should be sharing the TViews.\n                                // Also the logic here should be shared with `component.ts`'s `renderComponent`\n                                // method.\n                                tView.expandoStartIndex++;\n                                tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n                                tView.data.splice(index + HEADER_OFFSET, 0, null);\n                                rootLView.splice(index + HEADER_OFFSET, 0, null);\n                            }\n                            var tNode = createNodeAtIndex(index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, HEADER_OFFSET, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = createViewNode(-1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            this.hostView.destroy();\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEX = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostproocess regexps\n    var PP_PLACEHOLDERS = /\\[(�.+?�?)\\]/g;\n    var PP_ICU_VARS = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEX.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEX, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var expandoStartIndex = tView.blueprint.length - HEADER_OFFSET;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[HOST_NODE] ?\n            parentTNode.index - HEADER_OFFSET :\n            index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = value.split(ICU_REGEXP);\n                for (var j = 0; j < parts.length; j++) {\n                    value = parts[j];\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        allocExpando(viewData);\n                        var icuNodeIndex = tView.blueprint.length - 1 - HEADER_OFFSET;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parseICUBlock(value.substr(1, value.length - 2));\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (value !== '') {\n                        // Even indexes are text (including bindings)\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        // Create text nodes\n                        allocExpando(viewData);\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, tView.blueprint.length - 1 - HEADER_OFFSET), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: tView.blueprint.length - HEADER_OFFSET - expandoStartIndex,\n            expandoStartIndex: expandoStartIndex,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[HOST_NODE]) {\n            tNode.parent = parentTNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        //\n        // Step 1: resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n        //\n        var matches = {};\n        var result = message.replace(PP_PLACEHOLDERS, function (_match, content) {\n            if (!matches[content]) {\n                matches[content] = content.split('|');\n            }\n            if (!matches[content].length) {\n                throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n            }\n            return matches[content].shift();\n        });\n        // verify that we injected all values\n        var hasUnmatchedValues = Object.keys(matches).some(function (key) { return !!matches[key].length; });\n        if (hasUnmatchedValues) {\n            throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches));\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        //\n        // Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n        //\n        result = result.replace(PP_ICU_VARS, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        //\n        // Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n        // in case multiple ICUs have the same placeholder name\n        //\n        result = result.replace(PP_ICUS, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // The last placeholder that was added before `i18nEnd`\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var visitedPlaceholders = readCreateOpCodes(rootIndex, tI18n.create, tI18n.expandoStartIndex, viewData);\n        // Remove deleted placeholders\n        // The last placeholder that was added before `i18nEnd` is `previousOrParentTNode`\n        for (var i = rootIndex + 1; i <= previousOrParentTNode.index - HEADER_OFFSET; i++) {\n            if (visitedPlaceholders.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    function readCreateOpCodes(index, createOpCodes, expandoStartIndex, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedPlaceholders = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createNodeAtIndex(expandoStartIndex++, 3 /* Element */, textRNode, null, null);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[HOST_NODE];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        destinationTNode.next = null;\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedPlaceholders.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 5 /* IcuContainer */, commentRNode, null, null);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 3 /* Element */, elementRNode, tagNameValue, null);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedPlaceholders;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += stringify$1(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    var tIcuIndex = updateOpCodes[++j];\n                                    var tIcu = icus[tIcuIndex];\n                                    var icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], tIcu.expandoStartIndex, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            removeChild(removedPhTNode, removedPhRNode, viewData);\n        }\n        removedPhTNode.detached = true;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                removeChild(removedPhTNode, lContainer[NATIVE], viewData);\n            }\n        }\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            expandoStartIndex: expandoStartIndex + 1, childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        var lView = getLView();\n        var worstCaseSize = Math.max.apply(Math, __spread(vars));\n        for (var i = 0; i < worstCaseSize; i++) {\n            allocExpando(lView);\n        }\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element$$1 = currentNode;\n                        var tagName = element$$1.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element$$1.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders);\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR$1) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$1(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$1(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$1(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        /** @nocollapse */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queryList._valuesTree = [];\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(getLView(), queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree || []);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return sanitizeResourceUrl;\n        }\n        return sanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     */\n    function sanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵloadQueryList': loadQueryList,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵallocHostVars': allocHostVars,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵcomponentHostSyntheticProperty': componentHostSyntheticProperty,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵquery': query,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵregisterContentQuery': registerContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementHostAttrs': elementHostAttrs,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵresolveWindow': resolveWindow,\n        'ɵresolveDocument': resolveDocument,\n        'ɵresolveBody': resolveBody,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl,\n        'ɵsanitizeUrlOrResourceUrl': sanitizeUrlOrResourceUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing, ngModuleType);\n        modules.set(id, ngModuleType);\n    }\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = modules.get(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = modules.get(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__PRE_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$2(ngModule.bootstrap || EMPTY_ARRAY$2, resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten$2(ngModule.imports || EMPTY_ARRAY$2, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten$2(ngModule.exports || EMPTY_ARRAY$2, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        if (ngModule.id) {\n            registerNgModuleType(ngModule.id, moduleType);\n        }\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$2,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$2).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$2).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        ngModuleDef.declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(ngModuleDef.declarations.map(resolveForwardRef), flatten$2(ngModuleDef.imports.map(computeCombinedExports), resolveForwardRef));\n        ngModuleDef.exports.forEach(verifyExportsAreDeclaredOrReExported);\n        ngModuleDef.declarations.forEach(verifyDeclarationIsUnique);\n        ngModuleDef.declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten$2(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringify$1(type) + \"' declared by the module '\" + stringify$1(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringify$1(type) + \" from \" + stringify$1(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(stringify$1).sort();\n                errors.push(\"Type \" + stringify$1(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + stringify$1(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + stringify$1(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringify$1(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited\n     * by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten$2(ngModuleDef.exports.map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$2(values, mapFn) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$2(value, mapFn)));\n            }\n            else {\n                out.push(mapFn ? mapFn(value) : value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify$1(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify$1(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var meta = __assign({}, directiveMetadata(type, metadata), { template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, viewQueries: extractQueriesMetadata(type, getReflect().propMetadata(type), isViewQuery), directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/template.html\", meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var facade = directiveMetadata(type, directive);\n                    ngDirectiveDef = getCompilerFacade().compileDirective(angularCoreEnv, \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\", facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n        };\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringify$1(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Returns a function that will update the static definition on a class to have the\n     * appropriate input or output mapping.\n     *\n     * Will also add an {@link ngBaseDef} property to a directive if no `ngDirectiveDef`\n     * or `ngComponentDef` is present. This is done because a class may have {@link InputDecorator}s and\n     * {@link OutputDecorator}s without having a {@link ComponentDecorator} or {@link DirectiveDecorator},\n     * and those inputs and outputs should still be inheritable, we need to add an\n     * `ngBaseDef` property if there are no existing `ngComponentDef` or `ngDirectiveDef`\n     * properties, so that we can track the inputs and outputs for inheritance purposes.\n     *\n     * @param getPropertyToUpdate A function that maps to either the `inputs` property or the\n     * `outputs` property of a definition.\n     * @returns A function that, the called, will add a `ngBaseDef` if no other definition is present,\n     * then update the `inputs` or `outputs` on it, depending on what was selected by `getPropertyToUpdate`\n     *\n     *\n     * @see InputDecorator\n     * @see OutputDecorator\n     * @see InheritenceFeature\n     */\n    function getOrCreateDefinitionAndUpdateMappingFor(getPropertyToUpdate) {\n        return function updateIOProp(target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            var def = constructor[NG_COMPONENT_DEF] || constructor[NG_DIRECTIVE_DEF] || constructor[NG_BASE_DEF];\n            if (!def) {\n                initializeBaseDef(target);\n                def = constructor[NG_BASE_DEF];\n            }\n            var defProp = getPropertyToUpdate(def);\n            // Use of `in` because we *do* want to check the prototype chain here.\n            if (!(name in defProp)) {\n                defProp[name] = args[0];\n            }\n        };\n    }\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, getOrCreateDefinitionAndUpdateMappingFor(function (def) { return def.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, getOrCreateDefinitionAndUpdateMappingFor(function (def) { return def.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$2 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$2 });\n    var EMPTY_ARRAY$3 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$3))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var ɵ0$3 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$3 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError$1(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError$1(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        return new ModuleWithComponentFactories(Compiler_compileModuleSync__POST_R3__(moduleType), []);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = Promise.resolve(0);\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        /** @nocollapse */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        /** @nocollapse */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement && getComponent(nativeElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tView = lView[TVIEW];\n                var tNode = tView.data[context.nodeIndex];\n                var properties = {};\n                // TODO: https://angular-team.atlassian.net/browse/FW-681\n                // Missing implementation here...\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(lNode, i)) {\n                                var className = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(lNode, i)) {\n                                var styleName = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n        if (parentNode instanceof DebugElement__POST_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__POST_R3__) {\n                    if (elementsOnly ? node.nativeElement : true) {\n                        _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                    }\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__PRE_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue$1(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR$1);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR$1);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_q = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_n = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_o = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_p = _localeFactory;\n    exports.ɵangular_packages_core_core_r = zoneSchedulerFactory;\n    exports.ɵangular_packages_core_core_e = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_l = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_m = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_k = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_j = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_a = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_b = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_c = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_d = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_i = getModuleFactory__PRE_R3__;\n    exports.ɵangular_packages_core_core_s = wtfEnabled;\n    exports.ɵangular_packages_core_core_u = createScope;\n    exports.ɵangular_packages_core_core_t = detectWTF;\n    exports.ɵangular_packages_core_core_x = endTimeRange;\n    exports.ɵangular_packages_core_core_v = leave;\n    exports.ɵangular_packages_core_core_w = startTimeRange;\n    exports.ɵangular_packages_core_core_ba = SCHEDULER;\n    exports.ɵangular_packages_core_core_bb = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_bc = getLView;\n    exports.ɵangular_packages_core_core_bd = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_be = nextContextImpl;\n    exports.ɵangular_packages_core_core_bj = BoundPlayerFactory;\n    exports.ɵangular_packages_core_core_bg = loadInternal;\n    exports.ɵangular_packages_core_core_f = createElementRef;\n    exports.ɵangular_packages_core_core_g = createTemplateRef;\n    exports.ɵangular_packages_core_core_h = createViewRef;\n    exports.ɵangular_packages_core_core_bh = getUrlSanitizer;\n    exports.ɵangular_packages_core_core_bk = makeParamDecorator;\n    exports.ɵangular_packages_core_core_bl = makePropDecorator;\n    exports.ɵangular_packages_core_core_bn = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_y = _def;\n    exports.ɵangular_packages_core_core_z = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR$1;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ɵinject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵquery = query;\n    exports.ɵregisterContentQuery = registerContentQuery;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵloadQueryList = loadQueryList;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵcomponentHostSyntheticProperty = componentHostSyntheticProperty;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵallocHostVars = allocHostVars;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementHostAttrs = elementHostAttrs;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵresolveWindow = resolveWindow;\n    exports.ɵresolveDocument = resolveDocument;\n    exports.ɵresolveBody = resolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵsanitizeUrlOrResourceUrl = sanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵSWITCH_INJECTOR_FACTORY__POST_R3__ = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue$1;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}