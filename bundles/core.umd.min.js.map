{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","compiler","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","text","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","EMPTY$1","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","pipeTypes","pipes","directiveTypes","directives","declaredInputs","encapsulation","Emulated","styles","animations","def","diPublic","consts","vars","hostVars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","invertObject","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","extractDirectiveDef","pipeDefs","extractPipeDef","selectors","viewQuery","features","viewProviders","id","feature","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","HEADER_OFFSET","TVIEW","PARENT","NEXT","QUERIES","FLAGS","HOST_NODE","BINDING_INDEX","DIRECTIVES","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","MONKEY_PATCH_KEY_NAME","getContext","mpValue","readPatchedData","lViewData","lNodeIndex","directiveIndices","isComponentInstance","findViaComponent","isDirectiveInstance","instance","findViaDirective","directiveInstance","directivesAcrossView","directiveIndex","tNode","firstChild","directiveIndexStart","getDirectiveStartIndex","directiveIndexEnd","getDirectiveEndIndex","traverseNextElement","discoverDirectiveIndices","discoverDirectives","directiveInstances","findViaNativeElement","existingCtx","lNode","getLNodeFromViewData","native","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","getLElementFromComponent","componentInstance","readElementValue","readPatchedLViewData","child","componentIndices","components","elementComponentIndex","lElementIndex","startIndex","count","queueInitHooks","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","arr","throwMultipleComponentError","tagName","RendererStyleFlags3","ACTIVE_INDEX","VIEWS","RENDER_PARENT","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","stringify$1","loadInternal","getLNode","hostView","isContentQueryHost","getRootView","getParentLNode","getHostElementNode","hostTNode","getParentOrContainerNode","parentTNode","getContainerNode","embeddedView","containerHostIndex","dynamicLContainerNode","getContainerRenderParent","tViewNode","view","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParentNode","beforeNode","rootTNode","node","projectionNodeIndex","nextTNode","elementNode","executeNodeAction","lContainerNode","childContainerData","componentView","findComponentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","lView","lContainer","parentView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","tContainer","destroyLView","getLViewChild","viewData","childIndex","hostNode","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","destroy","getRenderParent","canInsertNativeNode","currentNode","getHighestElementContainer","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentLNode","parentEl","renderParent","getBeforeNodeForView","ngContainer","parentNative","appendProjectedNode","projectedLNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","createEmptyStylingContext","element","sanitizer","initialStylingValues","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","isClassBased_5","valueExists","setDirty","setContextDirty","setStyle","prop","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","setFlag","getProp","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","rendererFactory","elementDepthCount","previousOrParentTNode","isParent","currentQueries","_CLEAN_PROMISE","HEADER_FILLER","fill","CIRCULAR$1","getRenderer","getRendererFactory","getCurrentSanitizer","getCurrentView","restoreView","viewToRestore","contextViewData","getPreviousOrParentNode","getPreviousOrParentTNode","_getViewData","getCleanup","getTViewCleanup","checkNoChangesMode","bindingRootIndex","getBindingRoot","enterView","newView","oldView","bindingStartIndex","leaveView","creationOnly","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","setHostBindings","refreshChildComponents","componentRefresh","bindings","hostBindingStartIndex","defs","dirIndex","executeInitAndContentHooks","createLViewData","blueprint","createLNodeObject","nodeInjector","createNodeAtIndex","parentInSameView","tParent","isState","createTNode","tData","tNode_1","dynamicContainerNode","adjustBlueprintForNewNode","resetComponentState","viewToRender","rf","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","nextContext","level","walkUpViews","nestingLevel","renderComponentOrTemplate","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","localRefs","elementStart","elementEnd","elementCreate","setUpAttributes","createDirectivesAndLocals","overriddenRenderer","rendererToUse","createElement","createElementNS","nativeNodeLocalRefExtractor","localRefExtractor","cacheMatchingDirectivesForNode","exportsMap","","matches","currentMatches","findDirectiveMatches","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","instantiateDirectivesDirectly","clone","tDirectives","addComponentLogic","directiveCreate","saveResolvedLocalsInData","localIndex","registry","directiveRegistry","throwCyclicDependencyError","queueComponentIndexForCheck","queueHostBindingForCheck","NO_CHANGE","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","tag","rNode","listener","eventName","listenerFn","useCapture","listen","storeCleanupFn","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","addEventListener","cleanupInstances","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","elementAttribute","element_1","loadElement","removeAttribute","strValue","elementProperty","getTNode","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","tViews","initialInputs","stylingTemplate","tNodeFlags","direction","propStore","isInput","directiveDef","propertyAliasMap","internalName","elementClassProp","stylingIndex","updateClassProp","addOrRemove","getStylingContext","elementStyling","classDeclarations","styleDeclarations","styleSanitizer","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","elementStylingApply","stylingContext","load","lElement","allocStylingContext","templateStyleContext","renderStyling","styleStore","classStore","isContextDirty","multiStartIndex","isClassBased_6","valueToApply","elementStyleProp","styleIndex","suffix","valueToAdd","elementStylingMap","classes","updateStylingMap","applyAllClasses","ignoreAllClassUpdates","cachedClassString","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","isClassBased_3","isClassBased_4","textNative","textBinding","existingNode","textContent","directive","baseDirectiveCreate","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","addToViewTree","createLContainer","isForViewContainerRef","containerInternal","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","nodeIndex","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","rootContext","nothingScheduled","scheduleTick","res_1","clean","scheduler","playerHandler","flushPlayers","rootComponent","detectChanges","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","bindingUpdated","interpolationV","different","content","interpolation1","prefix","v0","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","bindingUpdated3","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","loadDirective","loadQueryList","queryListIdx","loadElementInternal","getBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","oldValue","msg","updateBinding","exp1","exp2","exp3","exp4","getTView","registerContentQuery","queryList","savedContentQueriesLength","currentDirectiveIndex","tViewContentQueries","CLEAN_PROMISE","createRootComponent","componentDef","hostFeatures","createRootContext","LifecycleHooksFeature","rootTView","isComponentDef","definition","InheritDefinitionFeature","superType","getSuperType","getPrototypeOf","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","elementIndex","prevViewQuery_1","superViewQuery_1","ctx","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","setter_1","simpleChanges","writable","currentChange","configurable","onChangesWrapper","delegateHook","ngOnChanges","RendererStyleFlags2","ChangeDetectorRef","ElementRef","nativeElement","NgModuleRef","NgModuleFactory","TemplateRef","ViewContainerRef","RenderComponentType","slotCount","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngModule","_this","ngContentSelectors","projectableNodes","rootSelectorOrNode","ViewRef","_view","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","_lookUpContext","enumerable","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","checkNoChangesInRootView","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","setTimeout","WRAP_RENDERER_FACTORY2","ComponentFactory$$1","isInternalRootView","wrapper","rootFlags","tElementNode","componentTag","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","destroyCbs","changeDetectorRef","location","NG_ELEMENT_ID","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","parentInjector","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","diPublicInInjector","di","bloomAdd","bloomBit","mask","b6","b5","directiveInject","getOrCreateInjectable","injectElementRef","createElementRef","injectTemplateRef","createTemplateRef","injectViewContainerRef","createContainerRef","injectChangeDetectorRef","createViewRef","injectRenderer2","getOrCreateRenderer2","injectAttribute","attrNameToInject","isComponent","componentIndex","hostComponentView","bloomHash","bloomHashBit","bloomFindPossibleInjector","injectorView","nodeFlags","searchMatchesQueuedForCreation","sameHostView","formerInjector","startInjector","b7","ReadFromInjectorFn","read","ElementRef$1","ElementRef$$1","hostLNode","ViewContainerRef$1","NodeInjector","_lInjector","ViewContainerRef$$1","_lContainer","_tContainerNode","_hostTNode","_hostView","_viewRefs","_getHostNode","parentLInjector","clear","createEmbeddedView","templateRef","adjustedIdx","_adjustIndex","viewRef","createComponent","componentFactory","ngModuleRef","contextInjector","insert","destroyed","container$$1","move","newIndex","shift","TemplateRef$1","getFactoryOf","typeAny","getInheritedFactory","TemplateRef$$1","_declarationParentView","elementRef","_tView","_renderer","_queries","createEmbeddedViewAndNode","declarationView","queries","templateRefExtractor","PublicFeature","i18nTagRegex","appendI18nNode","APP_ROOT","NOT_YET","CIRCULAR$2","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","imported","delete","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","existing","multiRecord_1","hasOnDestroy","input","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","_bootstrapComponents","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","isPure","transform","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","LQueries_","shallow","deep","track","predicate","descend","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","result","containerValues","list","viewValuesIdx","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","previous","createPredicate","_valuesTree","QueryList","QueryList_","changes","_values","filter","find","reduce","init","some","toArray","reset","flatten","item","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ÉµdefineBase","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","ÉµdefinePipe","ÉµdirectiveInject","ÉµgetFactoryOf","ÉµgetInheritedFactory","ÉµinjectAttribute","ÉµinjectChangeDetectorRef","ÉµinjectElementRef","ÉµinjectTemplateRef","ÉµinjectViewContainerRef","ÉµtemplateRefExtractor","ÉµinjectRenderer2","ÉµNgOnChangesFeature","ÉµPublicFeature","ÉµInheritDefinitionFeature","ÉµelementAttribute","Éµbind","Éµcontainer","ÉµnextContext","ÉµcontainerRefreshStart","ÉµcontainerRefreshEnd","ÉµloadDirective","ÉµloadQueryList","ÉµnamespaceHTML","ÉµnamespaceMathML","ÉµnamespaceSVG","ÉµelementStart","ÉµelementEnd","Éµelement","ÉµEC","elementContainerStart","ÉµeC","elementContainerEnd","ÉµpureFunction0","ÉµpureFunction1","ÉµpureFunction2","ÉµpureFunction3","ÉµpureFunction4","ÉµpureFunction5","ÉµpureFunction6","ÉµpureFunction7","ÉµpureFunction8","ÉµpureFunctionV","ÉµgetCurrentView","ÉµrestoreView","Éµinterpolation1","Éµinterpolation2","Éµinterpolation3","Éµinterpolation4","Éµinterpolation5","Éµinterpolation6","Éµinterpolation7","Éµinterpolation8","ÉµinterpolationV","ÉµelementClassProp","Éµlistener","Éµload","Éµprojection","ÉµelementProperty","ÉµpipeBind1","ÉµpipeBind2","ÉµpipeBind3","ÉµpipeBind4","ÉµpipeBindV","ÉµprojectionDef","Éµpipe","Éµquery","ÉµqueryRefresh","ÉµregisterContentQuery","Éµreference","ÉµelementStyling","ÉµelementStylingMap","ÉµelementStylingProp","ÉµelementStylingApply","Éµtemplate","Éµtext","ÉµtextBinding","ÉµembeddedViewStart","ÉµembeddedViewEnd","ÉµsanitizeHtml","ÉµsanitizeStyle","ÉµdefaultStyleSanitizer","ÉµsanitizeResourceUrl","ÉµsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ÉµsanitizeUrl","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","dep","reflectDependency","LiteralExpr","host","optional","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","WrappedNodeExpr","param","EMPTY_ARRAY$2","compileNgModuleDefs","flatten$1","wrapReference","expandModuleWithProviders","emitInline","compileNgModule","jitExpression","expression","compileInjector","statements","patchComponentDefWithScope","transitiveScopes","from","compilation","dir","transitiveScopesFor","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","constantPool","ConstantPool","parseTemplate","preserveWhitespaces","errors","compileComponentFromMetadata","directiveMetadata","viewQueries","wrapDirectivesInClosure","makeBindingParser","preStatements","hasSelectorScope","ngSelectorScope","compileDirective","sourceMapUrl","compileDirectiveFromMetadata","extractHostBindings","parseHostBindings","listeners","properties","_loop_2","field","ann","isHostBinding","isHostListener","hostPropertyName","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","inputsFromType","outputsFromType","isOutput","bindingPropertyName","typeArgumentCount","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","piece","isUseClassProvider","USE_VALUE$1","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","compilePipe","compilePipeFromMetadata","noop","R3_COMPILE_COMPONENT__POST_NGCC__","R3_COMPILE_DIRECTIVE__POST_NGCC__","R3_COMPILE_PIPE__POST_NGCC__","R3_COMPILE_COMPONENT$1","R3_COMPILE_DIRECTIVE$1","R3_COMPILE_PIPE$1","USE_VALUE$2","EMPTY_ARRAY$3","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Version","Directive","Component","Default","Pipe","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","Output","HostBinding","HostListener","NgModule","preR3NgModuleCompile","R3_COMPILE_NGMODULE$1","VERSION","full","major","minor","patch","Injectable","preR3InjectableCompile","injectableType","R3_COMPILE_INJECTABLE$1","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","scope","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_NGCC__","createCompiler","compileNgModuleFactory","ApplicationRef","f","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","APPLICATION_MODULE_PROVIDERS","ApplicationModule","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugContext","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","Render3DebugRendererFactory2","element$$1","Render3DebugContext","matchedDirectives","CorePlayerHandler","_players","player","play","queuePlayer","getOrCreateAnimationContext","allocAnimationContext","Éµangular_packages_core_core_l","Éµangular_packages_core_core_i","Éµangular_packages_core_core_j","Éµangular_packages_core_core_k","Éµangular_packages_core_core_f","Éµangular_packages_core_core_g","Éµangular_packages_core_core_h","Éµangular_packages_core_core_c","Éµangular_packages_core_core_d","Éµangular_packages_core_core_e","Éµangular_packages_core_core_m","Éµangular_packages_core_core_o","Éµangular_packages_core_core_n","Éµangular_packages_core_core_r","Éµangular_packages_core_core_p","Éµangular_packages_core_core_q","Éµangular_packages_core_core_bd","Éµangular_packages_core_core_y","Éµangular_packages_core_core_z","Éµangular_packages_core_core_w","Éµangular_packages_core_core_x","Éµangular_packages_core_core_v","Éµangular_packages_core_core_be","Éµangular_packages_core_core_bb","Éµangular_packages_core_core_bc","Éµangular_packages_core_core_ba","Éµangular_packages_core_core_bi","Éµangular_packages_core_core_a","Éµangular_packages_core_core_b","Éµangular_packages_core_core_bf","Éµangular_packages_core_core_s","Éµangular_packages_core_core_t","Éµangular_packages_core_core_u","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ÉµNoopNgZone","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","ÉµgetInjectableDef","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdetectChanges","ÉµrenderComponent","renderComponent","ÉµRender3ComponentFactory","ÉµRender3ComponentRef","ÉµRender3NgModuleRef","ÉµmarkDirty","markDirty","ÉµNgModuleFactory","ÉµNO_CHANGE","pipeBind2","Éµstore","ÉµwhenRendered","whenRendered","getRootContext$1","Éµi18nApply","i18nApply","instructions","localParentTNode","localPreviousTNode","instruction","elementTNode","textRNode","lastNodeIndex","textTNode","removedNode","removedTNode","Éµi18nExpMapping","i18nExpMapping","translation","placeholders","staticText","Éµi18nInterpolation1","i18nInterpolation1","Éµi18nInterpolation2","i18nInterpolation2","Éµi18nInterpolation3","i18nInterpolation3","idx","Éµi18nInterpolation4","i18nInterpolation4","b1","Éµi18nInterpolation5","i18nInterpolation5","Éµi18nInterpolation6","i18nInterpolation6","Éµi18nInterpolation7","i18nInterpolation7","b2","Éµi18nInterpolation8","i18nInterpolation8","Éµi18nInterpolationV","i18nInterpolationV","Éµi18nMapping","i18nMapping","elements","expressions","templateRoots","lastChildIndex","translationParts","generateMappingInstructions","tmplIndex","partIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","currentElements","currentExpressions","phIndex","templateRootIndex","newTmplIndex","tmplElements","phKeys","ph","tmplExpressions","ÉµWRAP_RENDERER_FACTORY2","ÉµRender3DebugRendererFactory2","ÉµcompileNgModuleDefs","ÉµpatchComponentDefWithScope","ÉµcompileComponent","ÉµcompileDirective","ÉµcompilePipe","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµgetContext","ÉµaddPlayer","addPlayer","elementContext","animationContext","getRootContext","viewOrComponent","ÉµgetPlayers","getPlayers","ÉµR3_COMPILE_COMPONENT__POST_NGCC__","ÉµR3_COMPILE_DIRECTIVE__POST_NGCC__","ÉµR3_COMPILE_INJECTABLE__POST_NGCC__","compileInjectable","srcMeta","hasAProvider","ctorDeps","userDeps","computeProvidedIn","ÉµR3_COMPILE_NGMODULE__POST_NGCC__","setScopeOnDeclaredComponents","declaration","ÉµR3_COMPILE_PIPE__POST_NGCC__","ÉµivyEnable__POST_NGCC__","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.0.0-beta.6+54.sha-1e02cd9\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('@angular/compiler'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', '@angular/compiler', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.ng.compiler,global.rxjs.operators));\n}(this, (function (exports,rxjs,compiler,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @experimental\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @experimental\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @experimental\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     *\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            var injectableDef = getInjectableDef(token);\n            if (injectableDef && injectableDef.providedIn == 'root') {\n                return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                    injectableDef.value;\n            }\n            if (flags & 8 /* Optional */)\n                return null;\n            throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY$1 = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY$1);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var pipeTypes = componentDefinition.pipes;\n        var directiveTypes = componentDefinition.directives;\n        var declaredInputs = {};\n        var encapsulation = componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated;\n        var styles = componentDefinition.styles || EMPTY_ARRAY;\n        var animations = componentDefinition.animations || null;\n        var data = componentDefinition.data || {};\n        if (animations) {\n            data.animations = animations;\n        }\n        var def = {\n            type: type,\n            diPublic: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            hostVars: componentDefinition.hostVars || 0,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            inputs: invertObject(componentDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(componentDefinition.outputs),\n            exportAs: componentDefinition.exportAs || null,\n            onInit: type.prototype.ngOnInit || null,\n            doCheck: type.prototype.ngDoCheck || null,\n            afterContentInit: type.prototype.ngAfterContentInit || null,\n            afterContentChecked: type.prototype.ngAfterContentChecked || null,\n            afterViewInit: type.prototype.ngAfterViewInit || null,\n            afterViewChecked: type.prototype.ngAfterViewChecked || null,\n            onDestroy: type.prototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null,\n            pipeDefs: pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: data,\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: encapsulation,\n            providers: EMPTY_ARRAY,\n            viewProviders: EMPTY_ARRAY,\n            id: \"c\" + _renderCompCount++, styles: styles,\n        };\n        var feature = componentDefinition.features;\n        feature && feature.forEach(function (fn) { return fn(def); });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY$1;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type) {\n        return type[NG_MODULE_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 17;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var PARENT = 1;\n    var NEXT = 2;\n    var QUERIES = 3;\n    var FLAGS = 4;\n    var HOST_NODE = 5;\n    var BINDING_INDEX = 6;\n    var DIRECTIVES = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n    var DECLARATION_VIEW = 16;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LViewData` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     */\n    function getContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LViewData instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lViewData = mpValue;\n                var lNodeIndex = void 0;\n                var component = undefined;\n                var directiveIndices = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    lNodeIndex = findViaComponent(lViewData, target);\n                    if (lNodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    lNodeIndex = findViaDirective(lViewData, target);\n                    if (lNodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directiveIndices = discoverDirectiveIndices(lViewData, lNodeIndex);\n                    directives = directiveIndices ? discoverDirectives(lViewData, directiveIndices) : null;\n                }\n                else {\n                    lNodeIndex = findViaNativeElement(lViewData, target);\n                    if (lNodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, compontent or\n                // directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var lNode = getLNodeFromViewData(lViewData, lNodeIndex);\n                var existingCtx = readPatchedData(lNode.native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lViewData, lNodeIndex, lNode.native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && directiveIndices && context.directives === undefined) {\n                    context.directiveIndices = directiveIndices;\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomElement(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lViewData = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lViewData = parentContext;\n                    }\n                    else {\n                        lViewData = parentContext.lViewData;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lViewData) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lViewData, rElement);\n                    if (index >= 0) {\n                        var lNode = getLNodeFromViewData(lViewData, index);\n                        var context = createLContext(lViewData, index, lNode.native);\n                        attachPatchData(lNode.native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lViewData, lNodeIndex, native) {\n        return {\n            lViewData: lViewData,\n            lNodeIndex: lNodeIndex,\n            native: native,\n            component: undefined,\n            directiveIndices: undefined,\n            directives: undefined,\n        };\n    }\n    /**\n     * A utility function for retrieving the matching lElementNode\n     * from a given DOM element, component or directive.\n     */\n    function getLElementNode(target) {\n        var context = getContext(target);\n        return context ? getLNodeFromViewData(context.lViewData, context.lNodeIndex) : null;\n    }\n    /**\n     * A simplified lookup function for finding the LElementNode from a component instance.\n     *\n     * This function exists for tree-shaking purposes to avoid having to pull in everything\n     * that `getContext` has in the event that an Angular application doesn't need to have\n     * any programmatic access to an element's context (only change detection uses this function).\n     */\n    function getLElementFromComponent(componentInstance) {\n        var lViewData = readPatchedData(componentInstance);\n        var lNode;\n        if (Array.isArray(lViewData)) {\n            var lNodeIndex = findViaComponent(lViewData, componentInstance);\n            lNode = readElementValue(lViewData[lNodeIndex]);\n            var context = createLContext(lViewData, lNodeIndex, lNode.native);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lViewData;\n            lNode = readElementValue(context.lViewData[context.lNodeIndex]);\n        }\n        return lNode;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLViewData(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lViewData;\n        }\n        return null;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LViewData and returns the matching index\n     */\n    function findViaNativeElement(lViewData, native) {\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var lNode = getLNodeFromViewData(lViewData, tNode.index);\n            if (lNode.native === native) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else if (tNode.parent) {\n            return tNode.parent.next || null;\n        }\n        return null;\n    }\n    /**\n     * Locates the component within the given LViewData and returns the matching index\n     */\n    function findViaComponent(lViewData, componentInstance) {\n        var componentIndices = lViewData[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var lNodeData = readElementValue(lViewData[elementComponentIndex]).data;\n                if (lNodeData[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootNode = lViewData[HEADER_OFFSET];\n            var rootComponent = rootNode.data[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LViewData and returns the matching index\n     */\n    function findViaDirective(lViewData, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LViewData of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. By first checking to see if the instance\n        // is actually present we can narrow down to which lElementNode\n        // contains the instance of the directive and then return the index\n        var directivesAcrossView = lViewData[DIRECTIVES];\n        var directiveIndex = directivesAcrossView ? directivesAcrossView.indexOf(directiveInstance) : -1;\n        if (directiveIndex >= 0) {\n            var tNode = lViewData[TVIEW].firstChild;\n            while (tNode) {\n                var directiveIndexStart = getDirectiveStartIndex(tNode);\n                var directiveIndexEnd = getDirectiveEndIndex(tNode, directiveIndexStart);\n                if (directiveIndex >= directiveIndexStart && directiveIndex < directiveIndexEnd) {\n                    return tNode.index;\n                }\n                tNode = traverseNextElement(tNode);\n            }\n        }\n        return -1;\n    }\n    function assertDomElement(element) {\n        assertEqual(element.nodeType, 1, 'The provided value must be an instance of an HTMLElement');\n    }\n    /**\n     * Retruns the instance of the LElementNode at the given index in the LViewData.\n     *\n     * This function will also unwrap the inner value incase it's stuffed into an\n     * array (which is what happens when [style] and [class] bindings are present\n     * in the view instructions for the element being returned).\n     */\n    function getLNodeFromViewData(lViewData, lElementIndex) {\n        var value = lViewData[lElementIndex];\n        return value ? readElementValue(value) : null;\n    }\n    /**\n     * Returns a collection of directive index values that are used on the element\n     * (which is referenced by the lNodeIndex)\n     */\n    function discoverDirectiveIndices(lViewData, lNodeIndex) {\n        var directivesAcrossView = lViewData[DIRECTIVES];\n        var tNode = lViewData[TVIEW].data[lNodeIndex];\n        if (directivesAcrossView && directivesAcrossView.length) {\n            // this check for tNode is to determine if the value is a LElementNode instance\n            var directiveIndexStart = getDirectiveStartIndex(tNode);\n            var directiveIndexEnd = getDirectiveEndIndex(tNode, directiveIndexStart);\n            var directiveIndices = [];\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                // special case since the instance of the component (if it exists)\n                // is stored in the directives array.\n                if (i > directiveIndexStart ||\n                    !isComponentInstance(directivesAcrossView[directiveIndexStart])) {\n                    directiveIndices.push(i);\n                }\n            }\n            return directiveIndices.length ? directiveIndices : null;\n        }\n        return null;\n    }\n    function discoverDirectives(lViewData, directiveIndices) {\n        var directives = [];\n        var directiveInstances = lViewData[DIRECTIVES];\n        if (directiveInstances) {\n            for (var i = 0; i < directiveIndices.length; i++) {\n                var directiveIndex = directiveIndices[i];\n                var directive = directiveInstances[directiveIndex];\n                directives.push(directive);\n            }\n        }\n        return directives;\n    }\n    function getDirectiveStartIndex(tNode) {\n        // the tNode instances store a flag value which then has a\n        // pointer which tells the starting index of where all the\n        // active directives are in the master directive array\n        return tNode.flags >> 15 /* DirectiveStartingIndexShift */;\n    }\n    function getDirectiveEndIndex(tNode, startIndex) {\n        // The end value is also a part of the same flag\n        // (see `TNodeFlags` to see how the flag bit shifting\n        // values are used).\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        return count ? (startIndex + count) : -1;\n    }\n    function readElementValue(value) {\n        return (Array.isArray(value) ? value[0] : value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData[DIRECTIVES]\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 15 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.directives[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView[DIRECTIVES], tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(data, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(data[arr[i]]);\n        }\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    // PARENT, NEXT, and QUERIES are indices 1, 2, and 3.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var VIEWS = 4;\n    var RENDER_PARENT = 5;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData` or `TData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /** Retrieves an element value from the provided `viewData`.\n      *\n      * Elements that are read may be wrapped in a style context,\n      * therefore reading the value may involve unwrapping that.\n      */\n    function loadElementInternal(index, arr) {\n        var value = loadInternal(index, arr);\n        return readElementValue(value);\n    }\n    function getLNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lViewData = Array.isArray(target) ? target : readPatchedLViewData(target);\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    function getRootContext(viewOrComponent) {\n        return getRootView(viewOrComponent)[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent LNode of a given node. */\n    function getParentLNode(tNode, currentView) {\n        return tNode.parent == null ? getHostElementNode(currentView) :\n            getLNode(tNode.parent, currentView);\n    }\n    /**\n     * Gets the host LElementNode given a view. Will return null if the host element is an\n     * LViewNode, since they are being phased out.\n     */\n    function getHostElementNode(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getLNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    /**\n     * Gets the parent LNode if it's not a view. If it's a view, it will instead return the view's\n     * parent container node.\n     */\n    function getParentOrContainerNode(tNode, currentView) {\n        var parentTNode = tNode.parent || currentView[HOST_NODE];\n        return parentTNode && parentTNode.type === 2 /* View */ ?\n            getContainerNode(parentTNode, currentView) :\n            getParentLNode(tNode, currentView);\n    }\n    function getContainerNode(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ?\n                embeddedView[PARENT][containerHostIndex].dynamicLContainerNode :\n                null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return getParentLNode(tNode, embeddedView[PARENT]);\n        }\n    }\n    /**\n     * Retrieves render parent LElementNode for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getContainerNode(tViewNode, view);\n        return container ? container.data[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the LElement nodes.\n     * @param renderer the current renderer.\n     * @param renderParentNode Optional the render parent node to be set in all LContainerNodes found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParentNode, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            var parent_1 = renderParentNode ? renderParentNode.native : null;\n            if (tNode.type === 3 /* Element */) {\n                var elementNode = getLNode(tNode, currentView);\n                executeNodeAction(action, renderer, parent_1, elementNode.native, beforeNode);\n                if (elementNode.dynamicLContainerNode) {\n                    executeNodeAction(action, renderer, parent_1, elementNode.dynamicLContainerNode.native, beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainerNode = currentView[tNode.index];\n                executeNodeAction(action, renderer, parent_1, lContainerNode.native, beforeNode);\n                var childContainerData = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.data :\n                    lContainerNode.data;\n                if (renderParentNode) {\n                    childContainerData[RENDER_PARENT] = renderParentNode;\n                }\n                if (childContainerData[VIEWS].length) {\n                    currentView = childContainerData[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainerNode.dynamicLContainerNode ?\n                        lContainerNode.dynamicLContainerNode.native :\n                        lContainerNode.native;\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 8192 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the LNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index].native;\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lViewData) {\n        var rootTNode = lViewData[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'viewData.parent');\n            lViewData = lViewData[PARENT];\n            rootTNode = lViewData[HOST_NODE];\n        }\n        return lViewData;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var parentNode = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        var parent = parentNode ? parentNode.native : null;\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (parent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, parentNode, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~8 /* Attached */;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, tContainer, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        destroyLView(view);\n        detachView(lContainer, removeIndex, !!tContainer.detached);\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        if (viewData[TVIEW].childIndex === -1)\n            return null;\n        var hostNode = viewData[viewData[TVIEW].childIndex];\n        return hostNode.data ? hostNode.data : hostNode.dynamicLContainerNode.data;\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getContainerNode(tNode, state).data;\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer[TVIEW]) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]).native;\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view[DIRECTIVES], destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            var hostTNode = currentView[HOST_NODE];\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentLNode(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 4096 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getContainerNode(viewTNode, view);\n        if (container == null || container.data[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent && tNode.parent.type === 4 /* ElementContainer */) {\n            currentNode = getHighestElementContainer(tNode);\n            parent = currentNode.parent;\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var parentLNode = getParentLNode(childTNode, currentView);\n        var parentEl = parentLNode ? parentLNode.native : null;\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var container = getContainerNode(parentTNode, currentView);\n                var renderParent = container.data[RENDER_PARENT];\n                var views = container.data[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, renderParent.native, childEl, getBeforeNodeForView(index, views, container));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var elementContainer = getHighestElementContainer(childTNode);\n                var node = getRenderParent(elementContainer, currentView);\n                nativeInsertBefore(renderer, node.native, childEl, parentEl);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, container) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getLNode(viewTNode.child, view).native : container.native;\n        }\n        else {\n            return container.native;\n        }\n    }\n    /**\n     * Removes the `child` element of the `parent` from the DOM.\n     *\n     * @param parentEl The parent element from which to remove the child\n     * @param child The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(tNode, child, currentView) {\n        var parentNative = getParentLNode(tNode, currentView).native;\n        if (child !== null && canInsertNativeNode(tNode, currentView)) {\n            // We only remove the element if not in View or not projected.\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, child) :\n                parentNative.removeChild(child);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedLNode The node to process\n     * @param parentNode The last parent element to be processed\n     * @param tProjectionNode\n     * @param currentView Current LView\n     * @param projectionView Projection view\n     */\n    function appendProjectedNode(projectedLNode, projectedTNode, tProjectionNode, currentView, projectionView) {\n        appendChild(projectedLNode.native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(projectedLNode.native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var lContainer = projectedLNode.data;\n            lContainer[RENDER_PARENT] = renderParent;\n            var views = lContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, projectedLNode.native);\n            }\n        }\n        else if (projectedTNode.type === 4 /* ElementContainer */) {\n            var ngContainerChildTNode = projectedTNode.child;\n            while (ngContainerChildTNode) {\n                var ngContainerChild = getLNode(ngContainerChildTNode, projectionView);\n                appendProjectedNode(ngContainerChild, ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                ngContainerChildTNode = ngContainerChildTNode.next;\n            }\n        }\n        if (projectedLNode.dynamicLContainerNode) {\n            projectedLNode.dynamicLContainerNode.data[RENDER_PARENT] = renderParent;\n            appendChild(projectedLNode.dynamicLContainerNode.native, tProjectionNode, currentView);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(lElement, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[0 /* ElementPosition */] = lElement;\n        return context;\n    }\n    function createEmptyStylingContext(element, sanitizer, initialStylingValues) {\n        return [element || null, null, sanitizer || null, initialStylingValues || [null], 0, 0, null];\n    }\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer) {\n        var initialStylingValues = [null];\n        var context = createEmptyStylingContext(null, styleSanitizer, initialStylingValues);\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[5 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 3 /* Size */ * 2 + 7 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 7 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 7 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 3 /* Size */ + 7 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 3 /* Size */ + multiStart;\n            var indexForSingle = i * 3 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        setFlag(context, 4 /* MasterFlagPosition */, pointers(0, 0, multiStart));\n        setContextDirty(context, initialStylingValues.length > 1);\n        return context;\n    }\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classes The key/value map of CSS class names that will be used for the update.\n     * @param styles The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classes, styles) {\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var ignoreAllClassUpdates = false;\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (typeof classes == 'string') {\n            var cachedClassString = context[6 /* CachedCssClassString */];\n            if (cachedClassString && cachedClassString === classes) {\n                ignoreAllClassUpdates = true;\n            }\n            else {\n                context[6 /* CachedCssClassString */] = classes;\n                classNames = classes.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n        }\n        else {\n            classNames = classes ? Object.keys(classes) : EMPTY_ARR;\n            context[6 /* CachedCssClassString */] = null;\n        }\n        classes = (classes || EMPTY_OBJ);\n        var styleProps = styles ? Object.keys(styles) : EMPTY_ARR;\n        styles = styles || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (!ignoreAllClassUpdates || !isClassBased_2) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (initialValue !== newValue) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (valueToCompare !== newValue) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (initialValue !== newValue) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 3 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            if (ignoreAllClassUpdates && isClassBased_3)\n                break;\n            var value = getValue(context, ctxIndex);\n            var doRemoveValue = valueExists(value, isClassBased_3);\n            if (doRemoveValue) {\n                setDirty(context, ctxIndex, true);\n                setValue(context, ctxIndex, null);\n                dirty = true;\n            }\n            ctxIndex += 3 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            if (ignoreAllClassUpdates && isClassBased_4)\n                break;\n            var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n            var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n            var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n            var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n            context.push(flag, prop, value);\n            propIndex++;\n            dirty = true;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, value) {\n        var singleIndex = 7 /* SingleStylesStartPosition */ + index * 3 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || valueForMulti !== value) {\n                var multiDirty = false;\n                var singleDirty = true;\n                var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[5 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param styleStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param classStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     */\n    function renderStyling(context, renderer, styleStore, classStore) {\n        if (isContextDirty(context)) {\n            var native = context[0 /* ElementPosition */].native;\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            for (var i = 7 /* SingleStylesStartPosition */; i < context.length; i += 3 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    if (isClassBased_6) {\n                        setClass(native, prop, valueToApply ? true : false, renderer, classStore);\n                    }\n                    else {\n                        var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                        setStyle(native, prop, valueToApply, renderer, sanitizer, styleStore);\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            setContextDirty(context, false);\n        }\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store) {\n            store[prop] = value;\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store) {\n        if (store) {\n            store[className] = add;\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 7 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 7 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 7 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 7 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 7 /* BitMask */) | (staticIndex << 3 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 3 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[3 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 3 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 3 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 7 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[4 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[2 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 4 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 4 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 4 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 4 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 3 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 3 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 3 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * TView.data needs to fill the same number of slots as the LViewData header\n     * so the indices of nodes are consistent between LViewData and TView.data.\n     *\n     * It's much faster to keep a blueprint of the pre-filled array and slice it\n     * than it is to create a new array and fill it each time a TView is created.\n     */\n    var HEADER_FILLER = new Array(HEADER_OFFSET).fill(null);\n    /**\n     * Token set in currentMatches while dependencies are being resolved.\n     *\n     * If we visit a directive that has a value set to CIRCULAR, we know we've\n     * already seen it, and thus have a circular dependency.\n     */\n    var CIRCULAR$1 = '__CIRCULAR__';\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LViewData` to only those elements.\n     */\n    var elementDepthCount;\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentNode() {\n        return previousOrParentTNode == null || previousOrParentTNode === viewData[HOST_NODE] ?\n            getHostElementNode(viewData) :\n            getLNode(previousOrParentTNode, viewData);\n    }\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    var tView;\n    var currentQueries;\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== viewData[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = currentQueries.clone());\n            previousOrParentTNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (currentQueries = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function _getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    /**\n     * An array of directive instances in the current view.\n     *\n     * These must be stored separately from LNodes because their presence is\n     * unknown at compile-time and thus space cannot be reserved in data[].\n     */\n    var directives;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.hostBindingStartIndex + any hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = viewData;\n        directives = newView && newView[DIRECTIVES];\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        bindingRootIndex = newView && tView.bindingStartIndex;\n        renderer = newView && newView[RENDERER];\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        viewData = contextViewData = newView;\n        oldView && (oldView[QUERIES] = currentQueries);\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(directives, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews() {\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = firstTemplatePass = false;\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(viewData);\n        // Content query results must be refreshed before content hooks are called.\n        refreshContentQueries(tView);\n        if (!checkNoChangesMode) {\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        setHostBindings(tView.hostBindings);\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(bindings) {\n        if (bindings != null) {\n            bindingRootIndex = viewData[BINDING_INDEX] = tView.hostBindingStartIndex;\n            var defs = tView.directives;\n            for (var i = 0; i < bindings.length; i += 2) {\n                var dirIndex = bindings[i];\n                var def = defs[dirIndex];\n                def.hostBindings(dirIndex, bindings[i + 1]);\n                bindingRootIndex = viewData[BINDING_INDEX] = bindingRootIndex + def.hostVars;\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.directives[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function executeInitAndContentHooks() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        var instance = tView.blueprint.slice();\n        instance[PARENT] = viewData;\n        instance[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        instance[CONTEXT] = context;\n        instance[INJECTOR$1] = viewData ? viewData[INJECTOR$1] : null;\n        instance[RENDERER] = renderer;\n        instance[SANITIZER] = sanitizer || null;\n        return instance;\n    }\n    /**\n     * Creation of LNode object is extracted to a separate function so we always create LNode object\n     * with the same shape\n     * (same properties assigned in the same order).\n     */\n    function createLNodeObject(type, nodeInjector, native, state) {\n        return {\n            native: native,\n            nodeInjector: nodeInjector,\n            data: state,\n            dynamicLContainerNode: null\n        };\n    }\n    function createNodeAtIndex(index, type, native, name, attrs, state) {\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && viewData && parent !== viewData[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        var isState = state != null;\n        var node = createLNodeObject(type, null, native, isState ? state : null);\n        var tNode;\n        if (index === -1 || type === 2 /* View */) {\n            // View nodes are not stored in data because they can be added / removed at runtime (which\n            // would cause indices to change). Their TNodes are instead stored in tView.node.\n            tNode = (state ? state[TVIEW].node : null) ||\n                createTNode(type, index, null, null, tParent, null);\n        }\n        else {\n            var adjustedIndex = index + HEADER_OFFSET;\n            // This is an element or container or projection node\n            var tData = tView.data;\n            ngDevMode && assertLessThan(adjustedIndex, viewData.length, \"Slot should have been initialized with null\");\n            viewData[adjustedIndex] = node;\n            if (tData[adjustedIndex] == null) {\n                var tNode_1 = tData[adjustedIndex] =\n                    createTNode(type, adjustedIndex, name, attrs, tParent, null);\n                if (!isParent && previousOrParentTNode) {\n                    previousOrParentTNode.next = tNode_1;\n                    if (previousOrParentTNode.dynamicContainerNode)\n                        previousOrParentTNode.dynamicContainerNode.next = tNode_1;\n                }\n            }\n            tNode = tData[adjustedIndex];\n            if (!tView.firstChild && type === 3 /* Element */) {\n                tView.firstChild = tNode;\n            }\n            // Now link ourselves into the tree.\n            if (isParent && previousOrParentTNode) {\n                if (previousOrParentTNode.child == null && parentInSameView ||\n                    previousOrParentTNode.type === 2 /* View */) {\n                    // We are in the same view, which means we are adding content node to the parent View.\n                    previousOrParentTNode.child = tNode;\n                }\n            }\n        }\n        // TODO: temporary, remove this when removing nodeInjector (bringing in fns to hello world)\n        if (index !== -1 && !(viewData[FLAGS] & 64 /* IsRoot */)) {\n            var parentLNode = type === 2 /* View */ ?\n                getContainerNode(tNode, state) :\n                getParentOrContainerNode(tNode, viewData);\n            parentLNode && (node.nodeInjector = parentLNode.nodeInjector);\n        }\n        // View nodes and host elements need to set their host node (components do not save host TNodes)\n        if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n            var lViewData = state;\n            ngDevMode &&\n                assertEqual(lViewData[HOST_NODE], null, 'lViewData[HOST_NODE] should not have been initialized');\n            lViewData[HOST_NODE] = tNode;\n            if (lViewData[TVIEW].firstTemplatePass) {\n                lViewData[TVIEW].node = tNode;\n            }\n        }\n        previousOrParentTNode = tNode;\n        isParent = true;\n        return tNode;\n    }\n    /**\n     * When LNodes are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function adjustBlueprintForNewNode(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.hostBindingStartIndex++;\n            tView.blueprint.push(null);\n            view.push(null);\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries) {\n        var _isParent = isParent;\n        var _previousOrParentTNode = previousOrParentTNode;\n        isParent = true;\n        previousOrParentTNode = null;\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createNodeAtIndex(-1, 2 /* View */, null, null, null, lView);\n        isParent = _isParent;\n        previousOrParentTNode = _previousOrParentTNode;\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n        var _isParent = isParent;\n        var _previousOrParentTNode = previousOrParentTNode;\n        var oldView;\n        if (viewToRender[FLAGS] & 64 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(viewToRender[CONTEXT]);\n        }\n        else {\n            try {\n                isParent = true;\n                previousOrParentTNode = null;\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews();\n                }\n                else {\n                    viewToRender[TVIEW].firstTemplatePass = firstTemplatePass = false;\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice in fact, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                isParent = _isParent;\n                previousOrParentTNode = _previousOrParentTNode;\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, templateFn) {\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(getRenderFlags(hostView), componentOrContext);\n                refreshDescendantViews();\n            }\n            else {\n                executeInitAndContentHooks();\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings(tView.hostBindings);\n                componentRefresh(HEADER_OFFSET);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, null, attrs || null, null);\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        currentQueries &&\n            (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null, null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (elementDepthCount === 0) {\n            attachPatchData(native, viewData);\n        }\n        elementDepthCount++;\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || renderer;\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    function nativeNodeLocalRefExtractor(tNode, currentView) {\n        return getLNode(tNode, currentView).native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param lNode LNode for which directive and locals should be created\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from LNode\n     */\n    function createDirectivesAndLocals(localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = nativeNodeLocalRefExtractor; }\n        if (firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            cacheMatchingDirectivesForNode(previousOrParentTNode, tView, localRefs || null);\n        }\n        else {\n            instantiateDirectivesDirectly();\n        }\n        saveResolvedLocalsInData(localRefExtractor);\n    }\n    /**\n     * On first template pass, we match each node against available directive selectors and save\n     * the resulting defs in the correct instantiation order for subsequent change detection runs\n     * (so dependencies are always created before the directives that inject them).\n     */\n    function cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var matches = tView.currentMatches = findDirectiveMatches(tNode);\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                var valueIndex = i + 1;\n                resolveDirective(def, valueIndex, matches, tView);\n                saveNameToExportMap(matches[valueIndex], def, exportsMap);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /** Matches the current node against all available selectors. */\n    function findDirectiveMatches(tNode) {\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    matches || (matches = []);\n                    if (def.template) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        addComponentLogic(def);\n                        tNode.flags = 4096 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def, null);\n                    }\n                    else {\n                        matches.push(def, null);\n                    }\n                    if (def.diPublic)\n                        def.diPublic(def);\n                }\n            }\n        }\n        return matches;\n    }\n    function resolveDirective(def, valueIndex, matches, tView) {\n        if (matches[valueIndex] === null) {\n            matches[valueIndex] = CIRCULAR$1;\n            var instance = def.factory();\n            (tView.directives || (tView.directives = [])).push(def);\n            return directiveCreate(matches[valueIndex] = tView.directives.length - 1, instance, def);\n        }\n        else if (matches[valueIndex] === CIRCULAR$1) {\n            // If we revisit this directive before it's resolved, we know it's circular\n            throwCyclicDependencyError(def.type);\n        }\n        return null;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck() {\n        if (firstTemplatePass) {\n            (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n        }\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n     */\n    function queueHostBindingForCheck(dirIndex, hostVars) {\n        // Must subtract the header offset because hostBindings functions are generated with\n        // instructions that expect element indices that are NOT adjusted (e.g. elementProperty).\n        ngDevMode &&\n            assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < hostVars; i++) {\n            tView.blueprint.push(NO_CHANGE);\n            viewData.push(NO_CHANGE);\n        }\n        (tView.hostBindings || (tView.hostBindings = [])).push(dirIndex, previousOrParentTNode.index - HEADER_OFFSET);\n    }\n    /**\n     * This function instantiates the given directives.\n     */\n    function instantiateDirectivesDirectly() {\n        ngDevMode && assertEqual(firstTemplatePass, false, \"Directives should only be instantiated directly after first template pass\");\n        var count = previousOrParentTNode.flags & 4095 /* DirectiveCountMask */;\n        if (isContentQueryHost(previousOrParentTNode) && currentQueries) {\n            currentQueries = currentQueries.clone();\n        }\n        if (count > 0) {\n            var start = previousOrParentTNode.flags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var tDirectives = tView.directives;\n            for (var i = start; i < end; i++) {\n                var def = tDirectives[i];\n                // Component view must be set on node before the factory is created so\n                // ChangeDetectorRefs have a way to store component view on creation.\n                if (def.template) {\n                    addComponentLogic(def);\n                }\n                directiveCreate(i, def.factory(), def);\n            }\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(localRefExtractor) {\n        var localNames = previousOrParentTNode.localNames;\n        var tNode = previousOrParentTNode;\n        if (localNames) {\n            var localIndex = previousOrParentTNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ? localRefExtractor(tNode, viewData) : directives[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: HEADER_FILLER.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            hostBindingStartIndex: initialViewLength,\n            directives: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            hostBindings: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            currentMatches: null,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        rendererFactory = factory;\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Creates the host LNode.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     *\n     * @returns LElementNode created\n     */\n    function hostElement(tag, rNode, def, sanitizer) {\n        resetComponentState();\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n        if (firstTemplatePass) {\n            tNode.flags = 4096 /* isComponent */;\n            if (def.diPublic)\n                def.diPublic(def);\n            tView.directives = [def];\n        }\n        return viewData[HEADER_OFFSET];\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var node = getPreviousOrParentNode();\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(node.native, eventName, listenerFn);\n                storeCleanupFn(viewData, cleanupFn);\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                node.native.addEventListener(eventName, wrappedListener, useCapture);\n                var cleanupInstances = getCleanup(viewData);\n                cleanupInstances.push(wrappedListener);\n                if (firstTemplatePass) {\n                    getTViewCleanup(viewData).push(eventName, tNode.index, cleanupInstances.length - 1, useCapture);\n                }\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], directives);\n            var subscription = directives[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = viewData;\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        currentQueries &&\n            (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n        elementDepthCount--;\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var element_1 = loadElement(index);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1.native, name) :\n                    element_1.native.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1.native, name, strValue) :\n                    element_1.native.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var node = loadElement(index);\n        var tNode = getTNode(index);\n        // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked\n        if (tNode && tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(tNode.flags, 0 /* Input */);\n        }\n        var inputData = tNode && tNode.inputs;\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(dataValue, value);\n            markDirtyIfOnPush(node);\n        }\n        else {\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            var native = node.native;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n                (native.setProperty ? native.setProperty(propName, value) :\n                    native[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param parent The parent of this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            flags: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: parent,\n            dynamicContainerNode: null,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], directives);\n            directives[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number lNodeFlags logical node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.directives;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        updateClassProp(getStylingContext(index), stylingIndex, value ? true : false);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n        var tNode = previousOrParentTNode;\n        if (!tNode.stylingTemplate) {\n            // initialize the styling template.\n            tNode.stylingTemplate =\n                createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            elementStylingApply(tNode.index - HEADER_OFFSET);\n        }\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     */\n    function getStylingContext(index) {\n        var stylingContext = load(index);\n        if (!Array.isArray(stylingContext)) {\n            var lElement = stylingContext;\n            var tNode = getTNode(index);\n            ngDevMode &&\n                assertDefined(tNode.stylingTemplate, 'getStylingContext() called before elementStyling()');\n            stylingContext = viewData[index + HEADER_OFFSET] =\n                allocStylingContext(lElement, tNode.stylingTemplate);\n        }\n        return stylingContext;\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        renderStyling(getStylingContext(index), renderer);\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param styleName Name of property. Because it is going to DOM this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix) {\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     */\n    function elementStylingMap(index, classes, styles) {\n        updateStylingMap(getStylingContext(index), classes, styles);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, renderer);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        isParent = false;\n        appendChild(textNative, tNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var existingNode = loadElement(index);\n            ngDevMode && assertDefined(existingNode, 'LNode should exist');\n            ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n                existingNode.native.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Create a directive and their associated content queries.\n     *\n     * NOTE: directives can be created in order other than the index order. They can also\n     *       be retrieved before they are created in which case the value will be null.\n     *\n     * @param directive The directive instance.\n     * @param directiveDef DirectiveDef object which contains information about the template.\n     */\n    function directiveCreate(directiveDefIdx, directive, directiveDef) {\n        var hostNode = getLNode(previousOrParentTNode, viewData);\n        var instance = baseDirectiveCreate(directiveDefIdx, directive, directiveDef, hostNode);\n        if (directiveDef.template) {\n            hostNode.data[CONTEXT] = directive;\n        }\n        if (firstTemplatePass) {\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(directiveDefIdx, directiveDef.onInit, directiveDef.doCheck, tView);\n            if (directiveDef.hostBindings)\n                queueHostBindingForCheck(directiveDefIdx, directiveDef.hostVars);\n        }\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, instance, directiveDef.inputs, previousOrParentTNode);\n        }\n        if (directiveDef.contentQueries) {\n            directiveDef.contentQueries();\n        }\n        return instance;\n    }\n    function addComponentLogic(def) {\n        var hostNode = getLNode(previousOrParentTNode, viewData);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentTNode.index, createLViewData(rendererFactory.createRenderer(hostNode.native, def), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        // We need to set the host node/data here because when the component LNode was created,\n        // we didn't yet know it was a component (just an element).\n        hostNode.data = componentView;\n        componentView[HOST_NODE] = previousOrParentTNode;\n        if (firstTemplatePass)\n            queueComponentIndexForCheck();\n    }\n    /**\n     * A lighter version of directiveCreate() that is used for the root component\n     *\n     * This version does not contain features that we don't already support at root in\n     * current Angular. Example: local refs and inputs on root component.\n     */\n    function baseDirectiveCreate(index, directive, directiveDef, hostNode) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        attachPatchData(directive, viewData);\n        if (hostNode) {\n            attachPatchData(hostNode.native, viewData);\n        }\n        if (directives == null)\n            viewData[DIRECTIVES] = directives = [];\n        ngDevMode && assertDataNext(index, directives);\n        directives[index] = directive;\n        if (firstTemplatePass) {\n            var flags = previousOrParentTNode.flags;\n            if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n                // When the first directive is created:\n                // - save the index,\n                // - set the number of directives to 1\n                previousOrParentTNode.flags =\n                    index << 15 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n            }\n            else {\n                // Only need to bump the size when subsequent directives are created\n                ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n                previousOrParentTNode.flags++;\n            }\n        }\n        else {\n            var diPublic = directiveDef.diPublic;\n            if (diPublic)\n                diPublic(directiveDef);\n        }\n        if (directiveDef.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(hostNode.native, directiveDef.attributes);\n        }\n        return directive;\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param currentView The parent view of the LContainer\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(currentView, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? null : 0,\n            currentView,\n            null,\n            null,\n            [],\n            null // renderParent, set after node creation\n        ];\n    }\n    /**\n     * Creates an LContainerNode for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (firstTemplatePass) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(localRefs, localRefExtractor);\n        currentQueries &&\n            (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(tNode.flags, tView);\n        isParent = false;\n    }\n    /**\n     * Creates an LContainerNode for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        firstTemplatePass && (tNode.tViews = []);\n        isParent = false;\n    }\n    function containerInternal(index, tagName, attrs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'container nodes should be created before any bindings');\n        var lContainer = createLContainer(viewData);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = renderer.createComment(ngDevMode ? 'container' : '');\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs, lContainer);\n        lContainer[RENDER_PARENT] = getRenderParent(tNode, viewData);\n        appendChild(comment, tNode, viewData);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, lContainer);\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        previousOrParentTNode = loadInternal(index, tView.data);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        isParent = true;\n        // Inline containers cannot have style bindings, so we can read the value directly\n        viewData[previousOrParentTNode.index].data[ACTIVE_INDEX] = 0;\n        if (!checkNoChangesMode) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, creationMode);\n        }\n    }\n    /**\n     * Marks the end of the LContainerNode.\n     *\n     * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        // Inline containers cannot have style bindings, so we can read the value directly\n        var lContainer = viewData[previousOrParentTNode.index].data;\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === null) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the search here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        // Inline containers cannot have style bindings, so we can read the value directly\n        var container = viewData[containerTNode.index];\n        var currentView = viewData;\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var lContainer = container.data;\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            isParent = true;\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createNodeAtIndex(viewBlockId, 2 /* View */, null, null, null, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (container) {\n            if (creationMode) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, currentView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewToRender);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var viewHost = viewData[HOST_NODE];\n        refreshDescendantViews();\n        leaveView(viewData[PARENT]);\n        previousOrParentTNode = viewHost;\n        isParent = false;\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var element = readElementValue(viewData[adjustedElementIndex]);\n        ngDevMode && assertNodeType(tView.data[adjustedElementIndex], 3 /* Element */);\n        ngDevMode &&\n            assertDefined(element.data, \"Component's host node should have an LViewData attached.\");\n        var hostView = element.data;\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            detectChangesInternal(hostView, hostView[CONTEXT]);\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(viewData)[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null, null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        isParent = false;\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(viewData);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                var lNode = projectedView[nodeToProject.index];\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 8192 /* isProjected */;\n                appendProjectedNode(lNode, nodeToProject, tProjectionNode, viewData, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(node) {\n        // Because data flows down the component tree, ancestors do not need to be marked dirty\n        if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n            node.data[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView && !(currentView[FLAGS] & 64 /* IsRoot */)) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext should be defined');\n        var rootContext = currentView[CONTEXT];\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= 1 /* DetectChanges */;\n        if (nothingScheduled) {\n            scheduleTick(rootContext);\n        }\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext) {\n        if (rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLViewData(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var hostNode = getLElementFromComponent(component);\n        ngDevMode &&\n            assertDefined(hostNode, 'Component host node should be attached to an LViewData instance.');\n        detectChangesInternal(hostNode.data, component);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        checkNoChangesMode = true;\n        try {\n            detectChanges(component);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        checkNoChangesMode = true;\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView[FLAGS], component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews();\n            updateViewQuery(viewQuery, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, flags, component) {\n        if (viewQuery && (flags & 1 /* CreationMode */)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, component) {\n        if (viewQuery) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var elementNode = getLElementFromComponent(component);\n        markViewDirty(elementNode.data);\n    }\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(viewData[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(viewData[BINDING_INDEX]++, v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        viewData[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        return loadInternal(index, contextViewData);\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /** Retrieves a value from the `directives` array. */\n    function loadDirective(index) {\n        ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n        ngDevMode && assertDataInRange(index, directives);\n        return directives[index];\n    }\n    function loadQueryList(queryListIdx) {\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, viewData);\n    }\n    function loadElement(index) {\n        return loadElementInternal(index, viewData);\n    }\n    function getTNode(index) {\n        return tView.data[index + HEADER_OFFSET];\n    }\n    /** Gets the current binding value. */\n    function getBinding(bindingIndex) {\n        ngDevMode && assertDataInRange(viewData[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(viewData[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && assertLessThan(bindingIndex, viewData.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (viewData[bindingIndex] === NO_CHANGE) {\n            viewData[bindingIndex] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding and returns the value. */\n    function updateBinding(bindingIndex, value) {\n        return viewData[bindingIndex] = value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(bindingIndex, exp1);\n        return bindingUpdated(bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated(bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated2(bindingIndex + 2, exp3, exp4) || different;\n    }\n    function getTView() {\n        return tView;\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList) {\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (firstTemplatePass) {\n            var currentDirectiveIndex = directives.length - 1;\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(previousOrParentTNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n    function assertDataNext(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n            2 /* CheckAlways */ | 64 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window), opts.playerHandler || null);\n        var rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef), createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n        rootView[INJECTOR$1] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var elementNode;\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n            component = createRootComponent(elementNode, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            executeInitAndContentHooks();\n            detectChangesInternal(elementNode.data, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(elementNode, componentDef, rootView, rootContext, hostFeatures) {\n        // Create directive instance with factory() and store at index 0 in directives array\n        var component = baseDirectiveCreate(0, componentDef.factory(), componentDef, elementNode);\n        if (componentDef.hostBindings)\n            queueHostBindingForCheck(0, componentDef.hostVars);\n        rootContext.components.push(component);\n        elementNode.data[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        setHostBindings(rootView[TVIEW].hostBindings);\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLViewData(component)[TVIEW];\n        // Root component is always created at dir index 0\n        queueInitHooks(0, def.onInit, def.doCheck, rootTView);\n        // Directive starting index 0, directive count 1 -> directive flags: 1\n        queueLifecycleHooks(1, rootTView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$1(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$1(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDefInternal} or a {@link DirectiveDefInternal}\n     * @param definition The definition to examine\n     */\n    function isComponentDef(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef(definition) && isComponentDef(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function () {\n                            superContentQueries_1();\n                            prevContentQueries_1();\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY$1) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     *\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     *\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        return ViewContainerRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handeled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @experimental\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @experimental\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        return Renderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._view = _view;\n        }\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = getRendererFactory();\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._view[PARENT][DIRECTIVES][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        return RootViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () {\n            var useRaf = typeof requestAnimationFrame !== 'undefined' && typeof window !== 'undefined';\n            return useRaf ? requestAnimationFrame.bind(window) : setTimeout;\n        },\n    });\n    /**\n     * A function used to wrap the `RendererFactory2`.\n     * Used in tests to change the `RendererFactory2` into a `DebugRendererFactory2`.\n     */\n    var WRAP_RENDERER_FACTORY2 = new InjectionToken('WRAP_RENDERER_FACTORY2');\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            if (ngModule) {\n                var wrapper = ngModule.injector.get(WRAP_RENDERER_FACTORY2, function (v) { return v; });\n                rendererFactory = wrapper(ngModule.injector.get(RendererFactory2));\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            // The first index of the first selector is the tag name.\n            var componentTag = this.componentDef.selectors[0][0];\n            var rootFlags = this.componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n                2 /* CheckAlways */ | 64 /* IsRoot */;\n            var rootContext = ngModule && !isInternalRootView ?\n                ngModule.injector.get(ROOT_CONTEXT) :\n                createRootContext(requestAnimationFrame.bind(window));\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef), createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n            rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var elementNode;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                // Create element node at index 0 in data array\n                elementNode = hostElement(componentTag, hostNode, this.componentDef);\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(elementNode, this.componentDef, rootView, rootContext, [LifecycleHooksFeature]);\n                tElementNode = getTNode(0);\n                // Transform the arrays of native nodes into a LNode structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            adjustBlueprintForNewNode(rootView);\n                            var tNode = createNodeAtIndex(++index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // Execute the template in creation mode only, and then turn off the CreationMode flag\n                var componentView = elementNode.data;\n                renderEmbeddedTemplate(componentView, componentView[TVIEW], component, 1 /* Create */);\n                componentView[FLAGS] &= ~1 /* CreationMode */;\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, hostNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, hostNode) {\n            var _this = _super.call(this) || this;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(rootView);\n            _this.hostView._tViewNode = createNodeAtIndex(-1, 2 /* View */, null, null, null, rootView);\n            _this.injector = injector;\n            _this.location = new ElementRef(hostNode);\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injector The node injector in which the directive should be registered\n     * @param type The directive to register\n     */\n    function bloomAdd(injector, type) {\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        if (b7) {\n            b6 ? (b5 ? (injector.bf7 |= mask) : (injector.bf6 |= mask)) :\n                (b5 ? (injector.bf5 |= mask) : (injector.bf4 |= mask));\n        }\n        else {\n            b6 ? (b5 ? (injector.bf3 |= mask) : (injector.bf2 |= mask)) :\n                (b5 ? (injector.bf1 |= mask) : (injector.bf0 |= mask));\n        }\n    }\n    function getOrCreateNodeInjector() {\n        ngDevMode && assertPreviousIsParent();\n        return getOrCreateNodeInjectorForNode(getPreviousOrParentNode(), getPreviousOrParentTNode(), _getViewData());\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param node for which an injector should be retrieved / created.\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(node, tNode, hostView) {\n        // TODO: remove LNode arg when nodeInjector refactor is done\n        var nodeInjector = node.nodeInjector;\n        var parentLNode = getParentOrContainerNode(tNode, hostView);\n        var parentInjector = parentLNode && parentLNode.nodeInjector;\n        if (nodeInjector != parentInjector) {\n            return nodeInjector;\n        }\n        return node.nodeInjector = {\n            parent: parentInjector,\n            tNode: tNode,\n            view: hostView,\n            bf0: 0,\n            bf1: 0,\n            bf2: 0,\n            bf3: 0,\n            bf4: 0,\n            bf5: 0,\n            bf6: 0,\n            bf7: 0,\n            cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n            cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n            cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n            cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n            cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n            cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n            cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n            cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n        };\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param def The definition of the directive to be made public\n     */\n    function diPublicInInjector(di, def) {\n        bloomAdd(di, def.type);\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param def The definition of the directive to be made public\n     */\n    function diPublic(def) {\n        diPublicInInjector(getOrCreateNodeInjector(), def);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n    }\n    /**\n     * Creates an ElementRef and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef() {\n        return createElementRef(getPreviousOrParentTNode(), _getViewData());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef() {\n        return createTemplateRef(getPreviousOrParentTNode(), _getViewData());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef() {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(previousTNode, _getViewData());\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), _getViewData(), null);\n    }\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getOrCreateNodeInjector());\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @experimental\n     */\n    function injectAttribute(attrNameToInject) {\n        var tNode = getPreviousOrParentTNode();\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.flags >> 15 /* DirectiveStartingIndexShift */;\n            var componentView = getLNode(hostTNode, hostView).data;\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(di) {\n        var renderer = di.view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /**\n     * Returns the value associated to the given token from the injectors.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(nodeInjector, token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBit(token);\n        // If the token has a bloom hash, then it is a directive that is public to the injection system\n        // (diPublic) otherwise fall back to the module injector.\n        if (bloomHash !== null) {\n            var injector = nodeInjector;\n            while (injector) {\n                // Get the closest potential matching injector (upwards in the injector tree) that\n                // *potentially* has the token.\n                injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n                // If no injector is found, we *know* that there is no ancestor injector that contains the\n                // token, so we abort.\n                if (!injector) {\n                    break;\n                }\n                // At this point, we have an injector which *may* contain the token, so we step through the\n                // directives associated with the injector's corresponding node to get the directive instance.\n                var tNode = injector.tNode;\n                var injectorView = injector.view;\n                var nodeFlags = tNode.flags;\n                var count = nodeFlags & 4095 /* DirectiveCountMask */;\n                if (count !== 0) {\n                    var start = nodeFlags >> 15 /* DirectiveStartingIndexShift */;\n                    var end = start + count;\n                    var defs = injectorView[TVIEW].directives;\n                    for (var i = start; i < end; i++) {\n                        // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                        // and matches the given token, return the directive instance.\n                        var directiveDef = defs[i];\n                        if (directiveDef.type === token && directiveDef.diPublic) {\n                            return injectorView[DIRECTIVES][i];\n                        }\n                    }\n                }\n                // If we *didn't* find the directive for the token and we are searching the current node's\n                // injector, it's possible the directive is on this node and hasn't been created yet.\n                var instance = void 0;\n                if (injector === nodeInjector &&\n                    (instance = searchMatchesQueuedForCreation(token, injectorView[TVIEW]))) {\n                    return instance;\n                }\n                // The def wasn't found anywhere on this node, so it was a false positive.\n                // If flags permit, traverse up the tree and continue searching.\n                if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                    injector = null;\n                }\n                else {\n                    injector = injector.parent;\n                }\n            }\n        }\n        var moduleInjector = nodeInjector.view[INJECTOR$1];\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    function searchMatchesQueuedForCreation(token, hostTView) {\n        var matches = hostTView.currentMatches;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                if (def.type === token) {\n                    return resolveDirective(def, i + 1, matches, hostTView);\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBit(token) {\n        var id = token[NG_ELEMENT_ID];\n        return typeof id === 'number' ? id & BLOOM_MASK : null;\n    }\n    /**\n     * Finds the closest injector that might have a certain directive.\n     *\n     * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n     * check and a starting injector, this function traverses up injectors until it finds an\n     * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n     * injector may have that directive. It only *may* have the directive because directives begin\n     * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n     * different directive sharing the bit.\n     *\n     * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n     * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n     * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n     * the directive and do not need to be checked.\n     *\n     * @param injector The starting node injector to check\n     * @param  bloomBit The bit to check in each injector's bloom filter\n     * @param  flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n     * @returns An injector that might have the directive\n     */\n    function bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n        // match.\n        var injector = flags & 4 /* SkipSelf */ ? startInjector.parent : startInjector;\n        while (injector) {\n            // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n            // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n            // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n            var value = void 0;\n            if (b7) {\n                value = b6 ? (b5 ? injector.bf7 : injector.bf6) : (b5 ? injector.bf5 : injector.bf4);\n            }\n            else {\n                value = b6 ? (b5 ? injector.bf3 : injector.bf2) : (b5 ? injector.bf1 : injector.bf0);\n            }\n            // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n            // this injector is a potential match.\n            if (value & mask) {\n                return injector;\n            }\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                return null;\n            }\n            // If the current injector does not have the directive, check the bloom filters for the ancestor\n            // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n            if (b7) {\n                value = b6 ? (b5 ? injector.cbf7 : injector.cbf6) : (b5 ? injector.cbf5 : injector.cbf4);\n            }\n            else {\n                value = b6 ? (b5 ? injector.cbf3 : injector.cbf2) : (b5 ? injector.cbf1 : injector.cbf0);\n            }\n            // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n            // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n            if (value & mask) {\n                injector = injector.parent;\n            }\n            else {\n                return null;\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks whether the current injector and its parent are in the same host view.\n     *\n     * This is necessary to support @Host() decorators. If @Host() is set, we should stop searching once\n     * the injector and its parent view don't match because it means we'd cross the view boundary.\n     */\n    function sameHostView(injector) {\n        return !!injector.parent && injector.parent.view === injector.view;\n    }\n    var ReadFromInjectorFn = /** @class */ (function () {\n        function ReadFromInjectorFn(read) {\n            this.read = read;\n        }\n        return ReadFromInjectorFn;\n    }());\n    /**\n     * Creates an ElementRef for a given node injector and stores it on the injector.\n     *\n     * @param di The node injector where we should store a created ElementRef\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(tNode, view) {\n        return new ElementRef$1(getLNode(tNode, view).native);\n    }\n    /** A ref to a node's native element. */\n    var ElementRef$1 = /** @class */ (function (_super) {\n        __extends(ElementRef$$1, _super);\n        function ElementRef$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ElementRef$$1;\n    }(ElementRef));\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(hostTNode, hostView) {\n        var hostLNode = getLNode(hostTNode, hostView);\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer = createLContainer(hostView, true);\n        var comment = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var lContainerNode = createLNodeObject(0 /* Container */, hostLNode.nodeInjector, comment, lContainer);\n        lContainer[RENDER_PARENT] = getRenderParent(hostTNode, hostView);\n        appendChild(comment, hostTNode, hostView);\n        if (!hostTNode.dynamicContainerNode) {\n            hostTNode.dynamicContainerNode =\n                createTNode(0 /* Container */, -1, null, null, hostTNode, null);\n        }\n        hostLNode.dynamicLContainerNode = lContainerNode;\n        addToViewTree(hostView, hostTNode.index, lContainer);\n        return new ViewContainerRef$1(lContainer, hostTNode.dynamicContainerNode, hostTNode, hostView);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_lInjector) {\n            this._lInjector = _lInjector;\n        }\n        NodeInjector.prototype.get = function (token) {\n            if (token === TemplateRef) {\n                return createTemplateRef(this._lInjector.tNode, this._lInjector.view);\n            }\n            if (token === ViewContainerRef) {\n                return createContainerRef(this._lInjector.tNode, this._lInjector.view);\n            }\n            if (token === ElementRef) {\n                return createElementRef(this._lInjector.tNode, this._lInjector.view);\n            }\n            if (token === ChangeDetectorRef) {\n                return createViewRef(this._lInjector.tNode, this._lInjector.view, null);\n            }\n            if (token === Renderer2) {\n                return getOrCreateRenderer2(this._lInjector);\n            }\n            return getOrCreateInjectable(this._lInjector, token);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * A ref to a container that enables adding and removing views from that container\n     * imperatively.\n     */\n    var ViewContainerRef$1 = /** @class */ (function (_super) {\n        __extends(ViewContainerRef$$1, _super);\n        function ViewContainerRef$$1(_lContainer, _tContainerNode, _hostTNode, _hostView) {\n            var _this = _super.call(this) || this;\n            _this._lContainer = _lContainer;\n            _this._tContainerNode = _tContainerNode;\n            _this._hostTNode = _hostTNode;\n            _this._hostView = _hostView;\n            _this._viewRefs = [];\n            return _this;\n        }\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"element\", {\n            get: function () {\n                // TODO: Remove LNode lookup when removing LNode.nodeInjector\n                var injector = getOrCreateNodeInjectorForNode(this._getHostNode(), this._hostTNode, this._hostView);\n                return createElementRef(injector.tNode, injector.view);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"injector\", {\n            get: function () {\n                // TODO: Remove LNode lookup when removing LNode.nodeInjector\n                var injector = getOrCreateNodeInjectorForNode(this._getHostNode(), this._hostTNode, this._hostView);\n                return new NodeInjector(injector);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var parentLInjector = getParentLNode(this._hostTNode, this._hostView).nodeInjector;\n                return parentLInjector ? new NodeInjector(parentLInjector) : new NullInjector();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef$$1.prototype.clear = function () {\n            while (this._lContainer[VIEWS].length) {\n                this.remove(0);\n            }\n        };\n        ViewContainerRef$$1.prototype.get = function (index) { return this._viewRefs[index] || null; };\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"length\", {\n            get: function () { return this._lContainer[VIEWS].length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef$$1.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var adjustedIdx = this._adjustIndex(index);\n            var viewRef = templateRef\n                .createEmbeddedView(context || {}, this._lContainer, this._tContainerNode, this._hostView, adjustedIdx);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && contextInjector) {\n                ngModuleRef = contextInjector.get(NgModuleRef, null);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef$$1.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var lView = viewRef._view;\n            var adjustedIdx = this._adjustIndex(index);\n            insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._tContainerNode.parent.index);\n            var container$$1 = this._getHostNode().dynamicLContainerNode;\n            var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], container$$1);\n            addRemoveViewFromContainer(lView, true, beforeNode);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.move = function (viewRef, newIndex) {\n            var index = this.indexOf(viewRef);\n            this.detach(index);\n            this.insert(viewRef, this._adjustIndex(newIndex));\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n        ViewContainerRef$$1.prototype.remove = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            removeView(this._lContainer, this._tContainerNode, adjustedIdx);\n            this._viewRefs.splice(adjustedIdx, 1);\n        };\n        ViewContainerRef$$1.prototype.detach = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            detachView(this._lContainer, adjustedIdx, !!this._tContainerNode.detached);\n            return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n        };\n        ViewContainerRef$$1.prototype._adjustIndex = function (index, shift) {\n            if (shift === void 0) { shift = 0; }\n            if (index == null) {\n                return this._lContainer[VIEWS].length + shift;\n            }\n            if (ngDevMode) {\n                assertGreaterThan(index, -1, 'index must be positive');\n                // +1 because it's legal to insert at the end.\n                assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n            }\n            return index;\n        };\n        ViewContainerRef$$1.prototype._getHostNode = function () { return getLNode(this._hostTNode, this._hostView); };\n        return ViewContainerRef$$1;\n    }(ViewContainerRef));\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(hostTNode, hostView) {\n        var hostNode = getLNode(hostTNode, hostView);\n        ngDevMode && assertNodeType(hostTNode, 0 /* Container */);\n        ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n        return new TemplateRef$1(hostView, createElementRef(hostTNode, hostView), hostTNode.tViews, getRenderer(), hostNode.data[QUERIES]);\n    }\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n    var TemplateRef$1 = /** @class */ (function (_super) {\n        __extends(TemplateRef$$1, _super);\n        function TemplateRef$$1(_declarationParentView, elementRef, _tView, _renderer, _queries) {\n            var _this = _super.call(this) || this;\n            _this._declarationParentView = _declarationParentView;\n            _this.elementRef = elementRef;\n            _this._tView = _tView;\n            _this._renderer = _renderer;\n            _this._queries = _queries;\n            return _this;\n        }\n        TemplateRef$$1.prototype.createEmbeddedView = function (context, container$$1, tContainerNode, hostView, index) {\n            var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries);\n            if (container$$1) {\n                insertView(lView, container$$1, hostView, index, tContainerNode.parent.index);\n            }\n            renderEmbeddedTemplate(lView, this._tView, context, 1 /* Create */);\n            var viewRef = new ViewRef(lView, context, -1);\n            viewRef._tViewNode = lView[HOST_NODE];\n            return viewRef;\n        };\n        return TemplateRef$$1;\n    }(TemplateRef));\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This feature publishes the directive (or component) into the DI system, making it visible to\n     * others for injection.\n     *\n     * @param definition\n     */\n    function PublicFeature(definition) {\n        definition.diPublic = diPublic;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /{\\$([^}]+)}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, templateRoots, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n        var instructions = (new Array(nbTemplates)).fill(undefined);\n        generateMappingInstructions(0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param tmplIndex The order of appearance of the template.\n     * 0 for the root template, following indexes match the order in `templateRoots`.\n     * @param partIndex The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(tmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex) {\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        var currentElements = elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n        var currentExpressions = expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n        instructions[tmplIndex] = tmplInstructions;\n        for (; partIndex < translationParts.length; partIndex++) {\n            // The value can either be text or the name of a placeholder (element/template root/expression)\n            var value = translationParts[partIndex];\n            // Odd indexes are placeholders\n            if (partIndex & 1) {\n                var phIndex = void 0;\n                if (currentElements && currentElements[value] !== undefined) {\n                    phIndex = currentElements[value];\n                    // The placeholder represents a DOM element, add an instruction to move it\n                    var templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n                    if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n                        // This is a template root, it has no closing tag, not treating it as an element\n                        tmplInstructions.push(phIndex | -2147483648 /* TemplateRoot */);\n                    }\n                    else {\n                        tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                        openedTagCount++;\n                    }\n                    phVisited.push(value);\n                }\n                else if (currentExpressions && currentExpressions[value] !== undefined) {\n                    phIndex = currentExpressions[value];\n                    // The placeholder represents an expression, add an instruction to move it\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else {\n                    // It is a closing tag\n                    tmplInstructions.push(-1073741824 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (phIndex !== undefined && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (templateRoots) {\n                    var newTmplIndex = templateRoots.indexOf(value) + 1;\n                    if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n                        partIndex = generateMappingInstructions(newTmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n                    }\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Add instructions to remove elements that are not used in the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        // Add instructions to remove expressions that are not used in the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index.toString(2).length, 28, \"Index \" + index + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                tmplInstructions.push(i | -1610612736 /* Any */);\n            }\n        }\n        return partIndex;\n    }\n    // TODO: Remove LNode arg when we remove dynamicContainerNode\n    function appendI18nNode(node, tNode, parentTNode, previousTNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = _getViewData();\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = viewData[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n                tNode.next = parentTNode.child;\n                parentTNode.child = tNode;\n            }\n            else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n                tNode.next = previousTNode.next;\n                previousTNode.next = tNode;\n            }\n            else {\n                tNode.next = null;\n            }\n            if (parentTNode !== viewData[HOST_NODE]) {\n                tNode.parent = parentTNode;\n            }\n        }\n        appendChild(node.native, tNode, viewData);\n        // Template containers also have a comment node for the `ViewContainerRef` that should be moved\n        if (tNode.type === 0 /* Container */ && node.dynamicLContainerNode) {\n            appendChild(node.dynamicLContainerNode.native, tNode, viewData);\n            return tNode.dynamicContainerNode;\n        }\n        return tNode;\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = _getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var startTNode = getTNode(startIndex);\n        var localParentTNode = startTNode.parent || viewData[HOST_NODE];\n        var localPreviousTNode = localParentTNode;\n        resetComponentState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var elementIndex = instruction & 536870911 /* IndexMask */;\n                    var element$$1 = load(elementIndex);\n                    var elementTNode = getTNode(elementIndex);\n                    localPreviousTNode =\n                        appendI18nNode(element$$1, elementTNode, localParentTNode, localPreviousTNode);\n                    localParentTNode = elementTNode;\n                    break;\n                case 1610612736 /* Expression */:\n                case -2147483648 /* TemplateRoot */:\n                case -1610612736 /* Any */:\n                    var nodeIndex = instruction & 536870911 /* IndexMask */;\n                    var node = load(nodeIndex);\n                    localPreviousTNode =\n                        appendI18nNode(node, getTNode(nodeIndex), localParentTNode, localPreviousTNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createNodeAtIndex takes a raw index (not adjusted by header offset).\n                    adjustBlueprintForNewNode(viewData);\n                    var lastNodeIndex = viewData.length - 1 - HEADER_OFFSET;\n                    var textTNode = createNodeAtIndex(lastNodeIndex, 3 /* Element */, textRNode, null, null);\n                    localPreviousTNode = appendI18nNode(loadElement(lastNodeIndex), textTNode, localParentTNode, localPreviousTNode);\n                    resetComponentState();\n                    break;\n                case -1073741824 /* CloseNode */:\n                    localPreviousTNode = localParentTNode;\n                    localParentTNode = localParentTNode.parent || viewData[HOST_NODE];\n                    break;\n                case -536870912 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var removeIndex = instruction & 536870911 /* IndexMask */;\n                    var removedNode = load(removeIndex);\n                    var removedTNode = getTNode(removeIndex);\n                    removeChild(removedTNode, removedNode.native || null, viewData);\n                    // For template containers we also need to remove their `ViewContainerRef` from the DOM\n                    if (removedTNode.type === 0 /* Container */ && removedNode.dynamicLContainerNode) {\n                        removeChild(removedTNode, removedNode.dynamicLContainerNode.native || null, viewData);\n                        removedTNode.dynamicContainerNode.detached = true;\n                        removedNode.dynamicLContainerNode.data[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of an expression has changed and replaces it by its value in a translation,\n     * or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation1(instructions, v0) {\n        var different = bindingUpdated(_getViewData()[BINDING_INDEX]++, v0);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                res += stringify$1(v0);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation2(instructions, v0, v1) {\n        var viewData = _getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b1 ? v1 : v0;\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation3(instructions, v0, v1, v2) {\n        var viewData = _getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? v2 : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation4(instructions, v0, v1, v2, v3) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation5(instructions, v0, v1, v2, v3, v4) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */ function i18nInterpolation6(instructions, v0, v1, v2, v3, v4, v5) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation7(instructions, v0, v1, v2, v3, v4, v5, v6) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     * @param v7 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation8(instructions, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var viewData = _getViewData();\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$2 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @experimental\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = injectableDefRecord(token);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$2) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$2;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefRecord(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return makeRecord(function () { return new token(); });\n        }\n        return makeRecord(injectableDef.factory);\n    }\n    function providerToRecord(provider) {\n        var token = resolveForwardRef(provider);\n        var value = NOT_YET;\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefRecord(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                value = provider.useValue;\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefRecord(classRef_1);\n                }\n            }\n        }\n        return makeRecord(factory, value);\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |--------consts--------|----------------vars----------------|------ hostVars (dir1) ------|\n     * ---------------------------------------------------------------------------------------------\n     * | nodes / refs / pipes | bindings | pure function bindings  | host bindings  | host slots |\n     * ---------------------------------------------------------------------------------------------\n     *                        ^                                    ^\n     *             TView.bindingStartIndex            TView.hostBindingStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the hostBindingStartIndex +\n     * any hostVars in directives evaluated before it.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return getCreationMode() ?\n            updateBinding(bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(bindingIndex, exp) ?\n            updateBinding(bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated2(bindingIndex, exp1, exp2) ?\n            updateBinding(bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated3(bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(bindingIndex + 4, exp5) || different ?\n            updateBinding(bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param currentView The view we are currently processing\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(tNode, currentView, type) {\n        var defs = currentView[TVIEW].directives;\n        if (defs) {\n            var flags = tNode.flags;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var start = flags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            for (var i = start; i < end; i++) {\n                var def = defs[i];\n                if (def.type === type && def.diPublic) {\n                    return i;\n                }\n            }\n        }\n        return null;\n    }\n    function readFromNodeInjector(tNode, currentView, read, directiveIdx) {\n        if (read instanceof ReadFromInjectorFn) {\n            return read.read(tNode, currentView, directiveIdx);\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(tNode, currentView, read);\n            if (matchingIdx !== null) {\n                return currentView[DIRECTIVES][matchingIdx];\n            }\n        }\n        return null;\n    }\n    function add(query, tNode) {\n        var currentView = _getViewData();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var directiveIdx = getIdxOfMatchingDirective(tNode, currentView, type);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // if read token and / or strategy is not specified, use type as read token\n                    var result = readFromNodeInjector(tNode, currentView, predicate.read || type, directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        // a node is matching a predicate - determine what to read\n                        // note that queries using name selector must specify read strategy\n                        ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n                        var result = readFromNodeInjector(tNode, currentView, predicate.read, directiveIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     *\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts`s have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ÉµdefineBase': defineBase,\n        'ÉµdefineComponent': defineComponent,\n        'ÉµdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ÉµdefineNgModule': defineNgModule,\n        'ÉµdefinePipe': definePipe,\n        'ÉµdirectiveInject': directiveInject,\n        'ÉµgetFactoryOf': getFactoryOf,\n        'ÉµgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ÉµinjectAttribute': injectAttribute,\n        'ÉµinjectChangeDetectorRef': injectChangeDetectorRef,\n        'ÉµinjectElementRef': injectElementRef,\n        'ÉµinjectTemplateRef': injectTemplateRef,\n        'ÉµinjectViewContainerRef': injectViewContainerRef,\n        'ÉµtemplateRefExtractor': templateRefExtractor,\n        'ÉµinjectRenderer2': injectRenderer2,\n        'ÉµNgOnChangesFeature': NgOnChangesFeature,\n        'ÉµPublicFeature': PublicFeature,\n        'ÉµInheritDefinitionFeature': InheritDefinitionFeature,\n        'ÉµelementAttribute': elementAttribute,\n        'Éµbind': bind,\n        'Éµcontainer': container,\n        'ÉµnextContext': nextContext,\n        'ÉµcontainerRefreshStart': containerRefreshStart,\n        'ÉµcontainerRefreshEnd': containerRefreshEnd,\n        'ÉµloadDirective': loadDirective,\n        'ÉµloadQueryList': loadQueryList,\n        'ÉµnamespaceHTML': namespaceHTML,\n        'ÉµnamespaceMathML': namespaceMathML,\n        'ÉµnamespaceSVG': namespaceSVG,\n        'ÉµelementStart': elementStart,\n        'ÉµelementEnd': elementEnd,\n        'Éµelement': element,\n        'ÉµEC': elementContainerStart,\n        'ÉµeC': elementContainerEnd,\n        'ÉµpureFunction0': pureFunction0,\n        'ÉµpureFunction1': pureFunction1,\n        'ÉµpureFunction2': pureFunction2,\n        'ÉµpureFunction3': pureFunction3,\n        'ÉµpureFunction4': pureFunction4,\n        'ÉµpureFunction5': pureFunction5,\n        'ÉµpureFunction6': pureFunction6,\n        'ÉµpureFunction7': pureFunction7,\n        'ÉµpureFunction8': pureFunction8,\n        'ÉµpureFunctionV': pureFunctionV,\n        'ÉµgetCurrentView': getCurrentView,\n        'ÉµrestoreView': restoreView,\n        'Éµinterpolation1': interpolation1,\n        'Éµinterpolation2': interpolation2,\n        'Éµinterpolation3': interpolation3,\n        'Éµinterpolation4': interpolation4,\n        'Éµinterpolation5': interpolation5,\n        'Éµinterpolation6': interpolation6,\n        'Éµinterpolation7': interpolation7,\n        'Éµinterpolation8': interpolation8,\n        'ÉµinterpolationV': interpolationV,\n        'ÉµelementClassProp': elementClassProp,\n        'Éµlistener': listener,\n        'Éµload': load,\n        'Éµprojection': projection,\n        'ÉµelementProperty': elementProperty,\n        'ÉµpipeBind1': pipeBind1,\n        'ÉµpipeBind2': pipeBind1,\n        'ÉµpipeBind3': pipeBind3,\n        'ÉµpipeBind4': pipeBind4,\n        'ÉµpipeBindV': pipeBindV,\n        'ÉµprojectionDef': projectionDef,\n        'Éµpipe': pipe,\n        'Éµquery': query,\n        'ÉµqueryRefresh': queryRefresh,\n        'ÉµregisterContentQuery': registerContentQuery,\n        'Éµreference': reference,\n        'ÉµelementStyling': elementStyling,\n        'ÉµelementStylingMap': elementStylingMap,\n        'ÉµelementStylingProp': elementStyleProp,\n        'ÉµelementStylingApply': elementStylingApply,\n        'Éµtemplate': template,\n        'Éµtext': text,\n        'ÉµtextBinding': textBinding,\n        'ÉµembeddedViewStart': embeddedViewStart,\n        'ÉµembeddedViewEnd': embeddedViewEnd,\n        'ÉµsanitizeHtml': sanitizeHtml,\n        'ÉµsanitizeStyle': sanitizeStyle,\n        'ÉµdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ÉµsanitizeResourceUrl': sanitizeResourceUrl,\n        'ÉµsanitizeScript': sanitizeScript,\n        'ÉµsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     *\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        return deps.map(function (dep) { return reflectDependency(dep); });\n    }\n    function reflectDependency(dep) {\n        var meta = {\n            token: new compiler.LiteralExpr(null),\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            if (token === ElementRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ElementRef;\n            }\n            else if (token === Injector) {\n                meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n            }\n            else if (token === TemplateRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.TemplateRef;\n            }\n            else if (token === ViewContainerRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ViewContainerRef;\n            }\n            else {\n                meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            }\n            meta.token = new compiler.WrappedNodeExpr(token);\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = new compiler.WrappedNodeExpr(param.token);\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = new compiler.LiteralExpr(param.attributeName);\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        compileNgModuleDefs(moduleType, ngModule);\n        setScopeOnDeclaredComponents(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            get: function () {\n                if (ngModuleDef === null) {\n                    var meta = {\n                        type: wrap(moduleType),\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2).map(wrapReference),\n                        declarations: declarations.map(wrapReference),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        emitInline: true,\n                    };\n                    var res = compiler.compileNgModule(meta);\n                    ngModuleDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", []);\n                }\n                return ngModuleDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: wrap(moduleType),\n                        deps: reflectDependencies(moduleType),\n                        providers: new compiler.WrappedNodeExpr(ngModule.providers || EMPTY_ARRAY$2),\n                        imports: new compiler.WrappedNodeExpr([\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ]),\n                    };\n                    var res = compiler.compileInjector(meta);\n                    ngInjectorDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", res.statements);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getNgModuleDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function wrap(value) {\n        return new compiler.WrappedNodeExpr(value);\n    }\n    function wrapReference(value) {\n        var wrapped = wrap(value);\n        return { value: wrapped, type: wrapped };\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    // The ConstantPool is a requirement of the JIT'er.\n                    var constantPool = new compiler.ConstantPool();\n                    // Parse the template and check for errors.\n                    var template = compiler.parseTemplate(metadata.template, \"ng://\" + stringify(type) + \"/template.html\", {\n                        preserveWhitespaces: metadata.preserveWhitespaces || false,\n                    }, '');\n                    if (template.errors !== undefined) {\n                        var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                        throw new Error(\"Errors during JIT compilation of template for \" + stringify(type) + \": \" + errors);\n                    }\n                    // Compile the component metadata, including template, into an expression.\n                    // TODO(alxhub): implement inputs, outputs, queries, etc.\n                    var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [], wrapDirectivesInClosure: false, styles: metadata.styles || [], encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, animations: metadata.animations || null }), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngComponentDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", preStatements);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var constantPool = new compiler.ConstantPool();\n                    var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                    var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngDirectiveDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, preStatements);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        var host = extractHostBindings(metadata, propMetadata);\n        var inputsFromMetadata = parseInputOutputs(metadata.inputs || []);\n        var outputsFromMetadata = parseInputOutputs(metadata.outputs || []);\n        var inputsFromType = {};\n        var outputsFromType = {};\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isInput(ann)) {\n                        inputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                    else if (isOutput(ann)) {\n                        outputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return {\n            name: type.name,\n            type: new compiler.WrappedNodeExpr(type),\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type), host: host,\n            inputs: __assign({}, inputsFromMetadata, inputsFromType),\n            outputs: __assign({}, outputsFromMetadata, outputsFromType),\n            queries: [],\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n        };\n    }\n    function extractHostBindings(metadata, propMetadata) {\n        // First parse the declarations from the metadata.\n        var _a = compiler.parseHostBindings(metadata.host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n        if (Object.keys(animations).length > 0) {\n            throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n        }\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isHostBinding(ann)) {\n                        properties[ann.hostPropertyName || field] = field;\n                    }\n                    else if (isHostListener(ann)) {\n                        listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                    }\n                });\n            }\n        };\n        // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return { attributes: attributes, listeners: listeners, properties: properties };\n    }\n    function isInput(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function isOutput(value) {\n        return value.ngMetadataName === 'Output';\n    }\n    function isHostBinding(value) {\n        return value.ngMetadataName === 'HostBinding';\n    }\n    function isHostListener(value) {\n        return value.ngMetadataName === 'HostListener';\n    }\n    function parseInputOutputs(values) {\n        return values.reduce(function (map, value) {\n            var _a = __read(value.split(',').map(function (piece) { return piece.trim(); }), 2), field = _a[0], property = _a[1];\n            map[field] = property || field;\n            return map;\n        }, {});\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Check whether the injectable metadata includes a provider specification.\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var ctorDeps = reflectDependencies(type);\n                    var userDeps = undefined;\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        userDeps = convertDependencies(meta.deps);\n                    }\n                    // Decide which flavor of factory to generate, based on the provider specified.\n                    // Only one of the use* fields should be set.\n                    var useClass = undefined;\n                    var useFactory = undefined;\n                    var useValue = undefined;\n                    var useExisting = undefined;\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        useClass = new compiler.WrappedNodeExpr(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    var _a = compiler.compileInjectable({\n                        name: type.name,\n                        type: new compiler.WrappedNodeExpr(type),\n                        providedIn: computeProvidedIn(meta.providedIn),\n                        useClass: useClass,\n                        useFactory: useFactory,\n                        useValue: useValue,\n                        useExisting: useExisting,\n                        ctorDeps: ctorDeps,\n                        userDeps: userDeps,\n                    }), expression = _a.expression, statements = _a.statements;\n                    def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", statements);\n                }\n                return def;\n            },\n        });\n    }\n    function computeProvidedIn(providedIn) {\n        if (providedIn == null || typeof providedIn === 'string') {\n            return new compiler.LiteralExpr(providedIn);\n        }\n        else {\n            return new compiler.WrappedNodeExpr(providedIn);\n        }\n    }\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    var Éµ0$1 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: Éµ0$1 });\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var sourceMapUrl = \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\";\n                    var name_1 = type.name;\n                    var res = compiler.compilePipeFromMetadata({\n                        name: name_1,\n                        type: new compiler.WrappedNodeExpr(type),\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true,\n                    });\n                    ngPipeDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, res.statements);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ivyEnabled = true;\n    var R3_COMPILE_COMPONENT = compileComponent;\n    var R3_COMPILE_DIRECTIVE = compileDirective;\n    var R3_COMPILE_INJECTABLE = compileInjectable;\n    var R3_COMPILE_NGMODULE = compileNgModule;\n    var R3_COMPILE_PIPE = compilePipe;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() { }\n    var R3_COMPILE_COMPONENT__POST_NGCC__ = R3_COMPILE_COMPONENT;\n    var R3_COMPILE_DIRECTIVE__POST_NGCC__ = R3_COMPILE_DIRECTIVE;\n    var R3_COMPILE_INJECTABLE__POST_NGCC__ = R3_COMPILE_INJECTABLE;\n    var R3_COMPILE_NGMODULE__POST_NGCC__ = R3_COMPILE_NGMODULE;\n    var R3_COMPILE_PIPE__POST_NGCC__ = R3_COMPILE_PIPE;\n    var ivyEnable__POST_NGCC__ = ivyEnabled;\n    var R3_COMPILE_COMPONENT__PRE_NGCC__ = noop;\n    var R3_COMPILE_DIRECTIVE__PRE_NGCC__ = noop;\n    var R3_COMPILE_INJECTABLE__PRE_NGCC__ = preR3InjectableCompile;\n    var R3_COMPILE_NGMODULE__PRE_NGCC__ = preR3NgModuleCompile;\n    var R3_COMPILE_PIPE__PRE_NGCC__ = noop;\n    var ivyEnable__PRE_NGCC__ = false;\n    var ivyEnabled$1 = ivyEnable__PRE_NGCC__;\n    var R3_COMPILE_COMPONENT$1 = R3_COMPILE_COMPONENT__PRE_NGCC__;\n    var R3_COMPILE_DIRECTIVE$1 = R3_COMPILE_DIRECTIVE__PRE_NGCC__;\n    var R3_COMPILE_INJECTABLE$1 = R3_COMPILE_INJECTABLE__PRE_NGCC__;\n    var R3_COMPILE_NGMODULE$1 = R3_COMPILE_NGMODULE__PRE_NGCC__;\n    var R3_COMPILE_PIPE$1 = R3_COMPILE_PIPE__PRE_NGCC__;\n    ////////////////////////////////////////////////////////////\n    // Glue code which should be removed after Ivy is default //\n    ////////////////////////////////////////////////////////////\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var Éµ0$2 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: Éµ0$2 });\n    var EMPTY_ARRAY$3 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$3))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function preR3InjectableCompile(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return R3_COMPILE_DIRECTIVE$1(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return R3_COMPILE_COMPONENT$1(type, meta); });\n    /**\n     *\n     *\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return R3_COMPILE_PIPE$1(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     *\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     *\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return R3_COMPILE_NGMODULE$1(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     *\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    var VERSION = new Version('7.0.0-beta.6+54.sha-1e02cd9');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Injectable decorator and metadata.\n    *\n    * @Annotation\n    */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return R3_COMPILE_INJECTABLE$1(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @deprecated No replacement\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @experimental\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_NGCC__;\n    function compileNgModuleFactory__PRE_NGCC__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler$$1 = compilerFactory.createCompiler([options]);\n        return compiler$$1.compileModuleAsync(moduleType);\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @experimental\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this.nativeNode = nativeNode;\n            this._debugContext = _debugContext;\n            this.listeners = [];\n            this.parent = null;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @experimental\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        Object.defineProperty(DebugRenderer2.prototype, \"debugContext\", {\n            get: function () { return this.debugContextFactory(); },\n            enumerable: true,\n            configurable: true\n        });\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n     *\n     * The created DebugRenderer know how to create a Debug Context specific to IVY.\n     */\n    var Render3DebugRendererFactory2 = /** @class */ (function (_super) {\n        __extends(Render3DebugRendererFactory2, _super);\n        function Render3DebugRendererFactory2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Render3DebugRendererFactory2.prototype.createRenderer = function (element$$1, renderData) {\n            var renderer = _super.prototype.createRenderer.call(this, element$$1, renderData);\n            renderer.debugContextFactory = function () { return new Render3DebugContext(_getViewData()); };\n            return renderer;\n        };\n        return Render3DebugRendererFactory2;\n    }(DebugRendererFactory2));\n    /**\n     * Stores context information about view nodes.\n     *\n     * Used in tests to retrieve information those nodes.\n     */\n    var Render3DebugContext = /** @class */ (function () {\n        function Render3DebugContext(viewData) {\n            this.viewData = viewData;\n            // The LNode will be created next and appended to viewData\n            this.nodeIndex = viewData ? viewData.length : null;\n        }\n        Object.defineProperty(Render3DebugContext.prototype, \"view\", {\n            get: function () { return this.viewData; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"injector\", {\n            get: function () {\n                if (this.nodeIndex !== null) {\n                    var lElementNode = this.view[this.nodeIndex];\n                    var nodeInjector = lElementNode.nodeInjector;\n                    if (nodeInjector) {\n                        return new NodeInjector(nodeInjector);\n                    }\n                }\n                return Injector.NULL;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"component\", {\n            get: function () {\n                // TODO(vicb): why/when\n                if (this.nodeIndex === null) {\n                    return null;\n                }\n                var tView = this.view[TVIEW];\n                var components = tView.components;\n                return (components && components.indexOf(this.nodeIndex) == -1) ?\n                    null :\n                    this.view[this.nodeIndex].data[CONTEXT];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"providerTokens\", {\n            // TODO(vicb): add view providers when supported\n            get: function () {\n                var matchedDirectives = [];\n                // TODO(vicb): why/when\n                if (this.nodeIndex === null) {\n                    return matchedDirectives;\n                }\n                var directives = this.view[DIRECTIVES];\n                if (directives) {\n                    var currentNode = this.view[this.nodeIndex];\n                    for (var dirIndex = 0; dirIndex < directives.length; dirIndex++) {\n                        var directive = directives[dirIndex];\n                        if (getLElementNode(directive) === currentNode) {\n                            matchedDirectives.push(directive.constructor);\n                        }\n                    }\n                }\n                return matchedDirectives;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"references\", {\n            get: function () {\n                // TODO(vicb): implement retrieving references\n                throw new Error('Not implemented yet in ivy');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"context\", {\n            get: function () {\n                if (this.nodeIndex === null) {\n                    return null;\n                }\n                var lNode = this.view[this.nodeIndex];\n                return lNode.view[CONTEXT];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"componentRenderElement\", {\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"renderNode\", {\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(vicb): check previous implementation\n        Render3DebugContext.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            console.error.apply(console, __spread(values));\n        };\n        return Render3DebugContext;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function addPlayer(ref, player) {\n        var elementContext = getContext(ref);\n        var animationContext = getOrCreateAnimationContext(elementContext.native, elementContext);\n        animationContext.push(player);\n        player.addEventListener(200 /* Destroyed */, function () {\n            var index = animationContext.indexOf(player);\n            if (index >= 0) {\n                animationContext.splice(index, 1);\n            }\n            player.destroy();\n        });\n        var rootContext = getRootContext(elementContext.lViewData);\n        var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n        playerHandler.queuePlayer(player, ref);\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        // change detection may or may not happen therefore\n        // the core code needs to be kicked off to flush the animations\n        rootContext.flags |= 2 /* FlushPlayers */;\n        if (nothingScheduled) {\n            scheduleTick(rootContext);\n        }\n    }\n    function getPlayers(ref) {\n        return getOrCreateAnimationContext(ref);\n    }\n    function getOrCreateAnimationContext(target, context) {\n        context = context || getContext(target);\n        if (ngDevMode && !context) {\n            throw new Error('Only elements that exist in an Angular application can be used for animations');\n        }\n        var lViewData = context.lViewData, lNodeIndex = context.lNodeIndex;\n        var value = lViewData[lNodeIndex];\n        var stylingContext = value;\n        if (!Array.isArray(value)) {\n            stylingContext = lViewData[lNodeIndex] = createEmptyStylingContext(value);\n        }\n        return stylingContext[1 /* AnimationContext */] || allocAnimationContext(stylingContext);\n    }\n    function allocAnimationContext(data) {\n        return data[1 /* AnimationContext */] = [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.Éµangular_packages_core_core_l = APPLICATION_MODULE_PROVIDERS;\n    exports.Éµangular_packages_core_core_i = _iterableDiffersFactory;\n    exports.Éµangular_packages_core_core_j = _keyValueDiffersFactory;\n    exports.Éµangular_packages_core_core_k = _localeFactory;\n    exports.Éµangular_packages_core_core_f = _appIdRandomProviderFactory;\n    exports.Éµangular_packages_core_core_g = DefaultIterableDifferFactory;\n    exports.Éµangular_packages_core_core_h = DefaultKeyValueDifferFactory;\n    exports.Éµangular_packages_core_core_c = ReflectiveInjector_;\n    exports.Éµangular_packages_core_core_d = ReflectiveDependency;\n    exports.Éµangular_packages_core_core_e = resolveReflectiveProviders;\n    exports.Éµangular_packages_core_core_m = wtfEnabled;\n    exports.Éµangular_packages_core_core_o = createScope;\n    exports.Éµangular_packages_core_core_n = detectWTF;\n    exports.Éµangular_packages_core_core_r = endTimeRange;\n    exports.Éµangular_packages_core_core_p = leave;\n    exports.Éµangular_packages_core_core_q = startTimeRange;\n    exports.Éµangular_packages_core_core_bd = getOrCreateAnimationContext;\n    exports.Éµangular_packages_core_core_y = createElementRef;\n    exports.Éµangular_packages_core_core_z = createTemplateRef;\n    exports.Éµangular_packages_core_core_w = createViewRef;\n    exports.Éµangular_packages_core_core_x = getOrCreateInjectable;\n    exports.Éµangular_packages_core_core_v = getOrCreateNodeInjector;\n    exports.Éµangular_packages_core_core_be = NG_INJECTABLE_DEF;\n    exports.Éµangular_packages_core_core_bb = _getViewData;\n    exports.Éµangular_packages_core_core_bc = bindingUpdated;\n    exports.Éµangular_packages_core_core_ba = getPreviousOrParentTNode;\n    exports.Éµangular_packages_core_core_bi = loadInternal;\n    exports.Éµangular_packages_core_core_a = makeParamDecorator;\n    exports.Éµangular_packages_core_core_b = makePropDecorator;\n    exports.Éµangular_packages_core_core_bf = getClosureSafeProperty;\n    exports.Éµangular_packages_core_core_s = _def;\n    exports.Éµangular_packages_core_core_t = DebugRendererFactory2;\n    exports.Éµangular_packages_core_core_u = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ÉµNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.ÉµgetInjectableDef = getInjectableDef;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled$1;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµresolveComponentResources = resolveComponentResources;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineBase = defineBase;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdefineNgModule = defineNgModule;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµRender3ComponentFactory = ComponentFactory$1;\n    exports.ÉµRender3ComponentRef = ComponentRef$1;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectElementRef = injectElementRef;\n    exports.ÉµinjectTemplateRef = injectTemplateRef;\n    exports.ÉµinjectViewContainerRef = injectViewContainerRef;\n    exports.ÉµinjectChangeDetectorRef = injectChangeDetectorRef;\n    exports.ÉµinjectRenderer2 = injectRenderer2;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµgetFactoryOf = getFactoryOf;\n    exports.ÉµgetInheritedFactory = getInheritedFactory;\n    exports.ÉµtemplateRefExtractor = templateRefExtractor;\n    exports.ÉµPublicFeature = PublicFeature;\n    exports.ÉµInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµRender3NgModuleRef = NgModuleRef$1;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNgModuleFactory = NgModuleFactory$1;\n    exports.ÉµNO_CHANGE = NO_CHANGE;\n    exports.Éµcontainer = container;\n    exports.ÉµnextContext = nextContext;\n    exports.ÉµelementStart = elementStart;\n    exports.ÉµnamespaceHTML = namespaceHTML;\n    exports.ÉµnamespaceMathML = namespaceMathML;\n    exports.ÉµnamespaceSVG = namespaceSVG;\n    exports.Éµelement = element;\n    exports.Éµlistener = listener;\n    exports.Éµtext = text;\n    exports.ÉµembeddedViewStart = embeddedViewStart;\n    exports.Éµquery = query;\n    exports.ÉµregisterContentQuery = registerContentQuery;\n    exports.ÉµloadDirective = loadDirective;\n    exports.Éµprojection = projection;\n    exports.Éµbind = bind;\n    exports.Éµinterpolation1 = interpolation1;\n    exports.Éµinterpolation2 = interpolation2;\n    exports.Éµinterpolation3 = interpolation3;\n    exports.Éµinterpolation4 = interpolation4;\n    exports.Éµinterpolation5 = interpolation5;\n    exports.Éµinterpolation6 = interpolation6;\n    exports.Éµinterpolation7 = interpolation7;\n    exports.Éµinterpolation8 = interpolation8;\n    exports.ÉµinterpolationV = interpolationV;\n    exports.ÉµpipeBind1 = pipeBind1;\n    exports.ÉµpipeBind2 = pipeBind2;\n    exports.ÉµpipeBind3 = pipeBind3;\n    exports.ÉµpipeBind4 = pipeBind4;\n    exports.ÉµpipeBindV = pipeBindV;\n    exports.ÉµpureFunction0 = pureFunction0;\n    exports.ÉµpureFunction1 = pureFunction1;\n    exports.ÉµpureFunction2 = pureFunction2;\n    exports.ÉµpureFunction3 = pureFunction3;\n    exports.ÉµpureFunction4 = pureFunction4;\n    exports.ÉµpureFunction5 = pureFunction5;\n    exports.ÉµpureFunction6 = pureFunction6;\n    exports.ÉµpureFunction7 = pureFunction7;\n    exports.ÉµpureFunction8 = pureFunction8;\n    exports.ÉµpureFunctionV = pureFunctionV;\n    exports.ÉµgetCurrentView = getCurrentView;\n    exports.ÉµrestoreView = restoreView;\n    exports.ÉµcontainerRefreshStart = containerRefreshStart;\n    exports.ÉµcontainerRefreshEnd = containerRefreshEnd;\n    exports.ÉµqueryRefresh = queryRefresh;\n    exports.ÉµloadQueryList = loadQueryList;\n    exports.ÉµelementEnd = elementEnd;\n    exports.ÉµelementProperty = elementProperty;\n    exports.ÉµprojectionDef = projectionDef;\n    exports.Éµreference = reference;\n    exports.ÉµelementAttribute = elementAttribute;\n    exports.ÉµelementStyling = elementStyling;\n    exports.ÉµelementStylingMap = elementStylingMap;\n    exports.ÉµelementStylingProp = elementStyleProp;\n    exports.ÉµelementStylingApply = elementStylingApply;\n    exports.ÉµelementClassProp = elementClassProp;\n    exports.ÉµtextBinding = textBinding;\n    exports.Éµtemplate = template;\n    exports.ÉµembeddedViewEnd = embeddedViewEnd;\n    exports.Éµstore = store;\n    exports.Éµload = load;\n    exports.Éµpipe = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.Éµi18nApply = i18nApply;\n    exports.Éµi18nExpMapping = i18nExpMapping;\n    exports.Éµi18nInterpolation1 = i18nInterpolation1;\n    exports.Éµi18nInterpolation2 = i18nInterpolation2;\n    exports.Éµi18nInterpolation3 = i18nInterpolation3;\n    exports.Éµi18nInterpolation4 = i18nInterpolation4;\n    exports.Éµi18nInterpolation5 = i18nInterpolation5;\n    exports.Éµi18nInterpolation6 = i18nInterpolation6;\n    exports.Éµi18nInterpolation7 = i18nInterpolation7;\n    exports.Éµi18nInterpolation8 = i18nInterpolation8;\n    exports.Éµi18nInterpolationV = i18nInterpolationV;\n    exports.Éµi18nMapping = i18nMapping;\n    exports.ÉµWRAP_RENDERER_FACTORY2 = WRAP_RENDERER_FACTORY2;\n    exports.ÉµRender3DebugRendererFactory2 = Render3DebugRendererFactory2;\n    exports.ÉµcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ÉµpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ÉµcompileComponent = compileComponent;\n    exports.ÉµcompileDirective = compileDirective;\n    exports.ÉµcompilePipe = compilePipe;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµgetContext = getContext;\n    exports.ÉµaddPlayer = addPlayer;\n    exports.ÉµgetPlayers = getPlayers;\n    exports.ÉµR3_COMPILE_COMPONENT__POST_NGCC__ = R3_COMPILE_COMPONENT__POST_NGCC__;\n    exports.ÉµR3_COMPILE_DIRECTIVE__POST_NGCC__ = R3_COMPILE_DIRECTIVE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_INJECTABLE__POST_NGCC__ = R3_COMPILE_INJECTABLE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_NGMODULE__POST_NGCC__ = R3_COMPILE_NGMODULE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_PIPE__POST_NGCC__ = R3_COMPILE_PIPE__POST_NGCC__;\n    exports.ÉµivyEnable__POST_NGCC__ = ivyEnable__POST_NGCC__;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}