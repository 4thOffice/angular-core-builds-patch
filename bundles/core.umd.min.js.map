{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","source","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","fn","R3ResolvedDependencyType","__window","window","__self","WorkerGlobalScope","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","inject","flags","Default","injectInjectorOnly","injectRootLimpMode","get","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","angularCoreDiEnv","ɵgetFactoryOf","getFactoryOf","typeAny","def","Type","Function","isType","v","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","USE_VALUE","provide","String","useValue","isUseClassProvider","useClass","isUseValueProvider","isUseFactoryProvider","useFactory","isUseExistingProvider","useExisting","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","compilerMeta","typeArgumentCount","ctorDeps","userDeps","InjectionToken","_desc","__NG_ELEMENT_ID__","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","Injector","parent","StaticInjector","NULL","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE$2","NG_TOKEN_PATH","NG_TEMP_TOKEN_PATH","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","Map","set","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","catchInjectorError","tokens","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","originalError","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","enumerable","configurable","KeyRegistry","_allKeys","has","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","some","metadata","_createDependency","paramMetadata","ChangeDetectionStrategy","ChangeDetectorStatus","Query","UNDEFINED","ReflectiveInjector","resolve","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_this","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","selector","data","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","ViewEncapsulation","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","clearResolutionOfComponentResourcesQueue","clear","unwrapResponse","response","EMPTY_OBJ","EMPTY_ARRAY$1","NodeInjectorFactory","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","HEADER_OFFSET","ACTIVE_INDEX","VIEWS","NATIVE","LCONTAINER_LENGTH","MONKEY_PATCH_KEY_NAME","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","isProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","renderStringify","loadInternal","view","readElementValue","getNativeByIndex","lView","getNativeByTNode","tNode","hostView","getTNode","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","isComponent","isComponentDef","template","isLContainer","isRootView","getRootView","readPatchedLView","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","defaultScheduler","requestAnimationFrame","setTimeout","addAllToArray","items","arr","findComponentView","rootTNode","resolveWindow","element","ownerDocument","defaultView","resolveDocument","resolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","ngContentSelectors","hostBindings","contentQueries","contentQueriesRefresh","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","styles","_","setInput","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","setComponentScope","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","elementDepthCount","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","throwNotFound","registerPreOrderHooks","directiveIndex","directiveDef","tView","initHooks","checkHooks","registerPostOrderHooks","firstTemplatePass","directiveStart","end","directiveEnd","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","checkNoChangesMode","executeHooks","firstPassHooks","initPhase","hooksToCall","callHooks","initHooksCount","isInitHook","directive","hook","bindingsEnabled","previousOrParentTNode","isParent","currentDirectiveDef","setCurrentDirectiveDef","enableBindings","disableBindings","getLView","restoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","enterView","newView","hostTNode","oldView","bindingStartIndex","leaveView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","previousIncludeViewProviders","previousInjectImplementation","injectorView","isFirstHostTNode","_tNode","_lView","getFactoryOf$1","getInheritedFactory","getLContext","mpValue","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootContext$1","getRootView$1","componentOrView","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","node","Node","isBrowserEvents","listener","useCapture","getListeners","lCleanup","tCleanup","cleanup","listeners","firstParam","secondParam","name_1","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","a","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","_findOriginalError","_findContext","errorLogger","getErrorLogger","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","removeChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","attrName","item","removeAttribute","childNode","nodeType","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","tagName","nodeName","toLowerCase","elAttr","lower","encodeEntities","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","sanitizer","safeHtml","getTemplateContent","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","sanitizeHtml","getSanitizer","sanitize","HTML","document","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","sanitizeScript","unsafeScript","SCRIPT","sanitizeUrlOrResourceUrl","tag","getUrlSanitizer","defaultStyleSanitizer","isPromise","then","isObservable","subscribe","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","throwMultipleComponentError","NO_CHANGE","updateBinding","bindingIndex","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","nativeParentNode","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","head","projection","head_1","head_1_1","nativeInsertBefore","nativeRemoveNode","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","executeOnDestroys","removeListeners","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","cleanupFn","destroy","insertBefore","nativeAppendOrInsertBefore","nativeAppendChild","childEl","childTNode","getRenderParent","getHighestElementOrICUContainer","getHostNative","ShadowDom","Native","anchorNode","getNativeAnchorNode","parentTNode","getBeforeNodeForView","childEl_1","childEl_1_1","containerNative","viewTNode","rNode","isHostElement","nativeParent","nativeRemoveChild","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","ANIMATION_PROP_PREFIX","createEmptyStylingContext","initialStyles","initialClasses","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","hasClassInput","initializeStaticContext","attrs","attr","patchInitialStylingValue","initialStyling","existingValue","renderInitialStylingValues","initialStylingValues","isEntryClassBased","setClass","setStyle","getMatchingBindingIndex","bindingName","start","getProp","_updateSingleStylingValue","offset","input","isClassBased","directiveRef","getDirectiveIndexFromRegistry","singleIndex","getSinglePropIndexValue","singlePropOffsetRegistryIndex","offsets","currValue","getValue","currFlag","getPointers","currDirective","getDirectiveIndexFromEntry","hasValueChanged","allowValueChange","currentValue","newValue","currentDirectiveOwner","newDirectiveOwner","isClassBased_1","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","playerBuilderIndex","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","getStyleSanitizer","setSanitizeFlag","sanitizeYes","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setDirectiveDirty","setContextDirty","setContextPlayersDirty","store","DashCase","style","removeStyle","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","limitToSingleClasses","findEntryPositionByProp","startIndex","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","entryIsClassBased","initialIndex","getInitialStylingValuesIndexOf","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","getDirectiveRegistryValuesIndexOf","keyValues","dirs","dirtyYes","getInitialClassNameValue","initialClassValues","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","selectorAttrValue","readClassValueFromTNode","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","_CLEAN_PROMISE","Promise","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","setHostBindings","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","viewAttached","syncViewWithBlueprint","componentTView","checkView","createLView","rendererFactory","createNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","getRenderFlags","nextContext","level","nextContextImpl","walkUpViews","nestingLevel","renderComponentOrTemplate","templateFn","normalExecutionPath","creationModeIsActive","begin","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","createDirectivesAndLocals","currentQueries","addNode","elementContainerEnd","elementCreate","hasStyling","setUpAttributes","getElementDepthCount","increaseElementDepthCount","inputData","initializeTNodeInputs","renderInitialStylesAndClasses","overriddenRenderer","rendererToUse","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","directiveRegistry","matches","clone","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","previousExpandoLength","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","viewQueryStartIndex","pipeRegistry","isProc","namespaceURI","attrVal","setAttribute","setAttributeNS","setProperty","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","eventName","listenerFn","eventTargetResolver","listenerInternal","componentHostSyntheticListener","loadComponentRenderer","loadRendererFn","lCleanupIndex","getCleanup","wrapListener","listen","generatePropertyAliases","propsLength","subscription","idx","decreaseElementDepthCount","setInputsForProperty","elementAttribute","namespace","element_1","strValue","elementProperty","nativeOnly","elementPropertyInternal","componentHostSyntheticProperty","dataValue","markDirtyIfOnPush","childComponentLView","savePropertyDebugData","lastBindingIndex","bindingMetadata","propertyMetadataStartIndex","propertyMetadataEndIndex","tParent","initialInputs","tViews","privateName","direction","propStore","isInput","defs","propertyAliasMap","internalName","elementStyling","classBindingNames","styleBindingNames","styleSanitizer","updateContextWithBindings","onlyProcessSingleClasses","findOrPatchDirectiveIntoRegistry","directiveRefs","nextOffsetInsertionIndex","detectedIndex","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","stylesOffset","singleClassesStartIndex","multiStylesStartIndex","multiClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","i_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","totalNewEntries","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","elementHostAttrs","patchContextWithStaticAttrs","startingIndex","elementStylingApply","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","targetDirectiveIndex","isContextDirty","isDirectiveDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","stillDirty","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","updateStyleProp","elementClassProp","classIndex","onOrOffClassValue","updateClassProp","addOrRemove","elementStylingMap","classes","hackImplementationOfElementStylingMap","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","classNames","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","styleProps","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","adjustedPropIndex","newProp","initialValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","ctxIndex_1","textNative","textBinding","element_2","textContent","directiveCount","elementIndex","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","tContainerNode","containerInternal","addTContainerToQueries","comment","queries","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","markViewDirty","preventDefault","returnValue","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInternal","detectChangesInRootView","hostTView","creationMode","executeViewQueryFn","markDirty","storeBindingMetadata","allocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","interpolationV","interpolation1","prefix","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextLView","load","directiveInject","injectAttribute","attrNameToInject","injectAttributeImpl","CLEAN_PROMISE","getCurrentView","getTViewCleanup","errorHandler","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","rf","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","features_1","features_1_1","ngInherit","superPrototype","SimpleChange","previousValue","firstChange","isFirstChange","NgOnChangesFeature","NgOnChangesFeatureImpl","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$2","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","_destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multiRecord_1","hasOnDestroy","paramLength","isExistingProvider","isFactoryProvider","classRef_1","ngModuleDetail","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_hostLContainer","_injectorIndex","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","viewRef","hostContainer","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","delete","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","createViewRef","componentIndex","hostComponentView","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","ViewContainerRef_","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","templateRef","adjustedIdx","_adjustIndex","createComponent","componentFactory","ngModuleRef","contextInjector","parentInjector","componentRef","insert","destroyed","move","shift","commentNode","nativeNextSibling","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","scope","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","pop","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","_data","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","renderNode$$1","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","ROOT_CONTEXT","SCHEDULER","ComponentFactory$$1","isBoundToModule","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","ComponentRef$$1","_rootLView","destroyCbs","ELEMENT_MARKER","marker","COMMENT_MARKER","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","pos","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","actual","expected","throwError","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","i18nVarsCount","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","tIcuIndex","text$$1","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","icus","appendI18nNode","previousTNode","i18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders_1","placeholder","templateId","isCloseTemplateTag","currentTemplateId","placeholders","_idx","list","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","visitedPlaceholders","readCreateOpCodes","removeNode","currentTNode","opCode","textRNode","destinationNodeIndex","destinationTNode","commentValue","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","max","opCodes","parseNodes","currentNode","nestedIcusToCreate","element$$1","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","_r3Injector","NgModuleFactory$1","NgModuleFactory$$1","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","unwrapValue$1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","QueryList","_results","filter","reduce","init","toArray","reset","flatten$1","flat","flatItem","last","notifyOnChanges","LQueries_","shallow","deep","track","queryList","predicate","descend","read","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","getOrCreateCurrentQueries","QueryType","storeCleanupWithContext","queryRefresh","loadViewQuery","contentQuery","tViewContentQueries","loadContentQuery","templateRefExtractor","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵallocHostVars","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵcomponentHostSyntheticProperty","ɵcomponentHostSyntheticListener","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵqueryRefresh","ɵviewQuery","ɵloadViewQuery","ɵcontentQuery","ɵloadContentQuery","ɵreference","ɵelementStyling","ɵelementHostAttrs","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵresolveWindow","ɵresolveDocument","ɵresolveBody","ɵsetComponentScope","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","ɵsanitizeUrl","ɵsanitizeUrlOrResourceUrl","NgModuleFactoryLoader","assertSameOrNotExisting","incoming","getModuleFactory__POST_R3__","noModuleError","getModuleFactory","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","flatten$2","expandModuleWithProviders","emitInline","registerNgModuleType","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","mapFn","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","sourceMapUrl","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","viewQueries","extractQueriesMetadata","interpolation","hasSelectorScope","compileDirective","facade","isContentQuery","lifecycle","usesOnChanges","usesInheritance","extendsDirectlyFromObject","extractExportAs","part","isQueryAnn","queriesMeta","field","annotations_1","ann","isInputAnn","convertToR3QueryMetadata","convertToR3QueryPredicate","splitByComma","piece","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","trace","events","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","promise","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","isBoundToModule__POST_R3__","cf","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","ApplicationRef_Factory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","eAttrs","lContext","lNode","eClasses","classList","eStyles","getPropertyValue","children","getDebugNode__POST_R3__","_queryNodeChildrenR3","elementsOnly","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","MissingTranslationStrategy","DebugNode","DebugElement","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","ViewAction","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ApplicationModule","ApplicationModule_Factory","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵinject","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","getRootContext$2","ɵsetClassMetadata","setClassMetadata","clazz","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","ɵisBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵgetModuleFactory__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v8.0.0-beta.3+15.sha-22d3226\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'inject': inject,\n        'ɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE$2 in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE$2 in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return !!(component.templateUrl || component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        componentResourceResolutionQueue.clear();\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY$1 = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY_OBJ);\n        Object.freeze(EMPTY_ARRAY$1);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        assertEqual(node instanceof Node, true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6; // Rename to `T_HOST`?\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var TAIL = 14;\n    var CONTAINER_INDEX = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 18;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 6;\n    // Because interfaces in TS/JS cannot be instanceof-checked this means that we\n    // need to rely on predictable characteristics of data-structures to check if they\n    // are what we expect for them to be. The `LContainer` interface code below has a\n    // fixed length and the constant value below references that. Using the length value\n    // below we can predictably gaurantee that we are dealing with an `LContainer` array.\n    // This value MUST be kept up to date with the length of the `LContainer` array\n    // interface below so that runtime type checking can work.\n    var LCONTAINER_LENGTH = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, \n        /**\n         * Set to `true` if the token is a provider, and not a directive.\n         */\n        isProvider, injectImplementation) {\n            this.factory = factory;\n            this.isProvider = isProvider;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     */\n    function renderStringify(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        if (typeof value == 'object' && typeof value.type == 'function')\n            return value.type.name || value.type;\n        return '' + value;\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    /**\n     * Takes the value of a slot in `LView` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LView. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LView`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return readElementValue(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && value.length === LCONTAINER_LENGTH;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lView = Array.isArray(target) ? target : readPatchedLView(target);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[HOST_NODE];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[HOST_NODE];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     * Equivalent to ES6 spread, add each item to an array.\n     *\n     * @param items The items to add\n     * @param arr The array to which you want to add the items\n     */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[HOST_NODE];\n        }\n        return lView;\n    }\n    function resolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    function resolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    function resolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY$1,\n            _: null,\n            setInput: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function setComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY$1,\n            declarations: def.declarations || EMPTY_ARRAY$1,\n            imports: def.imports || EMPTY_ARRAY$1,\n            exports: def.exports || EMPTY_ARRAY$1,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * The TView's hooks arrays are arranged in alternating pairs of directiveIndex and hookFunction,\n     * i.e.: `[directiveIndexA, hookFunctionA, directiveIndexB, hookFunctionB, ...]`. For `OnChanges`\n     * hooks, the `directiveIndex` will be *negative*, signaling {@link callHooks} that the\n     * `hookFunction` must be passed the the appropriate {@link SimpleChanges} object.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (onChanges) {\n            (tView.initHooks || (tView.initHooks = [])).push(directiveIndex, onChanges);\n            (tView.checkHooks || (tView.checkHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(directiveIndex, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView` such that\n     * they're added in alternating pairs of directiveIndex and hookFunction,\n     * i.e.: `[directiveIndexA, hookFunctionA, directiveIndexB, hookFunctionB, ...]`\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * Has the side effect of updating the RunInit flag in `lView` to be `0`, so that\n     * this isn't run a second time.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     */\n    function executeInitHooks(currentView, tView, checkNoChangesMode) {\n        if (!checkNoChangesMode) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, checkNoChangesMode, 0 /* OnInitHooksToBeRun */);\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param lView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode, initPhase) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase ?\n            firstPassHooks :\n            checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall, initPhase);\n        }\n        // The init phase state must be always checked here as it may have been recursively updated\n        if ((currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase &&\n            initPhase !== 3 /* InitPhaseCompleted */) {\n            currentView[FLAGS] &= 1023 /* IndexWithinInitPhaseReset */;\n            currentView[FLAGS] += 1 /* InitPhaseStateIncrementer */;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr, initPhase) {\n        var initHooksCount = 0;\n        for (var i = 0; i < arr.length; i += 2) {\n            var isInitHook = arr[i] < 0;\n            var directiveIndex = isInitHook ? -arr[i] : arr[i];\n            var directive = currentView[directiveIndex];\n            var hook = arr[i + 1];\n            if (isInitHook) {\n                initHooksCount++;\n                var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n                // The init phase state must be always checked here as it may have been recursively updated\n                if (indexWithintInitPhase < initHooksCount &&\n                    (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                    currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                    hook.call(directive);\n                }\n            }\n            else {\n                hook.call(directive);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        // If this is the first content query on a node, any existing LQueries needs to be cloned.\n        // In subsequent template passes, the cloning occurs before directive instantiation\n        // in `createDirectivesAndLocals`.\n        if (previousOrParentTNode && previousOrParentTNode !== lView[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = lView[QUERIES] = currentQueries.clone());\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        return currentQueries || (lView[QUERIES] = new QueryType(null, null, null));\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        else {\n            try {\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode, 2 /* AfterViewInitHooksToBeRun */);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        enterView(newView, null);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[HOST_NODE] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 3 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + renderStringify(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[HOST_NODE] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + renderStringify(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + renderStringify(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n                var tView = lData[TVIEW];\n                if (value && factory.isProvider && value.ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(index, value.ngOnDestroy);\n                }\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf$1(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf$1(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY$1;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        while (lView[PARENT] && lView[HOST] === null) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = lView[PARENT];\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     *\n     */\n    function getRootContext$1(target) {\n        var lViewData = Array.isArray(target) ? target : loadLContext(target).lView;\n        var rootLView = getRootView$1(lViewData);\n        return rootLView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + renderStringify(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrView any component or view\n     *\n     */\n    function getRootView$1(componentOrView) {\n        var lView;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lView');\n            lView = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lView = readPatchedLView(componentOrView);\n        }\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = readElementValue(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return sanitizeResourceUrl;\n        }\n        return sanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     */\n    function sanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'list-style' || prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n    function validateProperty(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAttribute(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (isDifferent(oldValue, value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var e_1, _a;\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), tNode, beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], tNode, beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], tNode, beforeNode);\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                if (Array.isArray(head)) {\n                    try {\n                        for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                            var nativeNode = head_1_1.value;\n                            executeNodeAction(action, renderer, renderParent, nativeNode, tNode, beforeNode);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    // Must store both the TNode and the view because this projection node could be nested\n                    // deeply inside embedded views, and we need to get back down to this particular nested\n                    // view.\n                    projectionNodeStack[++projectionNodeIndex] = tNode;\n                    projectionNodeStack[++projectionNodeIndex] = currentView;\n                    if (head) {\n                        currentView = componentView[PARENT];\n                        nextTNode = currentView[TVIEW].data[head.index];\n                    }\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, tNode, beforeNode) {\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, node, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveNode(renderer, node, isComponent(tNode));\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LView, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LView.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~128 /* Attached */;\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LView */\n    function getLViewChild(lView) {\n        var childIndex = lView[TVIEW].childIndex;\n        return childIndex === -1 ? null : lView[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        if (!(view[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = view[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n            }\n            destroyViewTree(view);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[HOST_NODE];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        readElementValue(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // DOM listener\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else if (typeof tCleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = lCleanup[tCleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode).parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (parent == null) {\n            var hostTNode = currentView[HOST_NODE];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            ngDevMode && assertNodeType(parent, 3 /* Element */);\n            if (parent.flags & 1 /* isComponent */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parent.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parent, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            var views = lContainer[VIEWS];\n            var index = views.indexOf(lView);\n            return getBeforeNodeForView(index, views, lContainer[NATIVE]);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var e_2, _a;\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                try {\n                    for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                        var nativeNode = childEl_1_1.value;\n                        nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(element, sanitizer, initialStyles, initialClasses) {\n        return [\n            0,\n            [null, -1, false, sanitizer || null],\n            initialStyles || [null],\n            initialClasses || [null],\n            [0, 0],\n            element || null,\n            null,\n            null,\n            null,\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[0 /* MasterFlagPosition */] |= 32 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LView or an LContainer\n        return Array.isArray(value) && typeof value[0 /* MasterFlagPosition */] === 'number' &&\n            value.length !== LCONTAINER_LENGTH;\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[8 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[8 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n    function hasStyling(attrs) {\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (attr == 1 /* Classes */ || attr == 2 /* Styles */)\n                return true;\n        }\n        return false;\n    }\n    function hasClassInput(tNode) {\n        return tNode.flags & 8 /* hasClassInput */ ? true : false;\n    }\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `interfaces/styles.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs) {\n        var context = createEmptyStylingContext();\n        var initialClasses = context[3 /* InitialClassValuesPosition */] =\n            [null];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */] =\n            [null];\n        // The attributes array has marker values (numbers) indicating what the subsequent\n        // values represent. When we encounter a number, we set the mode to that type of attribute.\n        var mode = -1;\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode === 2 /* Styles */) {\n                initialStyles.push(attr, attrs[++i]);\n            }\n            else if (mode === 1 /* Classes */) {\n                initialClasses.push(attr, true);\n            }\n            else if (mode === 3 /* SelectOnly */) {\n                break;\n            }\n        }\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param directive the directive instance with which static data is associated with.\n     */\n    function patchContextWithStaticAttrs(context, attrs, startingIndex, directive) {\n        // If the styling context has already been patched with the given directive's bindings,\n        // then there is no point in doing it again. The reason why this may happen (the directive\n        // styling being patched twice) is because the `stylingBinding` function is called each time\n        // an element is created (both within a template function and within directive host bindings).\n        var directives = context[1 /* DirectiveRegistryPosition */];\n        if (getDirectiveRegistryValuesIndexOf(directives, directive) == -1) {\n            // this is a new directive which we have not seen yet.\n            directives.push(directive, -1, false, null);\n            var initialClasses = null;\n            var initialStyles = null;\n            var mode = -1;\n            for (var i = startingIndex; i < attrs.length; i++) {\n                var attr = attrs[i];\n                if (typeof attr == 'number') {\n                    mode = attr;\n                }\n                else if (mode == 1 /* Classes */) {\n                    initialClasses = initialClasses || context[3 /* InitialClassValuesPosition */];\n                    patchInitialStylingValue(initialClasses, attr, true);\n                }\n                else if (mode == 2 /* Styles */) {\n                    initialStyles = initialStyles || context[2 /* InitialStyleValuesPosition */];\n                    patchInitialStylingValue(initialStyles, attr, attrs[++i]);\n                }\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is not\n     * present (or if it's value is falsy) then it will be inserted/updated in the list\n     * of initial styling values.\n     */\n    function patchInitialStylingValue(initialStyling, prop, value) {\n        // Even values are keys; Odd numbers are values; Search keys only\n        for (var i = 1 /* KeyValueStartPosition */; i < initialStyling.length;) {\n            var key = initialStyling[i];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                // If there is no previous style value (when `null`) or no previous class\n                // applied (when `false`) then we update the the newly given value.\n                if (existingValue == null || existingValue == false) {\n                    initialStyling[i + 1 /* ValueOffset */] = value;\n                }\n                return;\n            }\n            i = i + 2 /* Size */;\n        }\n        // We did not find existing key, add a new one.\n        initialStyling.push(prop, value);\n    }\n    /**\n     * Runs through the initial styling data present in the context and renders\n     * them via the renderer on the element.\n     */\n    function renderInitialStylesAndClasses(element, context, renderer) {\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialClasses, true);\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialStyles, false);\n    }\n    /**\n     * This is a helper function designed to render each entry present within the\n     * provided list of initialStylingValues.\n     */\n    function renderInitialStylingValues(element, renderer, initialStylingValues, isEntryClassBased) {\n        for (var i = 1 /* KeyValueStartPosition */; i < initialStylingValues.length; i += 2 /* Size */) {\n            var value = initialStylingValues[i + 1 /* ValueOffset */];\n            if (value) {\n                if (isEntryClassBased) {\n                    setClass(element, initialStylingValues[i + 0 /* PropOffset */], true, renderer, null);\n                }\n                else {\n                    setStyle(element, initialStylingValues[i + 0 /* PropOffset */], value, renderer, null);\n                }\n            }\n        }\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param directiveRef the directive that the new bindings will reference\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveRef, classBindingNames, styleBindingNames, styleSanitizer, onlyProcessSingleClasses) {\n        if (context[0 /* MasterFlagPosition */] & 32 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var directiveIndex = findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer);\n        if (directiveIndex === -1) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[4 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 9 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `elementStyleProp`\n        // and the `elementClassProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added incase a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = initialValuesToLookup.length + 1 /* ValueOffset */;\n                initialValuesToLookup.push(propName, entryIsClassBased ? false : null);\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 0 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer) {\n        var directiveRefs = context[1 /* DirectiveRegistryPosition */];\n        var nextOffsetInsertionIndex = context[4 /* SinglePropOffsetPositions */].length;\n        var directiveIndex;\n        var detectedIndex = getDirectiveRegistryValuesIndexOf(directiveRefs, directiveRef);\n        if (detectedIndex === -1) {\n            directiveIndex = directiveRefs.length / 4 /* Size */;\n            directiveRefs.push(directiveRef, nextOffsetInsertionIndex, false, styleSanitizer || null);\n        }\n        else {\n            var singlePropStartPosition = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            if (directiveRefs[singlePropStartPosition] >= 0) {\n                // the directive has already been patched into the context\n                return -1;\n            }\n            directiveIndex = detectedIndex / 4 /* Size */;\n            // because the directive already existed this means that it was set during elementHostAttrs or\n            // elementStart which means that the binding values were not here. Therefore, the values below\n            // need to be applied so that single class and style properties can be assigned later.\n            var singlePropPositionIndex = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            directiveRefs[singlePropPositionIndex] = nextOffsetInsertionIndex;\n            // the sanitizer is also apart of the binding process and will be used when bindings are\n            // applied.\n            var styleSanitizerIndex = detectedIndex + 3 /* StyleSanitizerOffset */;\n            directiveRefs[styleSanitizerIndex] = styleSanitizer || null;\n        }\n        return directiveIndex;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput, directiveRef) {\n        stylesInput = stylesInput || null;\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* CachedClassValueOrInitialClassString */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* CachedStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* CachedClassValueOrInitialClassString */] = classesValue;\n        context[7 /* CachedStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARRAY$1;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARRAY$1;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARRAY$1;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // SKIP IF INITIAL CHECK\n                        // If the former `value` is `null` then it means that an initial value\n                        // could be being rendered on screen. If that is the case then there is\n                        // no point in updating the value incase it matches. In other words if the\n                        // new value is the exact same as the previously rendered value (which\n                        // happens to be the initial value) then do nothing.\n                        if (value != null || hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            // same if statement logic as above (look for SKIP IF INITIAL CHECK).\n                            if (valueToCompare != null || hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(context, newProp, isClassBased, getStyleSanitizer(context, directiveIndex));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased, newProp, newFlag, newValue, directiveIndex, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context, directiveIndex);\n        while (propIndex < propLimit) {\n            var isClassBased = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(context, prop, isClassBased, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var ctxIndex_1 = context.length;\n                context.push(flag, prop, value, 0);\n                setPlayerBuilderIndex(context, ctxIndex_1, playerBuilderIndex, directiveIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n            setDirectiveDirty(context, directiveIndex, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, offset, addOrRemove, directiveRef) {\n        _updateSingleStylingValue(context, offset, addOrRemove, true, directiveRef);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     */\n    function updateStyleProp(context, offset, input, directiveRef) {\n        _updateSingleStylingValue(context, offset, input, false, directiveRef);\n    }\n    function _updateSingleStylingValue(context, offset, input, isClassBased, directiveRef) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            allowValueChange(currValue, value, currDirective, directiveIndex)) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setDirectiveDirty(context, directiveIndex, true);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param directiveRef an optional directive that will be used to target which\n     *    styling values are rendered. If left empty, only the bindings that are\n     *    registered on the template will be rendered.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveRef) {\n        var totalPlayersQueued = 0;\n        var targetDirectiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        if (isContextDirty(context) && isDirectiveDirty(context, targetDirectiveIndex)) {\n            var flushPlayerBuilders = context[0 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            var stillDirty = false;\n            for (var i = 9 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var flag = getPointers(context, i);\n                    var directiveIndex = getDirectiveIndexFromEntry(context, i);\n                    if (targetDirectiveIndex !== directiveIndex) {\n                        stillDirty = true;\n                        continue;\n                    }\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex) : null;\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    // Note that we ignore class-based deferals because otherwise a class can never\n                    // be removed in the case that it exists as true in the initial classes list...\n                    if (!isClassBased && !valueExists(valueToApply, isClassBased) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setDirectiveDirty(context, targetDirectiveIndex, false);\n            setContextDirty(context, stillDirty);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native.style[prop] = value;\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native.style[prop] = '';\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n            // DOMTokenList will throw if we try to add or remove an empty string.\n        }\n        else if (className !== '') {\n            if (add) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    native['classList'].add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    native['classList'].remove(className);\n            }\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 63 /* BitMask */) | (staticIndex << 6 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 6 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[3 /* InitialClassValuesPosition */] :\n            context[2 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 6 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 6 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 9 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[0 /* MasterFlagPosition */]);\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[8 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[8 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[8 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 0 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[0 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 0 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[0 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[0 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = 0;\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, directiveIndexA);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[2 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getDirectiveIndexFromRegistry(context, directive) {\n        var index = getDirectiveRegistryValuesIndexOf(context[1 /* DirectiveRegistryPosition */], directive);\n        ngDevMode &&\n            assertNotEqual(index, -1, \"The provided directive \" + directive + \" has not been allocated to the element's style/class bindings\");\n        return index > 0 ? index / 4 /* Size */ : 0;\n        // return index / DirectiveRegistryValuesIndex.Size;\n    }\n    function getDirectiveRegistryValuesIndexOf(directives, directive) {\n        for (var i = 0; i < directives.length; i += 4 /* Size */) {\n            if (directives[i] === directive) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 1 /* KeyValueStartPosition */; i < keyValues.length; i += 2 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[1 /* DirectiveRegistryPosition */][(directiveIndex * 4 /* Size */) +\n            1 /* SinglePropValuesIndexOffset */];\n        var offsets = context[4 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 4 /* Size */ +\n            3 /* StyleSanitizerOffset */] ||\n            dirs[3 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function isDirectiveDirty(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        return dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */];\n    }\n    function setDirectiveDirty(context, directiveIndex, dirtyYes) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */] = dirtyYes;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced incase an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // ... this decides what to do if and when there is a collision.\n        if (currentValue) {\n            if (newValue) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value incase it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * This function is only designed to be called for `[class]` bindings when\n     * `[ngClass]` (or something that uses `class` as an input) is present. Once\n     * directive host bindings fully work for `[class]` and `[style]` inputs\n     * then this can be deleted.\n     */\n    function getInitialClassNameValue(context) {\n        var className = context[6 /* CachedClassValueOrInitialClassString */];\n        if (className == null) {\n            className = '';\n            var initialClassValues = context[3 /* InitialClassValuesPosition */];\n            for (var i = 1 /* KeyValueStartPosition */; i < initialClassValues.length; i += 2 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            context[6 /* CachedClassValueOrInitialClassString */] = className;\n        }\n        return className;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be perfomed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode. In \"projection\" mode, we do not need to check types, so if tag name\n     * matches selector, we declare a match. In \"directive matching\" mode, we also check whether tNode\n     * is of expected type:\n     * - whether tNode has either Element or ElementContainer type\n     * - or if we want to match \"ng-template\" tag, we check for Container type\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        return currentSelector === tNode.tagName &&\n            (isProjectionMode ||\n                (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) ||\n                (tNode.type === 0 /* Container */ && currentSelector === NG_TEMPLATE_SELECTOR));\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(3 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.stylingTemplate) {\n                    if (!isCssClassMatching(readClassValueFromTNode(tNode), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    function readClassValueFromTNode(tNode) {\n        // comparing against CSS class values is complex because the compiler doesn't place them as\n        // regular attributes when an element is created. Instead, the classes (and styles for\n        // that matter) are placed in a special styling context that is used for resolving all\n        // class/style values across static attributes, [style]/[class] and [style.prop]/[class.name]\n        // bindings. Therefore if and when the styling context exists then the class values are to be\n        // extracted by the context helper code below...\n        return tNode.stylingTemplate ? getInitialClassNameValue(tNode.stylingTemplate) : '';\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 3 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null &&\n                    isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true)) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        // Resetting the bindingIndex of the current LView as the next steps may trigger change detection.\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!isCreationMode(lView)) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executeInitHooks(lView, tView, checkNoChangesMode);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode, 1 /* AfterContentInitHooksToBeRun */);\n            setHostBindings(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        instruction(2 /* Update */, readElementValue(viewData[currentDirectiveIndex]), currentElementIndex);\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            setCurrentQueryIndex(0);\n            for (var i = 0; i < tView.contentQueries.length; i++) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function createLView(parentLView, tView, context, flags, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var parent_1 = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n            // Parents cannot cross component boundaries because components will be used in multiple places,\n            // so it's only set if the view is the same.\n            var parentInSameView = parent_1 && parent_1 !== lView[HOST_NODE];\n            var tParentNode = parentInSameView ? parent_1 : null;\n            tNode = tView.data[adjustedIndex] = createTNode(tParentNode, type, adjustedIndex, name, attrs);\n        }\n        // Now link ourselves into the tree.\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[HOST_NODE] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            for (var i = 0; i < numSlotsToAlloc; i++) {\n                tView.blueprint.push(null);\n                tView.data.push(null);\n                view.push(null);\n            }\n            // We should only increment the expando start index if there aren't already directives\n            // and injectors saved in the \"expando\" section\n            if (!tView.expandoInstructions) {\n                tView.expandoStartIndex += numSlotsToAlloc;\n            }\n            else {\n                // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                // bindings know that they should skip x slots\n                tView.expandoInstructions.push(numSlotsToAlloc);\n            }\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 16 /* CheckAlways */);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        assignTViewNodeToLView(tView, null, -1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        var oldView;\n        if (viewToRender[FLAGS] & 512 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                // creation mode pass\n                if (templateFn) {\n                    namespaceHTML();\n                    templateFn(1 /* Create */, context);\n                }\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~4 /* CreationMode */;\n            }\n            // update mode pass\n            templateFn && templateFn(2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n        }\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] =\n                isContentQueryHost(previousOrParentTNode) ? currentQueries.parent : currentQueries;\n        }\n        registerPostOrderHooks(tView, previousOrParentTNode);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the first element\n            // is created. Then the styling context is locked and can only be instantiated for each\n            // successive element that is created.\n            if (tView.firstTemplatePass && !tNode.stylingTemplate && hasStyling(attrs)) {\n                tNode.stylingTemplate = initializeStaticContext(attrs);\n            }\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n        }\n        // There is no point in rendering styles when a class directive is present since\n        // it will take that over for us (this will be removed once #FW-882 is in).\n        if (tNode.stylingTemplate && (tNode.flags & 8 /* hasClassInput */) === 0) {\n            renderInitialStylesAndClasses(native, tNode.stylingTemplate, lView[RENDERER]);\n        }\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, findDirectiveMatches(tView, lView, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        else {\n            // During first template pass, queries are created or cloned when first requested\n            // using `getOrCreateCurrentQueries`. For subsequent template passes, we clone\n            // any current LQueries here up-front if the current node hosts a content query.\n            if (isContentQueryHost(getPreviousOrParentTNode()) && lView[QUERIES]) {\n                lView[QUERIES] = lView[QUERIES].clone();\n            }\n        }\n        instantiateAllDirectives(tView, lView, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, lView, previousOrParentTNode);\n        saveResolvedLocalsInData(lView, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice().fill(null, bindingStartIndex),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            viewQueryStartIndex: initialViewLength,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     *\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                /// attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n                    // Standard attributes\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    if (isAnimationProp(attrName)) {\n                        if (isProc) {\n                            renderer.setProperty(native, attrName, attrVal);\n                        }\n                    }\n                    else {\n                        isProc ?\n                            renderer\n                                .setAttribute(native, attrName, attrVal) :\n                            native.setAttribute(attrName, attrVal);\n                    }\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + renderStringify(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function listener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n     * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n     * in the component's renderer. Normally all host listeners are evaluated with the\n     * parent component's renderer, but, in the case of animation @triggers, they need\n     * to be evaluated with the sub component's renderer (because that's where the\n     * animation triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `listener`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function componentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : {};\n            var target = resolved.target || native;\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var useCaptureOrSubIdx = useCapture;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // The first argument of `listen` function in Procedural Renderer is:\n                // - either a target name (as a string) in case of global target (window, document, body)\n                // - or element reference (in all other cases)\n                listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                lCleanup.push(listenerFn, cleanupFn);\n                useCaptureOrSubIdx = lCleanupIndex + 1;\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                lCleanup.push(listenerFn);\n            }\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(readElementValue(_lView[tNode.index])).target; } :\n                tNode.index;\n            tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCaptureOrSubIdx);\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] =\n                isContentQueryHost(previousOrParentTNode) ? currentQueries.parent : currentQueries;\n        }\n        registerPostOrderHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        if (hasClassInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n        }\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     */\n    function elementAttribute(index, name, value, sanitizer, namespace) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && validateAttribute(name);\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element_1 = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name, namespace) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var tNode = getTNode(index, lView);\n                var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setAttribute(element_1, name, strValue, namespace);\n                }\n                else {\n                    namespace ? element_1.setAttributeNS(namespace, name, strValue) :\n                        element_1.setAttribute(name, strValue);\n                }\n            }\n        }\n    }\n    /**\n     * Update a property on an element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function elementProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function componentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n    }\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            if (ngDevMode) {\n                validateProperty(propName);\n                ngDevMode.rendererSetProperty++;\n            }\n            savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n    }\n    /**\n     * Stores debugging data for this property binding on first template pass.\n     * This enables features like DebugElement.properties.\n     */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            propertyMetadataStartIndex: -1,\n            propertyMetadataEndIndex: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: null,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputAliases mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    function setNgReflectProperties(lView, element, type, inputs, value) {\n        var _a;\n        for (var i = 0; i < inputs.length; i += 3) {\n            var renderer = lView[RENDERER];\n            var attrName = normalizeDebugBindingName(inputs[i + 2]);\n            var debugValue = normalizeDebugBindingValue(value);\n            if (type === 3 /* Element */) {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n            else if (value !== undefined) {\n                var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setValue(element, value_1);\n                }\n                else {\n                    element.textContent = value_1;\n                }\n            }\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNodeFlags node flags\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note for static values (no binding)\n     * see `elementStart` and `elementHostAttrs`.\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementClassProp` refers to the class name by index in this array.\n     *        (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementStyleProp` refers to the class name by index in this array.\n     *        (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        property values that are applied to the element (during rendering).\n     *        Note that the sanitizer instance itself is tied to the `directive` (if  provided).\n     * @param directive A directive instance the styling is associated with. If not provided\n     *        current view's controller instance is assumed.\n     *\n     * @publicApi\n     */\n    function elementStyling(classBindingNames, styleBindingNames, styleSanitizer, directive) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        updateContextWithBindings(tNode.stylingTemplate, directive || null, classBindingNames, styleBindingNames, styleSanitizer, hasClassInput(tNode));\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @publicApi\n     */\n    function elementHostAttrs(directive, attrs) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = initializeStaticContext(attrs);\n        }\n        var lView = getLView();\n        var native = getNativeByTNode(tNode, lView);\n        var i = setUpAttributes(native, attrs);\n        patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, i, directive);\n    }\n    /**\n     * Apply styling binding to the element.\n     *\n     * This instruction is meant to be run after `elementStyle` and/or `elementStyleProp`.\n     * if any styling bindings have changed then the changes are flushed to the element.\n     *\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStylingApply(index, directive) {\n        var lView = getLView();\n        var isFirstRender = (lView[FLAGS] & 8 /* FirstLViewPass */) !== 0;\n        var totalPlayersQueued = renderStyling(getStylingContext(index + HEADER_OFFSET, lView), lView[RENDERER], lView, isFirstRender, null, null, directive);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Update a style bindings value on an element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling element is updated as part of `elementStylingApply`.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementStlyingBindings`.\n     * @param value New value to write (null to remove). Note that if a directive also\n     *        attempts to write to the same binding value then it will only be able to\n     *        do so if the template binding value is `null` (or doesn't exist at all).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, directive) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd, directive);\n    }\n    /**\n     * Add or remove a class via a class binding on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case and, therefore,\n     * the class itself must already be applied using `elementStyling` within\n     * the creation block.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementStlyingBindings` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementClassProp(index, classIndex, value, directive) {\n        var onOrOffClassValue = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, onOrOffClassValue, directive);\n    }\n    /**\n     * Update style and/or class bindings using object literal.\n     *\n     * This instruction is meant apply styling via the `[style]=\"exp\"` and `[class]=\"exp\"` template\n     * bindings. When styles are applied to the Element they will then be placed with respect to\n     * any styles set with `elementStyleProp`. If any styles are set to `null` then they will be\n     * removed from the element.\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n     *\n     * @publicApi\n     */\n    function elementStylingMap(index, classes, styles, directive) {\n        if (directive != undefined)\n            return hackImplementationOfElementStylingMap(index, classes, styles, directive); // supported in next PR\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = getInitialClassNameValue(stylingContext);\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n        }\n        else {\n            updateStylingMap(stylingContext, classes, styles);\n        }\n    }\n    /* START OF HACK BLOCK */\n    function hackImplementationOfElementStylingMap(index, classes, styles, directive) {\n        throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n    }\n    /* END OF HACK BLOCK */\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, renderStringify(value)) :\n                element_2.textContent = renderStringify(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = viewData[i];\n            if (def.hostBindings) {\n                var previousExpandoLength = expando.length;\n                setCurrentDirectiveDef(def);\n                def.hostBindings(1 /* Create */, directive, tNode.index - HEADER_OFFSET);\n                setCurrentDirectiveDef(null);\n                // `hostBindings` function may or may not contain `allocHostVars` call\n                // (e.g. it may not if it only contains host listeners), so we need to check whether\n                // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n                // expando block, to make sure we execute it for DI cycle\n                if (previousExpandoLength === expando.length && firstTemplatePass) {\n                    expando.push(def.hostBindings);\n                }\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        var tView = getLView()[TVIEW];\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n    */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), false, null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, previousOrParentTNode.index, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = lView[previousOrParentTNode.index];\n        lView[previousOrParentTNode.index] = componentView;\n        if (lView[TVIEW].firstTemplatePass) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            // If we hit Select-Only, Classes or Styles, we're done anyway. None of those are valid inputs.\n            if (attrName === 3 /* SelectOnly */ || attrName === 1 /* Classes */ ||\n                attrName === 2 /* Styles */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        addTContainerToQueries(lView, tContainerNode);\n        attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n        registerPostOrderHooks(tView, tContainerNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        var lView = getLView();\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        addTContainerToQueries(lView, tNode);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(lView[adjustedIndex], lView, comment);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, index + HEADER_OFFSET, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Reporting a TContainer node queries is a 2-step process as we need to:\n     * - check if the container node itself is matching (query might match a <ng-template> node);\n     * - prepare room for nodes from views that might be created based on the TemplateRef linked to this\n     * container.\n     *\n     * Those 2 operations need to happen in the specific order (match the container node itself, then\n     * prepare space for nodes from views).\n     */\n    function addTContainerToQueries(lView, tContainerNode) {\n        var queries = lView[QUERIES];\n        if (queries) {\n            lView[QUERIES] = queries.addNode(tContainerNode);\n            var lContainer = lView[tContainerNode.index];\n            lContainer[QUERIES] = queries.container();\n        }\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executeInitHooks(lView, tView, getCheckNoChangesMode());\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = getLViewChild(lView); current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[HOST_NODE];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        refreshDescendantViews(lView); // update mode pass\n        leaveView(lView[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                }\n                componentChild.next = null;\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(lView);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        if (Array.isArray(nodeToProject)) {\n            appendChild(nodeToProject, tProjectionNode, lView);\n        }\n        else {\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    // This node is re-projected, so we must go up the tree to get its projected nodes.\n                    var currentComponentView = findComponentView(projectedView);\n                    var currentComponentHost = currentComponentView[HOST_NODE];\n                    var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                    if (firstProjectedNode) {\n                        if (Array.isArray(firstProjectedNode)) {\n                            appendChild(firstProjectedNode, tProjectionNode, lView);\n                        }\n                        else {\n                            projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                            projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                            nodeToProject = firstProjectedNode;\n                            projectedView = currentComponentView[PARENT];\n                            continue;\n                        }\n                    }\n                }\n                else {\n                    // This flag must be set now or we won't know that this node is projected\n                    // if the nodes are inserted into a container later.\n                    nodeToProject.flags |= 2 /* isProjected */;\n                    appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                }\n                // If we are finished with a list of re-projected nodes, we need to get\n                // back to the root projection node that was re-projected.\n                if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                    projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                    nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n                }\n                nodeToProject = nodeToProject.next;\n            }\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param state The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, adjustedHostIndex, state) {\n        var tView = lView[TVIEW];\n        if (lView[TAIL]) {\n            lView[TAIL][NEXT] = state;\n        }\n        else if (tView.firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        lView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            try {\n                var result = listenerFn(e);\n                if (wrapWithPreventDefault && result === false) {\n                    e.preventDefault();\n                    // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                    e.returnValue = false;\n                }\n                return result;\n            }\n            catch (error) {\n                handleError(lView, error);\n            }\n        };\n    }\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            lView = lView[PARENT];\n        }\n        // Detached views do not have a PARENT and also aren't root views\n        if (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n        }\n        return lView;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            if (isCreationMode(view)) {\n                checkView(view, context); // creation mode pass\n            }\n            checkView(view, context); // update mode pass\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var creationMode = isCreationMode(hostView);\n        try {\n            namespaceHTML();\n            creationMode && executeViewQueryFn(hostView, hostTView, component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            !creationMode && executeViewQueryFn(hostView, hostTView, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function executeViewQueryFn(lView, tView, component) {\n        var viewQuery = tView.viewQuery;\n        if (viewQuery) {\n            setCurrentQueryIndex(tView.viewQueryStartIndex);\n            viewQuery(getRenderFlags(lView), component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     */\n    function allocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            lView[TVIEW].data[bindingIndex] = i0;\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n            tData[bindingIndex + 6] = i6;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(getLView(), index);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return getLView();\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lView);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            addToViewTree(rootView, HEADER_OFFSET, componentView);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~4 /* CreationMode */;\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rendererFactory, renderer, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var rootTNode = getPreviousOrParentTNode();\n            setCurrentDirectiveDef(componentDef);\n            componentDef.hostBindings(1 /* Create */, component, rootTNode.index - HEADER_OFFSET);\n            setCurrentDirectiveDef(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            superHostBindings_1(rf, ctx, elementIndex);\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (directiveIndex) {\n                            superContentQueries_1(directiveIndex);\n                            prevContentQueries_1(directiveIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex) {\n                            superContentQueriesRefresh_1(directiveIndex);\n                            prevContentQueriesRefresh_1(directiveIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY$1) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function () {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                simpleChangesStore.previous = current;\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            if (source === void 0) { source = null; }\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (def instanceof Array ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$2;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Cannot instantiate cyclic dependency! \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            else if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            else if (token instanceof Function) {\n                var paramLength = token.length;\n                if (paramLength > 0) {\n                    var args = new Array(paramLength).fill('?');\n                    throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n                }\n                return function () { return new token(); };\n            }\n            throw new Error('unreachable');\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    var ngModuleDetail = '';\n                    if (ngModuleType && providers) {\n                        var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n                        ngModuleDetail =\n                            \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n                    }\n                    throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE$2 in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, true, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, true, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[HOST_NODE];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._lView[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            result.push(getNativeByTNode(tNodeChild, lView));\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _hostLContainer, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._hostLContainer = _hostLContainer;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._hostLContainer[QUERIES], this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getLView()[RENDERER], hostContainer, hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], view[CONTAINER_INDEX]) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, true);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('8.0.0-beta.3+15.sha-22d3226');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver$$1(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory$$1(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            // The component definition does not include the wildcard ('*') selector in its list.\n            // It is implicitly expected as the first item in the projectable nodes array.\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? __spread(['*'], componentDef.ngContentSelectors) : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, HEADER_OFFSET, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            !this.hostView.destroyed && this.hostView.destroy();\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[HOST_NODE] ?\n            parentTNode.index - HEADER_OFFSET :\n            index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text$$1 = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text$$1.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text$$1, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text$$1, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        allocExpando(viewData, i18nVarsCount);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[HOST_NODE]) {\n            tNode.parent = parentTNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                if (!matches_1[content]) {\n                    var placeholders_1 = [];\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders_1.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders_1;\n                }\n                if (!matches_1[content].length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var placeholders = matches_1[content];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n            // verify that we injected all values\n            var hasUnmatchedValues = Object.keys(matches_1).some(function (key) { return !!matches_1[key].length; });\n            if (hasUnmatchedValues) {\n                throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches_1));\n            }\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // The last placeholder that was added before `i18nEnd`\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var visitedPlaceholders = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Remove deleted placeholders\n        // The last placeholder that was added before `i18nEnd` is `previousOrParentTNode`\n        for (var i = rootIndex + 1; i <= previousOrParentTNode.index - HEADER_OFFSET; i++) {\n            if (visitedPlaceholders.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedPlaceholders = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode = createNodeAtIndex(textNodeIndex, 3 /* Element */, textRNode, null, null);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[HOST_NODE];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        destinationTNode.next = null;\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedPlaceholders.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode =\n                            createNodeAtIndex(commentNodeIndex, 5 /* IcuContainer */, commentRNode, null, null);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue, null);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedPlaceholders;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    var tIcuIndex = updateOpCodes[++j];\n                                    var tIcu = icus[tIcuIndex];\n                                    var icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        removedPhTNode.detached = true;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element$$1 = currentNode;\n                        var tagName = element$$1.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element$$1.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.hasOwnProperty('decorators') && clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$1(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$1(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$1(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            query.containerValues.splice(index, 0, query.values);\n            // mark a query as dirty only when inserted view had matching modes\n            if (query.values.length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function assertViewQueryhasPointerToDeclarationContainer(query) {\n        assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queryList._valuesTree = [];\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(getLView(), queryList, queryList.destroy);\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree || []);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function viewQuery(\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    predicate, descend, read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n        }\n        var index = getCurrentQueryIndex();\n        var viewQuery = query(predicate, descend, read);\n        store(index - HEADER_OFFSET, viewQuery);\n        setCurrentQueryIndex(index + 1);\n        return viewQuery;\n    }\n    /**\n    * Loads current View Query and moves the pointer/index to the next View Query in LView.\n    */\n    function loadViewQuery() {\n        var index = getCurrentQueryIndex();\n        setCurrentQueryIndex(index + 1);\n        return load(index - HEADER_OFFSET);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function contentQuery(directiveIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var contentQuery = query(predicate, descend, read);\n        (lView[CONTENT_QUERIES] || (lView[CONTENT_QUERIES] = [])).push(contentQuery);\n        if (tView.firstTemplatePass) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 1] : -1;\n            if (directiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(directiveIndex);\n            }\n        }\n        return contentQuery;\n    }\n    function loadContentQuery() {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        var index = getCurrentQueryIndex();\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], index);\n        setCurrentQueryIndex(index + 1);\n        return lView[CONTENT_QUERIES][index];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf$1,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵallocHostVars': allocHostVars,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵcomponentHostSyntheticProperty': componentHostSyntheticProperty,\n        'ɵcomponentHostSyntheticListener': componentHostSyntheticListener,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵviewQuery': viewQuery,\n        'ɵloadViewQuery': loadViewQuery,\n        'ɵcontentQuery': contentQuery,\n        'ɵloadContentQuery': loadContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementHostAttrs': elementHostAttrs,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵresolveWindow': resolveWindow,\n        'ɵresolveDocument': resolveDocument,\n        'ɵresolveBody': resolveBody,\n        'ɵsetComponentScope': setComponentScope,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl,\n        'ɵsanitizeUrlOrResourceUrl': sanitizeUrlOrResourceUrl\n    };\n\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing, ngModuleType);\n        modules.set(id, ngModuleType);\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = modules.get(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$2(ngModule.bootstrap || EMPTY_ARRAY$4, resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten$2(ngModule.imports || EMPTY_ARRAY$4, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten$2(ngModule.exports || EMPTY_ARRAY$4, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        if (ngModule.id) {\n            registerNgModuleType(ngModule.id, moduleType);\n        }\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        ngModuleDef.declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(ngModuleDef.declarations.map(resolveForwardRef), flatten$2(ngModuleDef.imports.map(computeCombinedExports), resolveForwardRef));\n        ngModuleDef.exports.forEach(verifyExportsAreDeclaredOrReExported);\n        ngModuleDef.declarations.forEach(verifyDeclarationIsUnique);\n        ngModuleDef.declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten$2(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyCorrectBootstrapType);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + renderStringify(type) + \"' declared by the module '\" + renderStringify(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + renderStringify(type) + \" from \" + renderStringify(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(renderStringify).sort();\n                errors.push(\"Type \" + renderStringify(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + renderStringify(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + renderStringify(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + renderStringify(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(renderStringify(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited\n     * by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten$2(ngModuleDef.exports.map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$2(values, mapFn) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$2(value, mapFn)));\n            }\n            else {\n                out.push(mapFn ? mapFn(value) : value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + renderStringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + renderStringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var sourceMapUrl = \"ng://\" + renderStringify(type) + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', renderStringify(type), sourceMapUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY$1, animations: metadata.animations, viewQueries: extractQueriesMetadata(type, getReflect().propMetadata(type), isViewQuery), directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, sourceMapUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_1 + \"/ngDirectiveDef.js\";\n                    var compiler = getCompilerFacade();\n                    var facade = directiveMetadata(type, directive);\n                    facade.typeSourceSpan =\n                        compiler.createParseSourceSpan('Directive', renderStringify(type), sourceMapUrl);\n                    ngDirectiveDef = compiler.compileDirective(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY$1,\n            outputs: metadata.outputs || EMPTY_ARRAY$1,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n        };\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + renderStringify(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + renderStringify(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = defineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(inject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], function () { return [{\n            type: undefined,\n            decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }]\n        }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = defineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n    /*@__PURE__*/ setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = moduleDef.declarations.reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = defineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /*@__PURE__*/ setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null);\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = Promise.resolve(0);\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = defineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(inject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /*@__PURE__*/ setClassMetadata(Testability, [{\n            type: Injectable\n        }], function () { return [{\n            type: NgZone\n        }]; }, null);\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = defineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], function () { return []; }, null);\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var isBoundToModule = isBoundToModule__POST_R3__;\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = defineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(inject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], function () { return [{\n            type: Injector\n        }]; }, null);\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = defineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(inject(NgZone), inject(Console), inject(Injector), inject(ErrorHandler), inject(ComponentFactoryResolver), inject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], function () { return [{\n            type: NgZone\n        }, {\n            type: Console\n        }, {\n            type: Injector\n        }, {\n            type: ErrorHandler\n        }, {\n            type: ComponentFactoryResolver\n        }, {\n            type: ApplicationInitStatus\n        }]; }, null);\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = defineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(inject(Compiler), inject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], function () { return [{\n            type: Compiler\n        }, {\n            type: SystemJsNgModuleLoaderConfig,\n            decorators: [{\n                    type: Optional\n                }]\n        }]; }, null);\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement && getComponent(nativeElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                return __assign({}, properties, hostProperties);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(lNode, i)) {\n                                var className = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(lNode, i)) {\n                                var styleName = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n        if (parentNode instanceof DebugElement__POST_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__POST_R3__) {\n                    if (elementsOnly ? node.nativeElement : true) {\n                        _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = '';\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value += renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings)\n                properties[propertyName] = metadataParts[1] + value + metadataParts[2];\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__POST_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = defineNgModule({ type: ApplicationModule });\n        ApplicationModule.ngInjectorDef = defineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(inject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS, imports: [] });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], function () { return [{\n            type: ApplicationRef\n        }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ɵinject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf$1;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵsetComponentScope = setComponentScope;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵviewQuery = viewQuery;\n    exports.ɵloadViewQuery = loadViewQuery;\n    exports.ɵcontentQuery = contentQuery;\n    exports.ɵloadContentQuery = loadContentQuery;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵcomponentHostSyntheticProperty = componentHostSyntheticProperty;\n    exports.ɵcomponentHostSyntheticListener = componentHostSyntheticListener;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵallocHostVars = allocHostVars;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementHostAttrs = elementHostAttrs;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵresolveWindow = resolveWindow;\n    exports.ɵresolveDocument = resolveDocument;\n    exports.ɵresolveBody = resolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵdefaultStyleSanitizer = defaultStyleSanitizer;\n    exports.ɵsanitizeScript = sanitizeScript;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵsanitizeUrlOrResourceUrl = sanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}