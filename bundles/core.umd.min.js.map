{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","compiler","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","EMPTY$1","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","pipeTypes","pipes","directiveTypes","directives","declaredInputs","encapsulation","Emulated","styles","animations","def","diPublic","consts","vars","hostVars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","invertObject","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","extractDirectiveDef","pipeDefs","extractPipeDef","selectors","viewQuery","features","viewProviders","id","feature","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","HEADER_OFFSET","TVIEW","PARENT","NEXT","QUERIES","FLAGS","HOST_NODE","BINDING_INDEX","DIRECTIVES","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","queueInitHooks","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","arr","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","stringify$1","loadInternal","readElementValue","MONKEY_PATCH_KEY_NAME","getContext","mpValue","readPatchedData","lViewData","lNodeIndex","directiveIndices","isComponentInstance","findViaComponent","isDirectiveInstance","instance","findViaDirective","directiveInstance","directivesAcrossView","directiveIndex","tNode","firstChild","lNode","getLNodeFromViewData","directiveIndexStart","getDirectiveStartIndex","directiveIndexEnd","getDirectiveEndIndex","traverseNextElement","discoverDirectiveIndices","discoverDirectives","directiveInstances","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","getLElementFromComponent","componentInstance","readPatchedLViewData","child","componentIndices","components","elementComponentIndex","lElementIndex","startIndex","count","throwMultipleComponentError","tagName","RendererStyleFlags3","ACTIVE_INDEX","VIEWS","RENDER_PARENT","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getChildLNode","node","view","getParentLNode","containerHostIndex","dynamicLContainerNode","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParentNode","beforeNode","rootTNode","projectionNodeIndex","nextTNode","elementNode","executeNodeAction","lContainerNode","childContainerData","componentHost","findComponentHost","head","projection","viewRootLNode","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","container","insertMode","insertView","viewNode","views","lView","splice","detachView","removeIndex","viewToDetach","detached","removeView","destroyLView","getLViewChild","viewData","childIndex","hostNode","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","destroy","canInsertNativeChildOfElement","canInsertNativeChildOfView","grandParentContainer","canInsertNativeNode","grandParent","nativeInsertBefore","appendChild","renderParent","getRenderParent","appendProjectedNode","currentParent","parentView","lContainer","ngContainerChild","parentView_1","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","isClassBased_5","valueExists","setDirty","setContextDirty","setStyle","prop","sanitizer","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","setFlag","getProp","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","rendererFactory","elementDepthCount","previousOrParentTNode","isParent","currentQueries","_CLEAN_PROMISE","HEADER_FILLER","fill","CIRCULAR$1","getRenderer","getRendererFactory","getCurrentSanitizer","getCurrentView","restoreView","viewToRestore","contextViewData","getPreviousOrParentNode","_getViewData","getCleanup","getTViewCleanup","checkNoChangesMode","bindingRootIndex","getBindingRoot","enterView","newView","hostTNode","oldView","bindingStartIndex","leaveView","creationOnly","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","setHostBindings","refreshChildComponents","componentRefresh","bindings","hostBindingStartIndex","defs","dirIndex","executeInitAndContentHooks","createLViewData","blueprint","createLNodeObject","nodeInjector","createLNode","parentInSameView","tParent","isState","createTNode","tData","dynamicContainerNode","parentLNode","adjustBlueprintForNewNode","resetComponentState","viewToRender","rf","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","nextContext","level","walkUpViews","nestingLevel","renderComponentOrTemplate","hostView","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","element","localRefs","elementStart","elementEnd","elementCreate","setUpAttributes","createDirectivesAndLocals","overriddenRenderer","rendererToUse","createElement","createElementNS","nativeNodeLocalRefExtractor","localRefExtractor","cacheMatchingDirectivesForNode","exportsMap","","matches","currentMatches","findDirectiveMatches","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","instantiateDirectivesDirectly","isContentQueryHost","clone","tDirectives","directiveCreate","saveResolvedLocalsInData","localIndex","registry","directiveRegistry","throwCyclicDependencyError","queueComponentIndexForCheck","queueHostBindingForCheck","NO_CHANGE","initChangeDetectorIfExisting","changeDetectorRef","_setComponentContext","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","tag","rNode","listener","eventName","listenerFn","useCapture","wrappedListener","wrapListenerWithDirtyLogic","markViewDirty","listen","storeCleanupFn","wrapListenerWithDirtyAndDefault","wrapListenerIn_markViewDirty","preventDefault","returnValue","addEventListener","cleanupInstances","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","elementAttribute","element_1","loadElement","removeAttribute","strValue","elementProperty","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","tViews","initialInputs","stylingTemplate","tNodeFlags","direction","propStore","isInput","directiveDef","propertyAliasMap","internalName","elementClassProp","stylingIndex","updateClassProp","addOrRemove","getStylingContext","elementStyling","classDeclarations","styleDeclarations","styleSanitizer","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","initialStylingValues","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","elementStylingApply","stylingContext","load","allocStylingContext","lElement","templateStyleContext","renderStyling","styleStore","classStore","isContextDirty","multiStartIndex","isClassBased_6","valueToApply","elementStyleProp","styleIndex","suffix","valueToAdd","elementStylingMap","classes","updateStylingMap","applyAllClasses","ignoreAllClassUpdates","cachedClassString","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","isClassBased_3","isClassBased_4","textNode","textBinding","existingNode","textContent","directive","baseDirectiveCreate","addComponentLogic","componentView","addToViewTree","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","createLContainer","isForViewContainerRef","containerInternal","previousNode","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","containerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","nodeIndex","selectorIndex","nodeToProject","projectedView","currentComponentHost","firstProjectedNode","grandparent","adjustedHostIndex","scheduleTick","rootContext","res_1","clean","scheduler","rootComponent","detectChanges","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","bindingUpdated","interpolationV","different","content","interpolation1","prefix","v0","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","bindingUpdated3","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","loadDirective","loadQueryList","queryListIdx","loadElementInternal","getBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","oldValue","msg","updateBinding","exp1","exp2","exp3","exp4","getTView","registerContentQuery","queryList","savedContentQueriesLength","currentDirectiveIndex","tViewContentQueries","CLEAN_PROMISE","createRootContext","isComponentDef","definition","InheritDefinitionFeature","superType","getSuperType","getPrototypeOf","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","elementIndex","prevViewQuery_1","superViewQuery_1","ctx","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","setter_1","simpleChanges","writable","currentChange","configurable","onChangesWrapper","delegateHook","ngOnChanges","RendererStyleFlags2","ChangeDetectorRef","ElementRef","nativeElement","NgModuleRef","NgModuleFactory","TemplateRef","ViewContainerRef","RenderComponentType","slotCount","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngModule","_this","ngContentSelectors","projectableNodes","rootSelectorOrNode","ViewRef","_view","_appRef","_viewContainerRef","_lViewNode","enumerable","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","checkNoChangesInRootView","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","componentDef","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","setTimeout","WRAP_RENDERER_FACTORY2","ComponentFactory$$1","isInternalRootView","wrapper","componentTag","LifecycleHooksFeature","_getComponentHostLElementNode","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","destroyCbs","location","NG_ELEMENT_ID","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","parentInjector","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","templateRef","viewContainerRef","elementRef","diPublicInInjector","di","bloomAdd","bloomBit","mask","b6","b5","directiveInject","getOrCreateInjectable","injectElementRef","getOrCreateElementRef","injectTemplateRef","getOrCreateTemplateRef","injectViewContainerRef","getOrCreateContainerRef","injectChangeDetectorRef","getOrCreateChangeDetectorRef","injectRenderer2","getOrCreateRenderer2","injectAttribute","attrNameToInject","getPreviousOrParentTNode","currentNode","isComponent","getOrCreateHostChangeDetector","getClosestComponentAncestor","hostInjector","bloomHash","bloomHashBit","bloomFindPossibleInjector","nodeFlags","searchMatchesQueuedForCreation","sameHostView","formerInjector","startInjector","b7","ReadFromInjectorFn","read","ElementRef$1","ElementRef$$1","vcRefHost","hostParent","ViewContainerRef$1","NodeInjector","_lInjector","ViewContainerRef$$1","_lContainerNode","_hostNode","_viewRefs","parentLInjector","clear","createEmbeddedView","adjustedIdx","_adjustIndex","viewRef","createComponent","componentFactory","ngModuleRef","contextInjector","insert","destroyed","lViewNode","move","newIndex","shift","TemplateRef$1","getFactoryOf","typeAny","getInheritedFactory","TemplateRef$$1","_declarationParentView","_tView","_renderer","_queries","createEmbeddedViewNode","declarationView","queries","templateRefExtractor","PublicFeature","i18nTagRegex","appendI18nNode","APP_ROOT","NOT_YET","CIRCULAR$2","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","imported","delete","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","existing","multiRecord_1","hasOnDestroy","input","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","_bootstrapComponents","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","isPure","transform","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","LQueries_","shallow","deep","track","predicate","descend","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","result","containerValues","list","viewValuesIdx","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","previous","createPredicate","_valuesTree","QueryList","QueryList_","changes","_values","filter","find","reduce","init","some","toArray","reset","flatten","item","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ÉµdefineBase","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","ÉµdefinePipe","ÉµdirectiveInject","ÉµgetFactoryOf","ÉµgetInheritedFactory","ÉµinjectAttribute","ÉµinjectChangeDetectorRef","ÉµinjectElementRef","ÉµinjectTemplateRef","ÉµinjectViewContainerRef","ÉµtemplateRefExtractor","ÉµinjectRenderer2","ÉµNgOnChangesFeature","ÉµPublicFeature","ÉµInheritDefinitionFeature","ÉµelementAttribute","Éµbind","Éµcontainer","ÉµnextContext","ÉµcontainerRefreshStart","ÉµcontainerRefreshEnd","ÉµloadDirective","ÉµloadQueryList","ÉµnamespaceHTML","ÉµnamespaceMathML","ÉµnamespaceSVG","ÉµelementStart","ÉµelementEnd","Éµelement","ÉµEC","elementContainerStart","ÉµeC","elementContainerEnd","ÉµpureFunction0","ÉµpureFunction1","ÉµpureFunction2","ÉµpureFunction3","ÉµpureFunction4","ÉµpureFunction5","ÉµpureFunction6","ÉµpureFunction7","ÉµpureFunction8","ÉµpureFunctionV","ÉµgetCurrentView","ÉµrestoreView","Éµinterpolation1","Éµinterpolation2","Éµinterpolation3","Éµinterpolation4","Éµinterpolation5","Éµinterpolation6","Éµinterpolation7","Éµinterpolation8","ÉµinterpolationV","ÉµelementClassProp","Éµlistener","Éµload","Éµprojection","ÉµelementProperty","ÉµpipeBind1","ÉµpipeBind2","ÉµpipeBind3","ÉµpipeBind4","ÉµpipeBindV","ÉµprojectionDef","Éµpipe","Éµquery","ÉµqueryRefresh","ÉµregisterContentQuery","Éµreference","ÉµelementStyling","ÉµelementStylingMap","ÉµelementStylingProp","ÉµelementStylingApply","Éµtemplate","Éµtext","ÉµtextBinding","ÉµembeddedViewStart","ÉµembeddedViewEnd","ÉµsanitizeHtml","ÉµsanitizeStyle","ÉµdefaultStyleSanitizer","ÉµsanitizeResourceUrl","ÉµsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ÉµsanitizeUrl","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","dep","reflectDependency","LiteralExpr","host","optional","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","WrappedNodeExpr","param","EMPTY_ARRAY$2","compileNgModuleDefs","flatten$1","wrapReference","expandModuleWithProviders","emitInline","compileNgModule","jitExpression","expression","compileInjector","statements","patchComponentDefWithScope","transitiveScopes","from","compilation","dir","transitiveScopesFor","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","constantPool","ConstantPool","parseTemplate","preserveWhitespaces","errors","compileComponentFromMetadata","directiveMetadata","viewQueries","wrapDirectivesInClosure","makeBindingParser","preStatements","hasSelectorScope","ngSelectorScope","compileDirective","sourceMapUrl","compileDirectiveFromMetadata","extractHostBindings","parseHostBindings","listeners","properties","_loop_2","field","ann","isHostBinding","isHostListener","hostPropertyName","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","inputsFromType","outputsFromType","isOutput","bindingPropertyName","typeArgumentCount","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","piece","isUseClassProvider","USE_VALUE$1","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","compilePipe","compilePipeFromMetadata","Version","R3_COMPILE_COMPONENT","R3_COMPILE_DIRECTIVE","R3_COMPILE_INJECTABLE","compileInjectable","srcMeta","hasAProvider","ctorDeps","userDeps","computeProvidedIn","R3_COMPILE_NGMODULE","setScopeOnDeclaredComponents","declaration","R3_COMPILE_PIPE","Directive","Component","Default","Pipe","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","Output","HostBinding","HostListener","NgModule","VERSION","full","major","minor","patch","Injectable","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_NGCC__","createCompiler","compileNgModuleFactory","ApplicationRef","f","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","parentEl","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","embeddedView","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugContext","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","Render3DebugRendererFactory2","element$$1","Render3DebugContext","matchedDirectives","R3_COMPILE_COMPONENT__POST_NGCC__","R3_COMPILE_DIRECTIVE__POST_NGCC__","R3_COMPILE_INJECTABLE__POST_NGCC__","R3_COMPILE_NGMODULE__POST_NGCC__","R3_COMPILE_PIPE__POST_NGCC__","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ÉµNoopNgZone","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","ÉµgetInjectableDef","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdetectChanges","ÉµrenderComponent","renderComponent","hostFeatures","ÉµRender3ComponentFactory","ÉµRender3ComponentRef","ÉµRender3NgModuleRef","ÉµmarkDirty","markDirty","ÉµNgModuleFactory","ÉµNO_CHANGE","pipeBind2","Éµstore","ÉµwhenRendered","whenRendered","getRootContext","getRootView","Éµi18nApply","i18nApply","instructions","localParentNode","localPreviousNode","instruction","textRNode","removedNode","Éµi18nExpMapping","i18nExpMapping","translation","placeholders","staticText","Éµi18nInterpolation1","i18nInterpolation1","Éµi18nInterpolation2","i18nInterpolation2","Éµi18nInterpolation3","i18nInterpolation3","idx","Éµi18nInterpolation4","i18nInterpolation4","b1","Éµi18nInterpolation5","i18nInterpolation5","Éµi18nInterpolation6","i18nInterpolation6","Éµi18nInterpolation7","i18nInterpolation7","b2","Éµi18nInterpolation8","i18nInterpolation8","Éµi18nInterpolationV","i18nInterpolationV","Éµi18nMapping","i18nMapping","elements","expressions","templateRoots","lastChildIndex","translationParts","generateMappingInstructions","tmplIndex","partIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","currentElements","currentExpressions","phIndex","templateRootIndex","newTmplIndex","tmplElements","phKeys","ph","tmplExpressions","ÉµWRAP_RENDERER_FACTORY2","ÉµRender3DebugRendererFactory2","ÉµcompileNgModuleDefs","ÉµpatchComponentDefWithScope","ÉµcompileComponent","ÉµcompileDirective","ÉµcompilePipe","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµgetContext","ÉµR3_COMPILE_COMPONENT__POST_NGCC__","ÉµR3_COMPILE_DIRECTIVE__POST_NGCC__","ÉµR3_COMPILE_INJECTABLE__POST_NGCC__","ÉµR3_COMPILE_NGMODULE__POST_NGCC__","ÉµR3_COMPILE_PIPE__POST_NGCC__","ÉµivyEnable__POST_NGCC__","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.0.0-beta.5+32.sha-47f4412\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('@angular/compiler'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', '@angular/compiler', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.ng.compiler,global.rxjs.operators));\n}(this, (function (exports,rxjs,compiler,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @experimental\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @experimental\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * #### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * #### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         *\n         * ### Example\n         * {@example core/ts/metadata/encapsulation.ts region='longform'}\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @experimental\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     *\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            var injectableDef = getInjectableDef(token);\n            if (injectableDef && injectableDef.providedIn == 'root') {\n                return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                    injectableDef.value;\n            }\n            if (flags & 8 /* Optional */)\n                return null;\n            throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // NOTE: The order here matters: Checking window, then global, then self is important.\n    //   checking them in another order can result in errors in some Node environments.\n    var __global$1 = typeof window != 'undefined' && window || typeof global != 'undefined' && global ||\n        typeof self != 'undefined' && self;\n    function ngDevModeResetPerfCounters() {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for clousre.\n        return __global$1['ngDevMode'] = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for clousre.\n        __global$1['ngDevMode'] = ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY$1 = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY$1);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var pipeTypes = componentDefinition.pipes;\n        var directiveTypes = componentDefinition.directives;\n        var declaredInputs = {};\n        var encapsulation = componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated;\n        var styles = componentDefinition.styles || EMPTY_ARRAY;\n        var animations = componentDefinition.animations || null;\n        var data = componentDefinition.data || {};\n        if (animations) {\n            data.animations = animations;\n        }\n        var def = {\n            type: type,\n            diPublic: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            hostVars: componentDefinition.hostVars || 0,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            inputs: invertObject(componentDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(componentDefinition.outputs),\n            exportAs: componentDefinition.exportAs || null,\n            onInit: type.prototype.ngOnInit || null,\n            doCheck: type.prototype.ngDoCheck || null,\n            afterContentInit: type.prototype.ngAfterContentInit || null,\n            afterContentChecked: type.prototype.ngAfterContentChecked || null,\n            afterViewInit: type.prototype.ngAfterViewInit || null,\n            afterViewChecked: type.prototype.ngAfterViewChecked || null,\n            onDestroy: type.prototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null,\n            pipeDefs: pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: data,\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: encapsulation,\n            providers: EMPTY_ARRAY,\n            viewProviders: EMPTY_ARRAY,\n            id: \"c\" + _renderCompCount++, styles: styles,\n        };\n        var feature = componentDefinition.features;\n        feature && feature.forEach(function (fn) { return fn(def); });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY$1;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type) {\n        return type[NG_MODULE_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 17;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var PARENT = 1;\n    var NEXT = 2;\n    var QUERIES = 3;\n    var FLAGS = 4;\n    var HOST_NODE = 5;\n    var BINDING_INDEX = 6;\n    var DIRECTIVES = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n    var DECLARATION_VIEW = 16;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData[DIRECTIVES]\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 15 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.directives[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView[DIRECTIVES], tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(data, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(data[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns wether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData` or `TData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /** Retrieves an element value from the provided `viewData`.\n      *\n      * Elements that are read may be wrapped in a style context,\n      * therefore reading the value may involve unwrapping that.\n      */\n    function loadElementInternal(index, arr) {\n        var value = loadInternal(index, arr);\n        return readElementValue(value);\n    }\n    function readElementValue(value) {\n        return (Array.isArray(value) ? value[0] : value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LViewData` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     */\n    function getContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LViewData instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lViewData = mpValue;\n                var lNodeIndex = void 0;\n                var component = undefined;\n                var directiveIndices = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    lNodeIndex = findViaComponent(lViewData, target);\n                    if (lNodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    lNodeIndex = findViaDirective(lViewData, target);\n                    if (lNodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directiveIndices = discoverDirectiveIndices(lViewData, lNodeIndex);\n                    directives = directiveIndices ? discoverDirectives(lViewData, directiveIndices) : null;\n                }\n                else {\n                    lNodeIndex = findViaNativeElement(lViewData, target);\n                    if (lNodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, compontent or\n                // directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var lNode = getLNodeFromViewData(lViewData, lNodeIndex);\n                var existingCtx = readPatchedData(lNode.native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lViewData, lNodeIndex, lNode.native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && directiveIndices && context.directives === undefined) {\n                    context.directiveIndices = directiveIndices;\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomElement(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lViewData = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lViewData = parentContext;\n                    }\n                    else {\n                        lViewData = parentContext.lViewData;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lViewData) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lViewData, rElement);\n                    if (index >= 0) {\n                        var lNode = getLNodeFromViewData(lViewData, index);\n                        var context = createLContext(lViewData, index, lNode.native);\n                        attachPatchData(lNode.native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lViewData, lNodeIndex, native) {\n        return {\n            lViewData: lViewData,\n            lNodeIndex: lNodeIndex,\n            native: native,\n            component: undefined,\n            directiveIndices: undefined,\n            directives: undefined,\n        };\n    }\n    /**\n     * A utility function for retrieving the matching lElementNode\n     * from a given DOM element, component or directive.\n     */\n    function getLElementNode(target) {\n        var context = getContext(target);\n        return context ? getLNodeFromViewData(context.lViewData, context.lNodeIndex) : null;\n    }\n    /**\n     * A simplified lookup function for finding the LElementNode from a component instance.\n     *\n     * This function exists for tree-shaking purposes to avoid having to pull in everything\n     * that `getContext` has in the event that an Angular application doesn't need to have\n     * any programmatic access to an element's context (only change detection uses this function).\n     */\n    function getLElementFromComponent(componentInstance) {\n        var lViewData = readPatchedData(componentInstance);\n        var lNode;\n        if (Array.isArray(lViewData)) {\n            var lNodeIndex = findViaComponent(lViewData, componentInstance);\n            lNode = readElementValue(lViewData[lNodeIndex]);\n            var context = createLContext(lViewData, lNodeIndex, lNode.native);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lViewData;\n            lNode = readElementValue(context.lViewData[context.lNodeIndex]);\n        }\n        return lNode;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLViewData(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lViewData;\n        }\n        return null;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LViewData and returns the matching index\n     */\n    function findViaNativeElement(lViewData, native) {\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var lNode = getLNodeFromViewData(lViewData, tNode.index);\n            if (lNode.native === native) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else if (tNode.parent) {\n            return tNode.parent.next || null;\n        }\n        return null;\n    }\n    /**\n     * Locates the component within the given LViewData and returns the matching index\n     */\n    function findViaComponent(lViewData, componentInstance) {\n        var componentIndices = lViewData[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var lNodeData = readElementValue(lViewData[elementComponentIndex]).data;\n                if (lNodeData[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootNode = lViewData[HEADER_OFFSET];\n            var rootComponent = rootNode.data[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LViewData and returns the matching index\n     */\n    function findViaDirective(lViewData, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LViewData of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. By first checking to see if the instance\n        // is actually present we can narrow down to which lElementNode\n        // contains the instance of the directive and then return the index\n        var directivesAcrossView = lViewData[DIRECTIVES];\n        var directiveIndex = directivesAcrossView ? directivesAcrossView.indexOf(directiveInstance) : -1;\n        if (directiveIndex >= 0) {\n            var tNode = lViewData[TVIEW].firstChild;\n            while (tNode) {\n                var lNode = getLNodeFromViewData(lViewData, tNode.index);\n                var directiveIndexStart = getDirectiveStartIndex(lNode);\n                var directiveIndexEnd = getDirectiveEndIndex(lNode, directiveIndexStart);\n                if (directiveIndex >= directiveIndexStart && directiveIndex < directiveIndexEnd) {\n                    return tNode.index;\n                }\n                tNode = traverseNextElement(tNode);\n            }\n        }\n        return -1;\n    }\n    function assertDomElement(element) {\n        assertEqual(element.nodeType, 1, 'The provided value must be an instance of an HTMLElement');\n    }\n    /**\n     * Retruns the instance of the LElementNode at the given index in the LViewData.\n     *\n     * This function will also unwrap the inner value incase it's stuffed into an\n     * array (which is what happens when [style] and [class] bindings are present\n     * in the view instructions for the element being returned).\n     */\n    function getLNodeFromViewData(lViewData, lElementIndex) {\n        var value = lViewData[lElementIndex];\n        return value ? readElementValue(value) : null;\n    }\n    /**\n     * Returns a collection of directive index values that are used on the element\n     * (which is referenced by the lNodeIndex)\n     */\n    function discoverDirectiveIndices(lViewData, lNodeIndex) {\n        var directivesAcrossView = lViewData[DIRECTIVES];\n        var lNode = getLNodeFromViewData(lViewData, lNodeIndex);\n        if (lNode && directivesAcrossView && directivesAcrossView.length) {\n            // this check for tNode is to determine if the calue is a LEmementNode instance\n            var directiveIndexStart = getDirectiveStartIndex(lNode);\n            var directiveIndexEnd = getDirectiveEndIndex(lNode, directiveIndexStart);\n            var directiveIndices = [];\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                // special case since the instance of the component (if it exists)\n                // is stored in the directives array.\n                if (i > directiveIndexStart ||\n                    !isComponentInstance(directivesAcrossView[directiveIndexStart])) {\n                    directiveIndices.push(i);\n                }\n            }\n            return directiveIndices.length ? directiveIndices : null;\n        }\n        return null;\n    }\n    function discoverDirectives(lViewData, directiveIndices) {\n        var directives = [];\n        var directiveInstances = lViewData[DIRECTIVES];\n        if (directiveInstances) {\n            for (var i = 0; i < directiveIndices.length; i++) {\n                var directiveIndex = directiveIndices[i];\n                var directive = directiveInstances[directiveIndex];\n                directives.push(directive);\n            }\n        }\n        return directives;\n    }\n    function getDirectiveStartIndex(lNode) {\n        // the tNode instances store a flag value which then has a\n        // pointer which tells the starting index of where all the\n        // active directives are in the master directive array\n        return lNode.tNode.flags >> 15 /* DirectiveStartingIndexShift */;\n    }\n    function getDirectiveEndIndex(lNode, startIndex) {\n        // The end value is also apart of the same flag\n        // (see `TNodeFlags` to see how the flag bit shifting\n        // values are used).\n        var count = lNode.tNode.flags & 4095 /* DirectiveCountMask */;\n        return count ? (startIndex + count) : -1;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    // PARENT, NEXT, and QUERIES are indices 1, 2, and 3.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var VIEWS = 4;\n    var RENDER_PARENT = 5;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the first child of a given node */\n    function getChildLNode(node) {\n        if (node.tNode.child) {\n            var viewData = node.tNode.type === 2 /* View */ ? node.data : node.view;\n            return readElementValue(viewData[node.tNode.child.index]);\n        }\n        return null;\n    }\n    function getParentLNode(node) {\n        if (node.tNode.index === -1 && node.tNode.type === 2 /* View */) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = node.data[CONTAINER_INDEX];\n            return containerHostIndex === -1 ? null : node.view[containerHostIndex].dynamicLContainerNode;\n        }\n        var parent = node.tNode.parent;\n        return readElementValue(parent ? node.view[parent.index] : node.view[HOST_NODE]);\n    }\n    /**\n     * Retrieves render parent LElementNode for a given view.\n     * Might be null if a view is not yet attatched to any container.\n     */\n    function getRenderParent(viewNode) {\n        var container = getParentLNode(viewNode);\n        return container ? container.data[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the LElement nodes.\n     * @param renderer the current renderer.\n     * @param renderParentNode Optional the render parent node to be set in all LContainerNodes found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParentNode, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            var parent_1 = renderParentNode ? renderParentNode.native : null;\n            if (tNode.type === 3 /* Element */) {\n                var elementNode = readElementValue(currentView[tNode.index]);\n                executeNodeAction(action, renderer, parent_1, elementNode.native, beforeNode);\n                if (elementNode.dynamicLContainerNode) {\n                    executeNodeAction(action, renderer, parent_1, elementNode.dynamicLContainerNode.native, beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainerNode = currentView[tNode.index];\n                executeNodeAction(action, renderer, parent_1, lContainerNode.native, beforeNode);\n                var childContainerData = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.data :\n                    lContainerNode.data;\n                if (renderParentNode) {\n                    childContainerData[RENDER_PARENT] = renderParentNode;\n                }\n                if (childContainerData[VIEWS].length) {\n                    currentView = childContainerData[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainerNode.dynamicLContainerNode ?\n                        lContainerNode.dynamicLContainerNode.native :\n                        lContainerNode.native;\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentHost = findComponentHost(currentView);\n                var head = componentHost.tNode.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentHost.data[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 8192 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the LNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index].native;\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentHost(lViewData) {\n        var viewRootLNode = lViewData[HOST_NODE];\n        while (viewRootLNode.tNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'lViewData.parent');\n            lViewData = lViewData[PARENT];\n            viewRootLNode = lViewData[HOST_NODE];\n        }\n        ngDevMode && assertNodeType(viewRootLNode.tNode, 3 /* Element */);\n        ngDevMode && assertDefined(viewRootLNode.data, 'node.data');\n        return viewRootLNode;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(container, viewToWalk, insertMode, beforeNode) {\n        var parentNode = container.data[RENDER_PARENT];\n        var parent = parentNode ? parentNode.native : null;\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (parent) {\n            var renderer = container.view[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, parentNode, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param container The container into which the view should be inserted\n     * @param viewNode The view to insert\n     * @param index The index at which to insert the view\n     * @returns The inserted view\n     */\n    function insertView(container, viewNode, index) {\n        var state = container.data;\n        var views = state[VIEWS];\n        var lView = viewNode.data;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container'S host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (viewNode.tNode.index === -1) {\n            lView[CONTAINER_INDEX] = container.tNode.parent.index;\n            viewNode.view = container.view;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param container The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns The detached view\n     */\n    function detachView(container, removeIndex) {\n        var views = container.data[VIEWS];\n        var viewToDetach = views[removeIndex];\n        var viewNode = viewToDetach[HOST_NODE];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!container.tNode.detached) {\n            addRemoveViewFromContainer(container, viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewNode.view = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~8 /* Attached */;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param container The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     * @returns The removed view\n     */\n    function removeView(container, removeIndex) {\n        var viewToRemove = container.data[VIEWS][removeIndex];\n        destroyLView(viewToRemove);\n        detachView(container, removeIndex);\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        if (viewData[TVIEW].childIndex === -1)\n            return null;\n        var hostNode = viewData[viewData[TVIEW].childIndex];\n        return hostNode.data ? hostNode.data : hostNode.dynamicLContainerNode.data;\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var node;\n        if ((node = state[HOST_NODE]) && node.tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getParentLNode(node).data;\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer[TVIEW]) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]).native;\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view[DIRECTIVES], destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function canInsertNativeChildOfElement(parent, currentView) {\n        if (parent.view !== currentView) {\n            // If the Parent view is not the same as current view than we are inserting across\n            // Views. This happens when we insert a root element of the component view into\n            // the component host element and it should always be eager.\n            return true;\n        }\n        // Parent elements can be a component which may have projection.\n        if (parent.data === null) {\n            // Parent is a regular non-component element. We should eagerly insert into it\n            // since we know that this relationship will never be broken.\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reason:\n     * - view is not inserted into any container (view was created but not iserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view this view was inserted into a container and\n     * the container itself has it render parent determined.\n     */\n    function canInsertNativeChildOfView(parent) {\n        ngDevMode && assertNodeType(parent.tNode, 2 /* View */);\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var grandParentContainer = getParentLNode(parent);\n        if (grandParentContainer == null) {\n            // The `View` is not inserted into a `Container` we have to delay insertion.\n            return false;\n        }\n        ngDevMode && assertNodeType(grandParentContainer.tNode, 0 /* Container */);\n        if (grandParentContainer.data[RENDER_PARENT] == null) {\n            // The parent `Container` itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(parent, currentView) {\n        // We can only insert into a Component or View. Any other type should be an Error.\n        ngDevMode && assertNodeOfPossibleTypes(parent.tNode, 3 /* Element */, 4 /* ElementContainer */, 2 /* View */);\n        if (parent.tNode.type === 3 /* Element */) {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(parent, currentView);\n        }\n        else if (parent.tNode.type === 4 /* ElementContainer */) {\n            // Parent is an element container (ng-container).\n            // Its grand-parent might be an element, view or a sequence of ng-container parents.\n            var grandParent = getParentLNode(parent);\n            while (grandParent !== null && grandParent.tNode.type === 4 /* ElementContainer */) {\n                grandParent = getParentLNode(grandParent);\n            }\n            if (grandParent === null) {\n                return false;\n            }\n            else if (grandParent.tNode.type === 3 /* Element */) {\n                return canInsertNativeChildOfElement(grandParent, currentView);\n            }\n            else {\n                return canInsertNativeChildOfView(grandParent);\n            }\n        }\n        else {\n            // Parent is a View.\n            return canInsertNativeChildOfView(parent);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param parent The parent to which to append the child\n     * @param child The child that should be appended\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            var renderer = currentView[RENDERER];\n            if (parent.tNode.type === 2 /* View */) {\n                var container = getParentLNode(parent);\n                var renderParent = container.data[RENDER_PARENT];\n                var views = container.data[VIEWS];\n                var index = views.indexOf(currentView);\n                var beforeNode = index + 1 < views.length ?\n                    (getChildLNode(views[index + 1][HOST_NODE])).native :\n                    container.native;\n                nativeInsertBefore(renderer, renderParent.native, child, beforeNode);\n            }\n            else if (parent.tNode.type === 4 /* ElementContainer */) {\n                var beforeNode = parent.native;\n                var grandParent = getParentLNode(parent);\n                while (grandParent.tNode.type === 4 /* ElementContainer */) {\n                    grandParent = getParentLNode(grandParent);\n                }\n                if (grandParent.tNode.type === 2 /* View */) {\n                    var renderParent = getRenderParent(grandParent);\n                    nativeInsertBefore(renderer, renderParent.native, child, beforeNode);\n                }\n                else {\n                    nativeInsertBefore(renderer, grandParent.native, child, beforeNode);\n                }\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parent.native, child) :\n                    parent.native.appendChild(child);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Removes the `child` element of the `parent` from the DOM.\n     *\n     * @param parent The parent from which to remove the child\n     * @param child The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            // We only remove the element if not in View or not projected.\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parent.native, child) :\n                parent.native.removeChild(child);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param node The node to process\n     * @param currentParent The last parent element to be processed\n     * @param currentView Current LView\n     */\n    function appendProjectedNode(node, currentParent, currentView, renderParent, parentView) {\n        appendChild(currentParent, node.native, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(node.native, parentView);\n        if (node.tNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var lContainer = node.data;\n            lContainer[RENDER_PARENT] = renderParent;\n            var views = lContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(node, views[i], true, node.native);\n            }\n        }\n        else if (node.tNode.type === 4 /* ElementContainer */) {\n            var ngContainerChild = getChildLNode(node);\n            var parentView_1 = currentView[PARENT];\n            while (ngContainerChild) {\n                appendProjectedNode(ngContainerChild, currentParent, currentView, renderParent, parentView_1);\n                ngContainerChild = ngContainerChild.tNode.next ?\n                    readElementValue(ngContainerChild.view[ngContainerChild.tNode.next.index]) :\n                    null;\n            }\n        }\n        if (node.dynamicLContainerNode) {\n            node.dynamicLContainerNode.data[RENDER_PARENT] = renderParent;\n            appendChild(currentParent, node.dynamicLContainerNode.native, currentView);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(lElement, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[0 /* ElementPosition */] = lElement;\n        return context;\n    }\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer) {\n        var initialStylingValues = [null];\n        var context = [null, styleSanitizer || null, initialStylingValues, 0, 0, null];\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 3 /* Size */ * 2 + 6 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 6 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 6 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 3 /* Size */ + 6 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 3 /* Size */ + multiStart;\n            var indexForSingle = i * 3 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        setFlag(context, 3 /* MasterFlagPosition */, pointers(0, 0, multiStart));\n        setContextDirty(context, initialStylingValues.length > 1);\n        return context;\n    }\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classes The key/value map of CSS class names that will be used for the update.\n     * @param styles The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classes, styles) {\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var ignoreAllClassUpdates = false;\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (typeof classes == 'string') {\n            var cachedClassString = context[5 /* CachedCssClassString */];\n            if (cachedClassString && cachedClassString === classes) {\n                ignoreAllClassUpdates = true;\n            }\n            else {\n                context[5 /* CachedCssClassString */] = classes;\n                classNames = classes.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n        }\n        else {\n            classNames = classes ? Object.keys(classes) : EMPTY_ARR;\n            context[5 /* CachedCssClassString */] = null;\n        }\n        classes = (classes || EMPTY_OBJ);\n        var styleProps = styles ? Object.keys(styles) : EMPTY_ARR;\n        styles = styles || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (!ignoreAllClassUpdates || !isClassBased_2) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (initialValue !== newValue) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (valueToCompare !== newValue) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (initialValue !== newValue) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 3 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            if (ignoreAllClassUpdates && isClassBased_3)\n                break;\n            var value = getValue(context, ctxIndex);\n            var doRemoveValue = valueExists(value, isClassBased_3);\n            if (doRemoveValue) {\n                setDirty(context, ctxIndex, true);\n                setValue(context, ctxIndex, null);\n                dirty = true;\n            }\n            ctxIndex += 3 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            if (ignoreAllClassUpdates && isClassBased_4)\n                break;\n            var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n            var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n            var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n            var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n            context.push(flag, prop, value);\n            propIndex++;\n            dirty = true;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, value) {\n        var singleIndex = 6 /* SingleStylesStartPosition */ + index * 3 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || valueForMulti !== value) {\n                var multiDirty = false;\n                var singleDirty = true;\n                var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param styleStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param classStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     */\n    function renderStyling(context, renderer, styleStore, classStore) {\n        if (isContextDirty(context)) {\n            var native = context[0 /* ElementPosition */].native;\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            for (var i = 6 /* SingleStylesStartPosition */; i < context.length; i += 3 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    if (isClassBased_6) {\n                        setClass(native, prop, valueToApply ? true : false, renderer, classStore);\n                    }\n                    else {\n                        var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                        setStyle(native, prop, valueToApply, renderer, sanitizer, styleStore);\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            setContextDirty(context, false);\n        }\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store) {\n            store[prop] = value;\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store) {\n        if (store) {\n            store[className] = add;\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 7 /* BitMask */) | (staticIndex << 3 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 3 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 3 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 3 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 6 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 3 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 3 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 3 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * TView.data needs to fill the same number of slots as the LViewData header\n     * so the indices of nodes are consistent between LViewData and TView.data.\n     *\n     * It's much faster to keep a blueprint of the pre-filled array and slice it\n     * than it is to create a new array and fill it each time a TView is created.\n     */\n    var HEADER_FILLER = new Array(HEADER_OFFSET).fill(null);\n    /**\n     * Token set in currentMatches while dependencies are being resolved.\n     *\n     * If we visit a directive that has a value set to CIRCULAR, we know we've\n     * already seen it, and thus have a circular dependency.\n     */\n    var CIRCULAR$1 = '__CIRCULAR__';\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LViewData` to only those elements.\n     */\n    var elementDepthCount;\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentNode() {\n        return previousOrParentTNode == null || previousOrParentTNode === tView.node ?\n            viewData[HOST_NODE] :\n            readElementValue(viewData[previousOrParentTNode.index]);\n    }\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    var tView;\n    var currentQueries;\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== tView.node &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = currentQueries.clone());\n            previousOrParentTNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (currentQueries = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function _getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    /**\n     * An array of directive instances in the current view.\n     *\n     * These must be stored separately from LNodes because their presence is\n     * unknown at compile-time and thus space cannot be reserved in data[].\n     */\n    var directives;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.hostBindingStartIndex + any hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = viewData;\n        directives = newView && newView[DIRECTIVES];\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        bindingRootIndex = newView && tView.bindingStartIndex;\n        renderer = newView && newView[RENDERER];\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        viewData = contextViewData = newView;\n        oldView && (oldView[QUERIES] = currentQueries);\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(directives, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews() {\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = firstTemplatePass = false;\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(viewData);\n        // Content query results must be refreshed before content hooks are called.\n        refreshContentQueries(tView);\n        if (!checkNoChangesMode) {\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        setHostBindings(tView.hostBindings);\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(bindings) {\n        if (bindings != null) {\n            bindingRootIndex = viewData[BINDING_INDEX] = tView.hostBindingStartIndex;\n            var defs = tView.directives;\n            for (var i = 0; i < bindings.length; i += 2) {\n                var dirIndex = bindings[i];\n                var def = defs[dirIndex];\n                def.hostBindings(dirIndex, bindings[i + 1]);\n                bindingRootIndex = viewData[BINDING_INDEX] = bindingRootIndex + def.hostVars;\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.directives[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function executeInitAndContentHooks() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        var instance = tView.blueprint.slice();\n        instance[PARENT] = viewData;\n        instance[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        instance[CONTEXT] = context;\n        instance[INJECTOR$1] = viewData ? viewData[INJECTOR$1] : null;\n        instance[RENDERER] = renderer;\n        instance[SANITIZER] = sanitizer || null;\n        return instance;\n    }\n    /**\n     * Creation of LNode object is extracted to a separate function so we always create LNode object\n     * with the same shape\n     * (same properties assigned in the same order).\n     */\n    function createLNodeObject(type, currentView, nodeInjector, native, state) {\n        return {\n            native: native,\n            view: currentView,\n            nodeInjector: nodeInjector,\n            data: state,\n            tNode: null,\n            dynamicLContainerNode: null\n        };\n    }\n    function createLNode(index, type, native, name, attrs, state) {\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && tView && parent !== tView.node;\n        var tParent = parentInSameView ? parent : null;\n        var isState = state != null;\n        var node = createLNodeObject(type, viewData, null, native, isState ? state : null);\n        if (index === -1 || type === 2 /* View */) {\n            // View nodes are not stored in data because they can be added / removed at runtime (which\n            // would cause indices to change). Their TNodes are instead stored in TView.node.\n            node.tNode = (state ? state[TVIEW].node : null) ||\n                createTNode(type, index, null, null, tParent, null);\n        }\n        else {\n            var adjustedIndex = index + HEADER_OFFSET;\n            // This is an element or container or projection node\n            var tData = tView.data;\n            ngDevMode && assertLessThan(adjustedIndex, viewData.length, \"Slot should have been initialized with null\");\n            viewData[adjustedIndex] = node;\n            if (tData[adjustedIndex] == null) {\n                var tNode = tData[adjustedIndex] =\n                    createTNode(type, adjustedIndex, name, attrs, tParent, null);\n                if (!isParent && previousOrParentTNode) {\n                    previousOrParentTNode.next = tNode;\n                    if (previousOrParentTNode.dynamicContainerNode)\n                        previousOrParentTNode.dynamicContainerNode.next = tNode;\n                }\n            }\n            node.tNode = tData[adjustedIndex];\n            if (!tView.firstChild && type === 3 /* Element */) {\n                tView.firstChild = node.tNode;\n            }\n            // Now link ourselves into the tree.\n            if (isParent && previousOrParentTNode) {\n                if (previousOrParentTNode.child == null && parentInSameView ||\n                    previousOrParentTNode.type === 2 /* View */) {\n                    // We are in the same view, which means we are adding content node to the parent View.\n                    previousOrParentTNode.child = node.tNode;\n                }\n            }\n        }\n        // TODO: temporary, remove when removing LNode.nodeInjector\n        var parentLNode = index === -1 ? null : getParentLNode(node);\n        if (parentLNode)\n            node.nodeInjector = parentLNode.nodeInjector;\n        // View nodes and host elements need to set their host node (components do not save host TNodes)\n        if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n            var lViewData = state;\n            ngDevMode &&\n                assertEqual(lViewData[HOST_NODE], null, 'lViewData[HOST_NODE] should not have been initialized');\n            lViewData[HOST_NODE] = node;\n            if (lViewData[TVIEW].firstTemplatePass) {\n                lViewData[TVIEW].node = node.tNode;\n            }\n        }\n        previousOrParentTNode = node.tNode;\n        isParent = true;\n        return node;\n    }\n    /**\n     * When LNodes are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function adjustBlueprintForNewNode(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.hostBindingStartIndex++;\n            tView.blueprint.push(null);\n            view.push(null);\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewNode(tView, context, declarationView, renderer, queries) {\n        var _isParent = isParent;\n        var _previousOrParentTNode = previousOrParentTNode;\n        isParent = true;\n        previousOrParentTNode = null;\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        var viewNode = createLNode(-1, 2 /* View */, null, null, null, lView);\n        isParent = _isParent;\n        previousOrParentTNode = _previousOrParentTNode;\n        return viewNode;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n        var _isParent = isParent;\n        var _previousOrParentTNode = previousOrParentTNode;\n        var oldView;\n        if (viewToRender[PARENT] == null && viewToRender[CONTEXT] && !tView.template) {\n            // This is a root view inside the view tree\n            tickRootContext(viewToRender[CONTEXT]);\n        }\n        else {\n            try {\n                isParent = true;\n                previousOrParentTNode = null;\n                oldView = enterView(viewToRender, tView.node);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews();\n                }\n                else {\n                    viewToRender[TVIEW].firstTemplatePass = firstTemplatePass = false;\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice in fact, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                isParent = _isParent;\n                previousOrParentTNode = _previousOrParentTNode;\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, templateFn) {\n        var oldView = enterView(hostView, null);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(getRenderFlags(hostView), componentOrContext);\n                refreshDescendantViews();\n            }\n            else {\n                executeInitAndContentHooks();\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings(tView.hostBindings);\n                componentRefresh(HEADER_OFFSET);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(index - 1);\n        var node = createLNode(index, 4 /* ElementContainer */, native, null, attrs || null, null);\n        appendChild(getParentLNode(node), native, viewData);\n        createDirectivesAndLocals(node, localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        // Can be read directly because ng-containers can't have style bindings\n        var previousNode = viewData[previousOrParentTNode.index];\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        currentQueries && (currentQueries = currentQueries.addNode(previousNode));\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var node = createLNode(index, 3 /* Element */, native, name, attrs || null, null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(getParentLNode(node), native, viewData);\n        createDirectivesAndLocals(node, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (elementDepthCount === 0) {\n            attachPatchData(native, viewData);\n        }\n        elementDepthCount++;\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || renderer;\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    function nativeNodeLocalRefExtractor(lNode) {\n        return lNode.native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param lNode LNode for which directive and locals should be created\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from LNode\n     */\n    function createDirectivesAndLocals(lNode, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = nativeNodeLocalRefExtractor; }\n        if (firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            cacheMatchingDirectivesForNode(previousOrParentTNode, tView, localRefs || null);\n        }\n        else {\n            instantiateDirectivesDirectly();\n        }\n        saveResolvedLocalsInData(lNode, localRefExtractor);\n    }\n    /**\n     * On first template pass, we match each node against available directive selectors and save\n     * the resulting defs in the correct instantiation order for subsequent change detection runs\n     * (so dependencies are always created before the directives that inject them).\n     */\n    function cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var matches = tView.currentMatches = findDirectiveMatches(tNode);\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                var valueIndex = i + 1;\n                resolveDirective(def, valueIndex, matches, tView);\n                saveNameToExportMap(matches[valueIndex], def, exportsMap);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /** Matches the current node against all available selectors. */\n    function findDirectiveMatches(tNode) {\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    if (def.template) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                    }\n                    if (def.diPublic)\n                        def.diPublic(def);\n                    (matches || (matches = [])).push(def, null);\n                }\n            }\n        }\n        return matches;\n    }\n    function resolveDirective(def, valueIndex, matches, tView) {\n        if (matches[valueIndex] === null) {\n            matches[valueIndex] = CIRCULAR$1;\n            var instance = def.factory();\n            (tView.directives || (tView.directives = [])).push(def);\n            return directiveCreate(matches[valueIndex] = tView.directives.length - 1, instance, def);\n        }\n        else if (matches[valueIndex] === CIRCULAR$1) {\n            // If we revisit this directive before it's resolved, we know it's circular\n            throwCyclicDependencyError(def.type);\n        }\n        return null;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck() {\n        if (firstTemplatePass) {\n            (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n        }\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n     */\n    function queueHostBindingForCheck(dirIndex, hostVars) {\n        // Must subtract the header offset because hostBindings functions are generated with\n        // instructions that expect element indices that are NOT adjusted (e.g. elementProperty).\n        ngDevMode &&\n            assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < hostVars; i++) {\n            tView.blueprint.push(NO_CHANGE);\n            viewData.push(NO_CHANGE);\n        }\n        (tView.hostBindings || (tView.hostBindings = [])).push(dirIndex, previousOrParentTNode.index - HEADER_OFFSET);\n    }\n    /** Sets the context for a ChangeDetectorRef to the given instance. */\n    function initChangeDetectorIfExisting(injector, instance, view) {\n        if (injector && injector.changeDetectorRef != null) {\n            injector.changeDetectorRef._setComponentContext(view, instance);\n        }\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    /**\n     * This function instantiates the given directives.\n     */\n    function instantiateDirectivesDirectly() {\n        ngDevMode && assertEqual(firstTemplatePass, false, \"Directives should only be instantiated directly after first template pass\");\n        var count = previousOrParentTNode.flags & 4095 /* DirectiveCountMask */;\n        if (isContentQueryHost(previousOrParentTNode) && currentQueries) {\n            currentQueries = currentQueries.clone();\n        }\n        if (count > 0) {\n            var start = previousOrParentTNode.flags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var tDirectives = tView.directives;\n            for (var i = start; i < end; i++) {\n                var def = tDirectives[i];\n                directiveCreate(i, def.factory(), def);\n            }\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(lNode, localRefExtractor) {\n        var localNames = lNode.tNode.localNames;\n        if (localNames) {\n            var localIndex = lNode.tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ? localRefExtractor(lNode) : directives[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: HEADER_FILLER.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            hostBindingStartIndex: initialViewLength,\n            directives: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            hostBindings: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            currentMatches: null,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        rendererFactory = factory;\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Creates the host LNode.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     *\n     * @returns LElementNode created\n     */\n    function hostElement(tag, rNode, def, sanitizer) {\n        resetComponentState();\n        var node = createLNode(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n        if (firstTemplatePass) {\n            node.tNode.flags = 4096 /* isComponent */;\n            if (def.diPublic)\n                def.diPublic(def);\n            tView.directives = [def];\n        }\n        return node;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var node = getPreviousOrParentNode();\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var wrappedListener = wrapListenerWithDirtyLogic(viewData, listenerFn);\n                var cleanupFn = renderer.listen(node.native, eventName, wrappedListener);\n                storeCleanupFn(viewData, cleanupFn);\n            }\n            else {\n                var wrappedListener = wrapListenerWithDirtyAndDefault(viewData, listenerFn);\n                node.native.addEventListener(eventName, wrappedListener, useCapture);\n                var cleanupInstances = getCleanup(viewData);\n                cleanupInstances.push(wrappedListener);\n                if (firstTemplatePass) {\n                    getTViewCleanup(viewData).push(eventName, tNode.index, cleanupInstances.length - 1, useCapture);\n                }\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], directives);\n            var subscription = directives[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = viewData;\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        currentQueries && (currentQueries = currentQueries.addNode(getPreviousOrParentNode()));\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n        elementDepthCount--;\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var element_1 = loadElement(index);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1.native, name) :\n                    element_1.native.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1.native, name, strValue) :\n                    element_1.native.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var node = loadElement(index);\n        var tNode = node.tNode;\n        // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked\n        if (tNode && tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(node.tNode.flags, 0 /* Input */);\n        }\n        var inputData = tNode && tNode.inputs;\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(dataValue, value);\n            markDirtyIfOnPush(node);\n        }\n        else {\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            var native = node.native;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n                (native.setProperty ? native.setProperty(propName, value) :\n                    native[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param parent The parent of this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            flags: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: parent,\n            dynamicContainerNode: null,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], directives);\n            directives[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number lNodeFlags logical node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.directives;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        updateClassProp(getStylingContext(index), stylingIndex, value ? true : false);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n        var tNode = previousOrParentTNode;\n        if (!tNode.stylingTemplate) {\n            // initialize the styling template.\n            tNode.stylingTemplate =\n                createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            elementStylingApply(tNode.index - HEADER_OFFSET);\n        }\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     */\n    function getStylingContext(index) {\n        var stylingContext = load(index);\n        if (!Array.isArray(stylingContext)) {\n            var lElement = stylingContext;\n            var tNode = lElement.tNode;\n            ngDevMode &&\n                assertDefined(tNode.stylingTemplate, 'getStylingContext() called before elementStyling()');\n            stylingContext = viewData[index + HEADER_OFFSET] =\n                allocStylingContext(lElement, tNode.stylingTemplate);\n        }\n        return stylingContext;\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        renderStyling(getStylingContext(index), renderer);\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param styleName Name of property. Because it is going to DOM this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix) {\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     */\n    function elementStylingMap(index, classes, styles) {\n        updateStylingMap(getStylingContext(index), classes, styles);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNode = createTextNode(value, renderer);\n        var node = createLNode(index, 3 /* Element */, textNode, null, null);\n        // Text nodes are self closing.\n        isParent = false;\n        appendChild(getParentLNode(node), textNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var existingNode = loadElement(index);\n            ngDevMode && assertDefined(existingNode, 'LNode should exist');\n            ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n                existingNode.native.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Create a directive and their associated content queries.\n     *\n     * NOTE: directives can be created in order other than the index order. They can also\n     *       be retrieved before they are created in which case the value will be null.\n     *\n     * @param directive The directive instance.\n     * @param directiveDef DirectiveDef object which contains information about the template.\n     */\n    function directiveCreate(directiveDefIdx, directive, directiveDef) {\n        var hostNode = getPreviousOrParentNode();\n        var instance = baseDirectiveCreate(directiveDefIdx, directive, directiveDef, hostNode);\n        var isComponent = directiveDef.template;\n        if (isComponent) {\n            addComponentLogic(directiveDefIdx, directive, directiveDef, hostNode);\n        }\n        if (firstTemplatePass) {\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(directiveDefIdx, directiveDef.onInit, directiveDef.doCheck, tView);\n            if (directiveDef.hostBindings)\n                queueHostBindingForCheck(directiveDefIdx, directiveDef.hostVars);\n        }\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, instance, directiveDef.inputs, previousOrParentTNode);\n        }\n        if (directiveDef.contentQueries) {\n            directiveDef.contentQueries();\n        }\n        return instance;\n    }\n    function addComponentLogic(directiveIndex, instance, def, hostNode) {\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentTNode.index, createLViewData(rendererFactory.createRenderer(hostNode.native, def), tView, instance, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        // We need to set the host node/data here because when the component LNode was created,\n        // we didn't yet know it was a component (just an element).\n        hostNode.data = componentView;\n        componentView[HOST_NODE] = hostNode;\n        initChangeDetectorIfExisting(hostNode.nodeInjector, instance, componentView);\n        if (firstTemplatePass)\n            queueComponentIndexForCheck();\n    }\n    /**\n     * A lighter version of directiveCreate() that is used for the root component\n     *\n     * This version does not contain features that we don't already support at root in\n     * current Angular. Example: local refs and inputs on root component.\n     */\n    function baseDirectiveCreate(index, directive, directiveDef, hostNode) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        attachPatchData(directive, viewData);\n        if (hostNode) {\n            attachPatchData(hostNode.native, viewData);\n        }\n        if (directives == null)\n            viewData[DIRECTIVES] = directives = [];\n        ngDevMode && assertDataNext(index, directives);\n        directives[index] = directive;\n        if (firstTemplatePass) {\n            var flags = previousOrParentTNode.flags;\n            if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n                // When the first directive is created:\n                // - save the index,\n                // - set the number of directives to 1\n                previousOrParentTNode.flags =\n                    index << 15 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n            }\n            else {\n                // Only need to bump the size when subsequent directives are created\n                ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n                previousOrParentTNode.flags++;\n            }\n        }\n        else {\n            var diPublic = directiveDef.diPublic;\n            if (diPublic)\n                diPublic(directiveDef);\n        }\n        if (directiveDef.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(hostNode.native, directiveDef.attributes);\n        }\n        return directive;\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param parentLNode the LNode in which the container's content will be rendered\n     * @param currentView The parent view of the LContainer\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(parentLNode, currentView, isForViewContainerRef) {\n        ngDevMode && assertDefined(parentLNode, 'containers should have a parent');\n        var renderParent = canInsertNativeNode(parentLNode, currentView) ?\n            parentLNode :\n            null;\n        if (renderParent && renderParent.tNode.type === 2 /* View */) {\n            renderParent = getParentLNode(renderParent).data[RENDER_PARENT];\n        }\n        return [\n            isForViewContainerRef ? null : 0,\n            currentView,\n            null,\n            null,\n            [],\n            renderParent\n        ];\n    }\n    /**\n     * Creates an LContainerNode for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        // TODO: consider a separate node type for templates\n        var node = containerInternal(index, tagName || null, attrs || null, localRefs || null);\n        if (firstTemplatePass) {\n            node.tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(node, localRefs, localRefExtractor);\n        currentQueries && (currentQueries = currentQueries.addNode(node));\n        queueLifecycleHooks(node.tNode.flags, tView);\n        isParent = false;\n    }\n    /**\n     * Creates an LContainerNode for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var node = containerInternal(index, null, null, null);\n        firstTemplatePass && (node.tNode.tViews = []);\n        isParent = false;\n    }\n    function containerInternal(index, tagName, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'container nodes should be created before any bindings');\n        var previousNode = getPreviousOrParentNode();\n        var currentParent = isParent ? previousNode : getParentLNode(previousNode);\n        var lContainer = createLContainer(currentParent, viewData);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = renderer.createComment(ngDevMode ? 'container' : '');\n        var node = createLNode(index, 0 /* Container */, comment, tagName, attrs, lContainer);\n        appendChild(getParentLNode(node), comment, viewData);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, node.data);\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        return node;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        previousOrParentTNode = loadInternal(index, tView.data);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        isParent = true;\n        // Inline containers cannot have style bindings, so we can read the value directly\n        viewData[previousOrParentTNode.index].data[ACTIVE_INDEX] = 0;\n        if (!checkNoChangesMode) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, creationMode);\n        }\n    }\n    /**\n     * Marks the end of the LContainerNode.\n     *\n     * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        // Inline containers cannot have style bindings, so we can read the value directly\n        var container = viewData[previousOrParentTNode.index];\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var nextIndex = container.data[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < container.data[VIEWS].length) {\n            removeView(container, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === null) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param containerNode where to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(containerNode, startIdx, viewBlockId) {\n        var views = containerNode.data[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(containerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the search here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        // Inline containers cannot have style bindings, so we can read the value directly\n        var container = viewData[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var lContainer = container.data;\n        var viewNode;\n        var viewToRender = scanForView(container, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            isParent = true;\n            viewNode = viewToRender[HOST_NODE];\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            viewNode = createLNode(viewBlockId, 2 /* View */, null, null, null, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (container) {\n            if (creationMode) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(container, viewNode, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewToRender);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var viewHost = tView.node;\n        refreshDescendantViews();\n        leaveView(viewData[PARENT]);\n        previousOrParentTNode = viewHost;\n        isParent = false;\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var element = readElementValue(viewData[adjustedElementIndex]);\n        ngDevMode && assertNodeType(tView.data[adjustedElementIndex], 3 /* Element */);\n        ngDevMode &&\n            assertDefined(element.data, \"Component's host node should have an LViewData attached.\");\n        var hostView = element.data;\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            detectChangesInternal(hostView, hostView[CONTEXT]);\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentHost(viewData);\n        if (!componentNode.tNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.tNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.tNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var node = createLNode(nodeIndex, 1 /* Projection */, null, null, attrs || null, null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (node.tNode.projection === null)\n            node.tNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        isParent = false;\n        // re-distribution of projectable nodes is stored on a component's view level\n        var parent = getParentLNode(node);\n        var componentNode = findComponentHost(viewData);\n        var nodeToProject = componentNode.tNode.projection[selectorIndex];\n        var projectedView = componentNode.view;\n        var projectionNodeIndex = -1;\n        var renderParent = null;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentHost = findComponentHost(projectedView);\n                var firstProjectedNode = currentComponentHost.tNode.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView[nodeToProject.index];\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentHost.view;\n                    continue;\n                }\n            }\n            else {\n                var lNode = projectedView[nodeToProject.index];\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                lNode.tNode.flags |= 8192 /* isProjected */;\n                if (canInsertNativeNode(parent, viewData)) {\n                    var grandparent = void 0;\n                    if (renderParent == null) {\n                        renderParent = parent.tNode.type === 2 /* View */ ?\n                            (grandparent = getParentLNode(parent)) &&\n                                grandparent.data[RENDER_PARENT] :\n                            parent;\n                    }\n                    appendProjectedNode(lNode, parent, viewData, renderParent, projectedView);\n                }\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentNode.view) {\n                // move down into the view of the component we're projecting right now\n                var lNode = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = lNode.tNode;\n                projectedView = lNode.view;\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(node) {\n        // Because data flows down the component tree, ancestors do not need to be marked dirty\n        if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n            node.data[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Necessary to support OnPush components.\n     */\n    function wrapListenerWithDirtyLogic(view, listenerFn) {\n        return function (e) {\n            markViewDirty(view);\n            return listenerFn(e);\n        };\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Also wraps with preventDefault behavior.\n     */\n    function wrapListenerWithDirtyAndDefault(view, listenerFn) {\n        return function wrapListenerIn_markViewDirty(e) {\n            markViewDirty(view);\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView[PARENT] != null) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext');\n        scheduleTick(currentView[CONTEXT]);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext) {\n        if (rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                tickRootContext(rootContext);\n                res_1(null);\n                rootContext.clean = _CLEAN_PROMISE;\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLViewData(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lViewData = readPatchedLViewData(component);\n        while (lViewData[PARENT]) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var hostNode = getLElementFromComponent(component);\n        ngDevMode &&\n            assertDefined(hostNode, 'Component host node should be attached to an LViewData instance.');\n        detectChangesInternal(hostNode.data, component);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        checkNoChangesMode = true;\n        try {\n            detectChanges(component);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        checkNoChangesMode = true;\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, null);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView[FLAGS], component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews();\n            updateViewQuery(viewQuery, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, flags, component) {\n        if (viewQuery && (flags & 1 /* CreationMode */)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, component) {\n        if (viewQuery) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lViewData = readPatchedLViewData(component);\n        markViewDirty(lViewData);\n    }\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(viewData[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(viewData[BINDING_INDEX]++, v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        viewData[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        return loadInternal(index, contextViewData);\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /** Retrieves a value from the `directives` array. */\n    function loadDirective(index) {\n        ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n        ngDevMode && assertDataInRange(index, directives);\n        return directives[index];\n    }\n    function loadQueryList(queryListIdx) {\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, viewData);\n    }\n    function loadElement(index) {\n        return loadElementInternal(index, viewData);\n    }\n    /** Gets the current binding value. */\n    function getBinding(bindingIndex) {\n        ngDevMode && assertDataInRange(viewData[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(viewData[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && assertLessThan(bindingIndex, viewData.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (viewData[bindingIndex] === NO_CHANGE) {\n            viewData[bindingIndex] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding and returns the value. */\n    function updateBinding(bindingIndex, value) {\n        return viewData[bindingIndex] = value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(bindingIndex, exp1);\n        return bindingUpdated(bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated(bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated2(bindingIndex + 2, exp3, exp4) || different;\n    }\n    function getTView() {\n        return tView;\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList) {\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (firstTemplatePass) {\n            var currentDirectiveIndex = directives.length - 1;\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(previousOrParentTNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n    function assertDataNext(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function _getComponentHostLElementNode(component) {\n        ngDevMode && assertDefined(component, 'expecting component got null');\n        var lElementNode = getLElementFromComponent(component);\n        ngDevMode && assertDefined(component, 'object is not a component');\n        return lElementNode;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window));\n        var rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef), createTView(-1, null, 1, 0, null, null, null), rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n        rootView[INJECTOR$1] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var elementNode;\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n            // Create directive instance with factory() and store at index 0 in directives array\n            component = baseDirectiveCreate(0, componentDef.factory(), componentDef, elementNode);\n            if (componentDef.hostBindings) {\n                queueHostBindingForCheck(0, componentDef.hostVars);\n            }\n            rootContext.components.push(component);\n            elementNode.data[CONTEXT] = component;\n            initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n            opts.hostFeatures && opts.hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n            executeInitAndContentHooks();\n            setHostBindings(rootView[TVIEW].hostBindings);\n            detectChangesInternal(elementNode.data, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    function createRootContext(scheduler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var elementNode = _getComponentHostLElementNode(component);\n        // Root component is always created at dir index 0\n        var tView = elementNode.view[TVIEW];\n        queueInitHooks(0, def.onInit, def.doCheck, tView);\n        queueLifecycleHooks(elementNode.tNode.flags, tView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDefInternal} or a {@link DirectiveDefInternal}\n     * @param definition The definition to examine\n     */\n    function isComponentDef(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef(definition) && isComponentDef(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function () {\n                            superContentQueries_1();\n                            prevContentQueries_1();\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY$1) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     *\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     *\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n     *\n     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n     * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n     * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n     * the `TemplateRef` from a Component or a Directive via {@link Query}.\n     *\n     * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#\n     * createEmbeddedView}, which will create the View and attach it to the View Container.\n     *\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more Views can be attached.\n     *\n     * The container can contain two kinds of Views. Host Views, created by instantiating a\n     * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n     * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n     *\n     * The location of the View Container within the containing View is specified by the Anchor\n     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n     * have a single View Container.\n     *\n     * Root elements of Views attached to this container become siblings of the Anchor Element in\n     * the Rendered View.\n     *\n     * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n     * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n     *\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        return ViewContainerRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handeled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @experimental\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @experimental\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        return Renderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, context) {\n            this._view = _view;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._lViewNode = null;\n            this.context = context;\n        }\n        /** @internal */\n        ViewRef.prototype._setComponentContext = function (view, context) {\n            this._view = view;\n            this.context = context;\n        };\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = getRendererFactory();\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        return RootViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () {\n            var useRaf = typeof requestAnimationFrame !== 'undefined' && typeof window !== 'undefined';\n            return useRaf ? requestAnimationFrame.bind(window) : setTimeout;\n        },\n    });\n    /**\n     * A function used to wrap the `RendererFactory2`.\n     * Used in tests to change the `RendererFactory2` into a `DebugRendererFactory2`.\n     */\n    var WRAP_RENDERER_FACTORY2 = new InjectionToken('WRAP_RENDERER_FACTORY2');\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            if (ngModule) {\n                var wrapper = ngModule.injector.get(WRAP_RENDERER_FACTORY2, function (v) { return v; });\n                rendererFactory = wrapper(ngModule.injector.get(RendererFactory2));\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            // The first index of the first selector is the tag name.\n            var componentTag = this.componentDef.selectors[0][0];\n            var rootContext = ngModule && !isInternalRootView ?\n                ngModule.injector.get(ROOT_CONTEXT) :\n                createRootContext(requestAnimationFrame.bind(window));\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef), createTView(-1, null, 1, 0, null, null, null), rootContext, this.componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n            rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var elementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                // Create element node at index 0 in data array\n                elementNode = hostElement(componentTag, hostNode, this.componentDef);\n                var componentView = elementNode.data;\n                // Create directive instance with factory() and store at index 0 in directives array\n                component =\n                    baseDirectiveCreate(0, this.componentDef.factory(), this.componentDef, elementNode);\n                if (this.componentDef.hostBindings) {\n                    queueHostBindingForCheck(0, this.componentDef.hostVars);\n                }\n                rootContext.components.push(component);\n                initChangeDetectorIfExisting(elementNode.nodeInjector, component, componentView);\n                componentView[CONTEXT] = component;\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                LifecycleHooksFeature(component, this.componentDef);\n                setHostBindings(rootView[TVIEW].hostBindings);\n                // Transform the arrays of native nodes into a LNode structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var projection$$1 = elementNode.tNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            adjustBlueprintForNewNode(rootView);\n                            var lNode = createLNode(++index, 3 /* Element */, nodeList[j], null, null);\n                            if (previousTNode) {\n                                previousTNode.next = lNode.tNode;\n                            }\n                            else {\n                                firstTNode = lNode.tNode;\n                            }\n                            previousTNode = lNode.tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // Execute the template in creation mode only, and then turn off the CreationMode flag\n                renderEmbeddedTemplate(componentView, componentView[TVIEW], component, 1 /* Create */);\n                componentView[FLAGS] &= ~1 /* CreationMode */;\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, hostNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._lViewNode.tNode.child = elementNode.tNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, hostNode) {\n            var _this = _super.call(this) || this;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(rootView);\n            _this.hostView._lViewNode = createLNode(-1, 2 /* View */, null, null, null, rootView);\n            _this.injector = injector;\n            _this.location = new ElementRef(hostNode);\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injector The node injector in which the directive should be registered\n     * @param type The directive to register\n     */\n    function bloomAdd(injector, type) {\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        if (b7) {\n            b6 ? (b5 ? (injector.bf7 |= mask) : (injector.bf6 |= mask)) :\n                (b5 ? (injector.bf5 |= mask) : (injector.bf4 |= mask));\n        }\n        else {\n            b6 ? (b5 ? (injector.bf3 |= mask) : (injector.bf2 |= mask)) :\n                (b5 ? (injector.bf1 |= mask) : (injector.bf0 |= mask));\n        }\n    }\n    function getOrCreateNodeInjector() {\n        ngDevMode && assertPreviousIsParent();\n        return getOrCreateNodeInjectorForNode(getPreviousOrParentNode());\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param node for which an injector should be retrieved / created.\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(node) {\n        var nodeInjector = node.nodeInjector;\n        var parent = getParentLNode(node);\n        var parentInjector = parent && parent.nodeInjector;\n        if (nodeInjector != parentInjector) {\n            return nodeInjector;\n        }\n        return node.nodeInjector = {\n            parent: parentInjector,\n            node: node,\n            bf0: 0,\n            bf1: 0,\n            bf2: 0,\n            bf3: 0,\n            bf4: 0,\n            bf5: 0,\n            bf6: 0,\n            bf7: 0,\n            cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n            cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n            cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n            cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n            cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n            cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n            cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n            cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n            templateRef: null,\n            viewContainerRef: null,\n            elementRef: null,\n            changeDetectorRef: null,\n        };\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param def The definition of the directive to be made public\n     */\n    function diPublicInInjector(di, def) {\n        bloomAdd(di, def.type);\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param def The definition of the directive to be made public\n     */\n    function diPublic(def) {\n        diPublicInInjector(getOrCreateNodeInjector(), def);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n    }\n    /**\n     * Creates an ElementRef and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef() {\n        return getOrCreateElementRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef() {\n        return getOrCreateTemplateRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef() {\n        return getOrCreateContainerRef(getOrCreateNodeInjector());\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n    }\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getOrCreateNodeInjector());\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @experimental\n     */\n    function injectAttribute(attrNameToInject) {\n        var tNode = getPreviousOrParentTNode();\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     * Or, if it already exists, retrieves the existing instance.\n     *\n     * @returns The ChangeDetectorRef to use\n     */\n    function getOrCreateChangeDetectorRef(di, context) {\n        if (di.changeDetectorRef)\n            return di.changeDetectorRef;\n        var currentNode = di.node;\n        if (isComponent(currentNode.tNode)) {\n            return di.changeDetectorRef = new ViewRef(currentNode.data, context);\n        }\n        else if (currentNode.tNode.type === 3 /* Element */) {\n            return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view[HOST_NODE]);\n        }\n        return null;\n    }\n    /** Gets or creates ChangeDetectorRef for the closest host component */\n    function getOrCreateHostChangeDetector(currentNode) {\n        var hostNode = getClosestComponentAncestor(currentNode);\n        var hostInjector = hostNode.nodeInjector;\n        var existingRef = hostInjector && hostInjector.changeDetectorRef;\n        return existingRef ?\n            existingRef :\n            new ViewRef(hostNode.data, hostNode\n                .view[DIRECTIVES][hostNode.tNode.flags >> 15 /* DirectiveStartingIndexShift */]);\n    }\n    function getOrCreateRenderer2(di) {\n        var renderer = di.node.view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /**\n     * If the node is an embedded view, traverses up the view tree to return the closest\n     * ancestor view that is attached to a component. If it's already a component node,\n     * returns itself.\n     */\n    function getClosestComponentAncestor(node) {\n        while (node.tNode.type === 2 /* View */) {\n            node = node.view[HOST_NODE];\n        }\n        return node;\n    }\n    /**\n     * Returns the value associated to the given token from the injectors.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(nodeInjector, token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBit(token);\n        // If the token has a bloom hash, then it is a directive that is public to the injection system\n        // (diPublic) otherwise fall back to the module injector.\n        if (bloomHash !== null) {\n            var injector = nodeInjector;\n            while (injector) {\n                // Get the closest potential matching injector (upwards in the injector tree) that\n                // *potentially* has the token.\n                injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n                // If no injector is found, we *know* that there is no ancestor injector that contains the\n                // token, so we abort.\n                if (!injector) {\n                    break;\n                }\n                // At this point, we have an injector which *may* contain the token, so we step through the\n                // directives associated with the injector's corresponding node to get the directive instance.\n                var node = injector.node;\n                var nodeFlags = node.tNode.flags;\n                var count = nodeFlags & 4095 /* DirectiveCountMask */;\n                if (count !== 0) {\n                    var start = nodeFlags >> 15 /* DirectiveStartingIndexShift */;\n                    var end = start + count;\n                    var defs = node.view[TVIEW].directives;\n                    for (var i = start; i < end; i++) {\n                        // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                        // and matches the given token, return the directive instance.\n                        var directiveDef = defs[i];\n                        if (directiveDef.type === token && directiveDef.diPublic) {\n                            return node.view[DIRECTIVES][i];\n                        }\n                    }\n                }\n                // If we *didn't* find the directive for the token and we are searching the current node's\n                // injector, it's possible the directive is on this node and hasn't been created yet.\n                var instance = void 0;\n                if (injector === nodeInjector &&\n                    (instance = searchMatchesQueuedForCreation(node, token))) {\n                    return instance;\n                }\n                // The def wasn't found anywhere on this node, so it was a false positive.\n                // If flags permit, traverse up the tree and continue searching.\n                if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                    injector = null;\n                }\n                else {\n                    injector = injector.parent;\n                }\n            }\n        }\n        var moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    function searchMatchesQueuedForCreation(node, token) {\n        var matches = node.view[TVIEW].currentMatches;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                if (def.type === token) {\n                    return resolveDirective(def, i + 1, matches, node.view[TVIEW]);\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBit(token) {\n        var id = token[NG_ELEMENT_ID];\n        return typeof id === 'number' ? id & BLOOM_MASK : null;\n    }\n    /**\n     * Finds the closest injector that might have a certain directive.\n     *\n     * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n     * check and a starting injector, this function traverses up injectors until it finds an\n     * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n     * injector may have that directive. It only *may* have the directive because directives begin\n     * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n     * different directive sharing the bit.\n     *\n     * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n     * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n     * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n     * the directive and do not need to be checked.\n     *\n     * @param injector The starting node injector to check\n     * @param  bloomBit The bit to check in each injector's bloom filter\n     * @param  flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n     * @returns An injector that might have the directive\n     */\n    function bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n        // match.\n        var injector = flags & 4 /* SkipSelf */ ? startInjector.parent : startInjector;\n        while (injector) {\n            // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n            // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n            // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n            var value = void 0;\n            if (b7) {\n                value = b6 ? (b5 ? injector.bf7 : injector.bf6) : (b5 ? injector.bf5 : injector.bf4);\n            }\n            else {\n                value = b6 ? (b5 ? injector.bf3 : injector.bf2) : (b5 ? injector.bf1 : injector.bf0);\n            }\n            // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n            // this injector is a potential match.\n            if (value & mask) {\n                return injector;\n            }\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                return null;\n            }\n            // If the current injector does not have the directive, check the bloom filters for the ancestor\n            // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n            if (b7) {\n                value = b6 ? (b5 ? injector.cbf7 : injector.cbf6) : (b5 ? injector.cbf5 : injector.cbf4);\n            }\n            else {\n                value = b6 ? (b5 ? injector.cbf3 : injector.cbf2) : (b5 ? injector.cbf1 : injector.cbf0);\n            }\n            // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n            // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n            if (value & mask) {\n                injector = injector.parent;\n            }\n            else {\n                return null;\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks whether the current injector and its parent are in the same host view.\n     *\n     * This is necessary to support @Host() decorators. If @Host() is set, we should stop searching once\n     * the injector and its parent view don't match because it means we'd cross the view boundary.\n     */\n    function sameHostView(injector) {\n        return !!injector.parent && injector.parent.node.view === injector.node.view;\n    }\n    var ReadFromInjectorFn = /** @class */ (function () {\n        function ReadFromInjectorFn(read) {\n            this.read = read;\n        }\n        return ReadFromInjectorFn;\n    }());\n    /**\n     * Creates an ElementRef for a given node injector and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @param di The node injector where we should store a created ElementRef\n     * @returns The ElementRef instance to use\n     */\n    function getOrCreateElementRef(di) {\n        return di.elementRef || (di.elementRef = new ElementRef$1(di.node.native));\n    }\n    /** A ref to a node's native element. */\n    var ElementRef$1 = /** @class */ (function (_super) {\n        __extends(ElementRef$$1, _super);\n        function ElementRef$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ElementRef$$1;\n    }(ElementRef));\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function getOrCreateContainerRef(di) {\n        if (!di.viewContainerRef) {\n            var vcRefHost = di.node;\n            var hostTNode = vcRefHost.tNode;\n            ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n            var hostParent = getParentLNode(vcRefHost);\n            var lContainer = createLContainer(hostParent, vcRefHost.view, true);\n            var comment = vcRefHost.view[RENDERER].createComment(ngDevMode ? 'container' : '');\n            var lContainerNode = createLNodeObject(0 /* Container */, vcRefHost.view, vcRefHost.nodeInjector, comment, lContainer);\n            appendChild(hostParent, comment, vcRefHost.view);\n            if (!hostTNode.dynamicContainerNode) {\n                hostTNode.dynamicContainerNode =\n                    createTNode(0 /* Container */, -1, null, null, hostTNode, null);\n            }\n            lContainerNode.tNode = hostTNode.dynamicContainerNode;\n            vcRefHost.dynamicLContainerNode = lContainerNode;\n            addToViewTree(vcRefHost.view, hostTNode.index, lContainer);\n            di.viewContainerRef = new ViewContainerRef$1(lContainerNode, vcRefHost);\n        }\n        return di.viewContainerRef;\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_lInjector) {\n            this._lInjector = _lInjector;\n        }\n        NodeInjector.prototype.get = function (token) {\n            if (token === TemplateRef) {\n                return getOrCreateTemplateRef(this._lInjector);\n            }\n            if (token === ViewContainerRef) {\n                return getOrCreateContainerRef(this._lInjector);\n            }\n            if (token === ElementRef) {\n                return getOrCreateElementRef(this._lInjector);\n            }\n            if (token === ChangeDetectorRef) {\n                return getOrCreateChangeDetectorRef(this._lInjector, null);\n            }\n            if (token === Renderer2) {\n                return getOrCreateRenderer2(this._lInjector);\n            }\n            return getOrCreateInjectable(this._lInjector, token);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * A ref to a container that enables adding and removing views from that container\n     * imperatively.\n     */\n    var ViewContainerRef$1 = /** @class */ (function (_super) {\n        __extends(ViewContainerRef$$1, _super);\n        function ViewContainerRef$$1(_lContainerNode, _hostNode) {\n            var _this = _super.call(this) || this;\n            _this._lContainerNode = _lContainerNode;\n            _this._hostNode = _hostNode;\n            _this._viewRefs = [];\n            return _this;\n        }\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"element\", {\n            get: function () {\n                var injector = getOrCreateNodeInjectorForNode(this._hostNode);\n                return getOrCreateElementRef(injector);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"injector\", {\n            get: function () {\n                var injector = getOrCreateNodeInjectorForNode(this._hostNode);\n                return new NodeInjector(injector);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var parentLInjector = getParentLNode(this._hostNode).nodeInjector;\n                return parentLInjector ? new NodeInjector(parentLInjector) : new NullInjector();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef$$1.prototype.clear = function () {\n            var lContainer = this._lContainerNode.data;\n            while (lContainer[VIEWS].length) {\n                this.remove(0);\n            }\n        };\n        ViewContainerRef$$1.prototype.get = function (index) { return this._viewRefs[index] || null; };\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"length\", {\n            get: function () {\n                var lContainer = this._lContainerNode.data;\n                return lContainer[VIEWS].length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef$$1.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var adjustedIdx = this._adjustIndex(index);\n            var viewRef = templateRef\n                .createEmbeddedView(context || {}, this._lContainerNode, adjustedIdx);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && contextInjector) {\n                ngModuleRef = contextInjector.get(NgModuleRef, null);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef$$1.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var lViewNode = viewRef._lViewNode;\n            var adjustedIdx = this._adjustIndex(index);\n            insertView(this._lContainerNode, lViewNode, adjustedIdx);\n            var views = this._lContainerNode.data[VIEWS];\n            var beforeNode = adjustedIdx + 1 < views.length ?\n                (getChildLNode(views[adjustedIdx + 1][HOST_NODE])).native :\n                this._lContainerNode.native;\n            addRemoveViewFromContainer(this._lContainerNode, lViewNode.data, true, beforeNode);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.move = function (viewRef, newIndex) {\n            var index = this.indexOf(viewRef);\n            this.detach(index);\n            this.insert(viewRef, this._adjustIndex(newIndex));\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n        ViewContainerRef$$1.prototype.remove = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            removeView(this._lContainerNode, adjustedIdx);\n            this._viewRefs.splice(adjustedIdx, 1);\n        };\n        ViewContainerRef$$1.prototype.detach = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            detachView(this._lContainerNode, adjustedIdx);\n            return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n        };\n        ViewContainerRef$$1.prototype._adjustIndex = function (index, shift) {\n            if (shift === void 0) { shift = 0; }\n            if (index == null) {\n                return this._lContainerNode.data[VIEWS].length + shift;\n            }\n            if (ngDevMode) {\n                assertGreaterThan(index, -1, 'index must be positive');\n                // +1 because it's legal to insert at the end.\n                assertLessThan(index, this._lContainerNode.data[VIEWS].length + 1 + shift, 'index');\n            }\n            return index;\n        };\n        return ViewContainerRef$$1;\n    }(ViewContainerRef));\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @param di The node injector where we should store a created TemplateRef\n     * @returns The TemplateRef instance to use\n     */\n    function getOrCreateTemplateRef(di) {\n        if (!di.templateRef) {\n            var hostNode = di.node;\n            var hostTNode = hostNode.tNode;\n            ngDevMode && assertNodeType(hostTNode, 0 /* Container */);\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            di.templateRef = new TemplateRef$1(hostNode.view, getOrCreateElementRef(di), hostTNode.tViews, getRenderer(), hostNode.data[QUERIES]);\n        }\n        return di.templateRef;\n    }\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n    var TemplateRef$1 = /** @class */ (function (_super) {\n        __extends(TemplateRef$$1, _super);\n        function TemplateRef$$1(_declarationParentView, elementRef, _tView, _renderer, _queries) {\n            var _this = _super.call(this) || this;\n            _this._declarationParentView = _declarationParentView;\n            _this.elementRef = elementRef;\n            _this._tView = _tView;\n            _this._renderer = _renderer;\n            _this._queries = _queries;\n            return _this;\n        }\n        TemplateRef$$1.prototype.createEmbeddedView = function (context, containerNode, index) {\n            var viewNode = createEmbeddedViewNode(this._tView, context, this._declarationParentView, this._renderer, this._queries);\n            if (containerNode) {\n                insertView(containerNode, viewNode, index);\n            }\n            renderEmbeddedTemplate(viewNode.data, this._tView, context, 1 /* Create */);\n            var viewRef = new ViewRef(viewNode.data, context);\n            viewRef._lViewNode = viewNode;\n            return viewRef;\n        };\n        return TemplateRef$$1;\n    }(TemplateRef));\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(lNode) {\n        return getOrCreateTemplateRef(getOrCreateNodeInjectorForNode(lNode));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This feature publishes the directive (or component) into the DI system, making it visible to\n     * others for injection.\n     *\n     * @param definition\n     */\n    function PublicFeature(definition) {\n        definition.diPublic = diPublic;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /{\\$([^}]+)}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, templateRoots, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n        var instructions = (new Array(nbTemplates)).fill(undefined);\n        generateMappingInstructions(0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param tmplIndex The order of appearance of the template.\n     * 0 for the root template, following indexes match the order in `templateRoots`.\n     * @param partIndex The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(tmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex) {\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        var currentElements = elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n        var currentExpressions = expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n        instructions[tmplIndex] = tmplInstructions;\n        for (; partIndex < translationParts.length; partIndex++) {\n            // The value can either be text or the name of a placeholder (element/template root/expression)\n            var value = translationParts[partIndex];\n            // Odd indexes are placeholders\n            if (partIndex & 1) {\n                var phIndex = void 0;\n                if (currentElements && currentElements[value] !== undefined) {\n                    phIndex = currentElements[value];\n                    // The placeholder represents a DOM element, add an instruction to move it\n                    var templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n                    if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n                        // This is a template root, it has no closing tag, not treating it as an element\n                        tmplInstructions.push(phIndex | -2147483648 /* TemplateRoot */);\n                    }\n                    else {\n                        tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                        openedTagCount++;\n                    }\n                    phVisited.push(value);\n                }\n                else if (currentExpressions && currentExpressions[value] !== undefined) {\n                    phIndex = currentExpressions[value];\n                    // The placeholder represents an expression, add an instruction to move it\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else {\n                    // It is a closing tag\n                    tmplInstructions.push(-1073741824 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (phIndex !== undefined && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (templateRoots) {\n                    var newTmplIndex = templateRoots.indexOf(value) + 1;\n                    if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n                        partIndex = generateMappingInstructions(newTmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n                    }\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Add instructions to remove elements that are not used in the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        // Add instructions to remove expressions that are not used in the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index.toString(2).length, 28, \"Index \" + index + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                tmplInstructions.push(i | -1610612736 /* Any */);\n            }\n        }\n        return partIndex;\n    }\n    function appendI18nNode(node, parentNode, previousNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = _getViewData();\n        appendChild(parentNode, node.native || null, viewData);\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = node.view[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousNode === parentNode && node.tNode !== parentNode.tNode.child) {\n                node.tNode.next = parentNode.tNode.child;\n                parentNode.tNode.child = node.tNode;\n            }\n            else if (previousNode !== parentNode && node.tNode !== previousNode.tNode.next) {\n                node.tNode.next = previousNode.tNode.next;\n                previousNode.tNode.next = node.tNode;\n            }\n            else {\n                node.tNode.next = null;\n            }\n            if (parentNode.view === node.view)\n                node.tNode.parent = parentNode.tNode;\n        }\n        // Template containers also have a comment node for the `ViewContainerRef` that should be moved\n        if (node.tNode.type === 0 /* Container */ && node.dynamicLContainerNode) {\n            appendChild(parentNode, node.dynamicLContainerNode.native || null, viewData);\n            if (firstTemplatePass) {\n                node.tNode.dynamicContainerNode = node.dynamicLContainerNode.tNode;\n                node.dynamicLContainerNode.tNode.parent = node.tNode;\n            }\n            return node.dynamicLContainerNode;\n        }\n        return node;\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = _getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var localParentNode = getParentLNode(load(startIndex)) || getPreviousOrParentNode();\n        var localPreviousNode = localParentNode;\n        resetComponentState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var element$$1 = load(instruction & 536870911 /* IndexMask */);\n                    localPreviousNode = appendI18nNode(element$$1, localParentNode, localPreviousNode);\n                    localParentNode = element$$1;\n                    break;\n                case 1610612736 /* Expression */:\n                case -2147483648 /* TemplateRoot */:\n                case -1610612736 /* Any */:\n                    var node = load(instruction & 536870911 /* IndexMask */);\n                    localPreviousNode = appendI18nNode(node, localParentNode, localPreviousNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createLNode takes a raw index (not adjusted by header offset).\n                    adjustBlueprintForNewNode(viewData);\n                    var lastNodeIndex = viewData.length - 1;\n                    var textLNode = createLNode(lastNodeIndex - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                    localPreviousNode = appendI18nNode(textLNode, localParentNode, localPreviousNode);\n                    resetComponentState();\n                    break;\n                case -1073741824 /* CloseNode */:\n                    localPreviousNode = localParentNode;\n                    localParentNode = getParentLNode(localParentNode);\n                    break;\n                case -536870912 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var index = instruction & 536870911 /* IndexMask */;\n                    var removedNode = load(index);\n                    var parentNode = getParentLNode(removedNode);\n                    removeChild(parentNode, removedNode.native || null, viewData);\n                    // For template containers we also need to remove their `ViewContainerRef` from the DOM\n                    if (removedNode.tNode.type === 0 /* Container */ && removedNode.dynamicLContainerNode) {\n                        removeChild(parentNode, removedNode.dynamicLContainerNode.native || null, viewData);\n                        removedNode.dynamicLContainerNode.tNode.detached = true;\n                        removedNode.dynamicLContainerNode.data[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of an expression has changed and replaces it by its value in a translation,\n     * or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation1(instructions, v0) {\n        var different = bindingUpdated(_getViewData()[BINDING_INDEX]++, v0);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                res += stringify$1(v0);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation2(instructions, v0, v1) {\n        var viewData = _getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b1 ? v1 : v0;\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation3(instructions, v0, v1, v2) {\n        var viewData = _getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? v2 : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation4(instructions, v0, v1, v2, v3) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation5(instructions, v0, v1, v2, v3, v4) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */ function i18nInterpolation6(instructions, v0, v1, v2, v3, v4, v5) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation7(instructions, v0, v1, v2, v3, v4, v5, v6) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     * @param v7 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation8(instructions, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var viewData = _getViewData();\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$2 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @experimental\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = injectableDefRecord(token);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$2) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$2;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefRecord(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return makeRecord(function () { return new token(); });\n        }\n        return makeRecord(injectableDef.factory);\n    }\n    function providerToRecord(provider) {\n        var token = resolveForwardRef(provider);\n        var value = NOT_YET;\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefRecord(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                value = provider.useValue;\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefRecord(classRef_1);\n                }\n            }\n        }\n        return makeRecord(factory, value);\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |--------consts--------|----------------vars----------------|------ hostVars (dir1) ------|\n     * ---------------------------------------------------------------------------------------------\n     * | nodes / refs / pipes | bindings | pure function bindings  | host bindings  | host slots |\n     * ---------------------------------------------------------------------------------------------\n     *                        ^                                    ^\n     *             TView.bindingStartIndex            TView.hostBindingStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the hostBindingStartIndex +\n     * any hostVars in directives evaluated before it.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return getCreationMode() ?\n            updateBinding(bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(bindingIndex, exp) ?\n            updateBinding(bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated2(bindingIndex, exp1, exp2) ?\n            updateBinding(bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated3(bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(bindingIndex + 4, exp5) || different ?\n            updateBinding(bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (node) {\n            add(this.deep, node);\n            if (isContentQueryHost(node.tNode)) {\n                add(this.shallow, node);\n                if (node.tNode.parent && isContentQueryHost(node.tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, node);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(node.tNode) && add(this.shallow, node);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param node Node on which directives are present.\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(node, type) {\n        var defs = node.view[TVIEW].directives;\n        var flags = node.tNode.flags;\n        var count = flags & 4095 /* DirectiveCountMask */;\n        var start = flags >> 15 /* DirectiveStartingIndexShift */;\n        var end = start + count;\n        for (var i = start; i < end; i++) {\n            var def = defs[i];\n            if (def.type === type && def.diPublic) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n        if (read instanceof ReadFromInjectorFn) {\n            return read.read(nodeInjector, node, directiveIdx);\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(node, read);\n            if (matchingIdx !== null) {\n                return node.view[DIRECTIVES][matchingIdx];\n            }\n        }\n        return null;\n    }\n    function add(query, node) {\n        var nodeInjector = getOrCreateNodeInjectorForNode(node);\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var directiveIdx = getIdxOfMatchingDirective(node, type);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // if read token and / or strategy is not specified, use type as read token\n                    var result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(node.tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        // a node is matching a predicate - determine what to read\n                        // note that queries using name selector must specify read strategy\n                        ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n                        var result = readFromNodeInjector(nodeInjector, node, predicate.read, directiveIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     *\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts`s have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ÉµdefineBase': defineBase,\n        'ÉµdefineComponent': defineComponent,\n        'ÉµdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ÉµdefineNgModule': defineNgModule,\n        'ÉµdefinePipe': definePipe,\n        'ÉµdirectiveInject': directiveInject,\n        'ÉµgetFactoryOf': getFactoryOf,\n        'ÉµgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ÉµinjectAttribute': injectAttribute,\n        'ÉµinjectChangeDetectorRef': injectChangeDetectorRef,\n        'ÉµinjectElementRef': injectElementRef,\n        'ÉµinjectTemplateRef': injectTemplateRef,\n        'ÉµinjectViewContainerRef': injectViewContainerRef,\n        'ÉµtemplateRefExtractor': templateRefExtractor,\n        'ÉµinjectRenderer2': injectRenderer2,\n        'ÉµNgOnChangesFeature': NgOnChangesFeature,\n        'ÉµPublicFeature': PublicFeature,\n        'ÉµInheritDefinitionFeature': InheritDefinitionFeature,\n        'ÉµelementAttribute': elementAttribute,\n        'Éµbind': bind,\n        'Éµcontainer': container,\n        'ÉµnextContext': nextContext,\n        'ÉµcontainerRefreshStart': containerRefreshStart,\n        'ÉµcontainerRefreshEnd': containerRefreshEnd,\n        'ÉµloadDirective': loadDirective,\n        'ÉµloadQueryList': loadQueryList,\n        'ÉµnamespaceHTML': namespaceHTML,\n        'ÉµnamespaceMathML': namespaceMathML,\n        'ÉµnamespaceSVG': namespaceSVG,\n        'ÉµelementStart': elementStart,\n        'ÉµelementEnd': elementEnd,\n        'Éµelement': element,\n        'ÉµEC': elementContainerStart,\n        'ÉµeC': elementContainerEnd,\n        'ÉµpureFunction0': pureFunction0,\n        'ÉµpureFunction1': pureFunction1,\n        'ÉµpureFunction2': pureFunction2,\n        'ÉµpureFunction3': pureFunction3,\n        'ÉµpureFunction4': pureFunction4,\n        'ÉµpureFunction5': pureFunction5,\n        'ÉµpureFunction6': pureFunction6,\n        'ÉµpureFunction7': pureFunction7,\n        'ÉµpureFunction8': pureFunction8,\n        'ÉµpureFunctionV': pureFunctionV,\n        'ÉµgetCurrentView': getCurrentView,\n        'ÉµrestoreView': restoreView,\n        'Éµinterpolation1': interpolation1,\n        'Éµinterpolation2': interpolation2,\n        'Éµinterpolation3': interpolation3,\n        'Éµinterpolation4': interpolation4,\n        'Éµinterpolation5': interpolation5,\n        'Éµinterpolation6': interpolation6,\n        'Éµinterpolation7': interpolation7,\n        'Éµinterpolation8': interpolation8,\n        'ÉµinterpolationV': interpolationV,\n        'ÉµelementClassProp': elementClassProp,\n        'Éµlistener': listener,\n        'Éµload': load,\n        'Éµprojection': projection,\n        'ÉµelementProperty': elementProperty,\n        'ÉµpipeBind1': pipeBind1,\n        'ÉµpipeBind2': pipeBind1,\n        'ÉµpipeBind3': pipeBind3,\n        'ÉµpipeBind4': pipeBind4,\n        'ÉµpipeBindV': pipeBindV,\n        'ÉµprojectionDef': projectionDef,\n        'Éµpipe': pipe,\n        'Éµquery': query,\n        'ÉµqueryRefresh': queryRefresh,\n        'ÉµregisterContentQuery': registerContentQuery,\n        'Éµreference': reference,\n        'ÉµelementStyling': elementStyling,\n        'ÉµelementStylingMap': elementStylingMap,\n        'ÉµelementStylingProp': elementStyleProp,\n        'ÉµelementStylingApply': elementStylingApply,\n        'Éµtemplate': template,\n        'Éµtext': text,\n        'ÉµtextBinding': textBinding,\n        'ÉµembeddedViewStart': embeddedViewStart,\n        'ÉµembeddedViewEnd': embeddedViewEnd,\n        'ÉµsanitizeHtml': sanitizeHtml,\n        'ÉµsanitizeStyle': sanitizeStyle,\n        'ÉµdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ÉµsanitizeResourceUrl': sanitizeResourceUrl,\n        'ÉµsanitizeScript': sanitizeScript,\n        'ÉµsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     *\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        return deps.map(function (dep) { return reflectDependency(dep); });\n    }\n    function reflectDependency(dep) {\n        var meta = {\n            token: new compiler.LiteralExpr(null),\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            if (token === ElementRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ElementRef;\n            }\n            else if (token === Injector) {\n                meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n            }\n            else if (token === TemplateRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.TemplateRef;\n            }\n            else if (token === ViewContainerRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ViewContainerRef;\n            }\n            else {\n                meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            }\n            meta.token = new compiler.WrappedNodeExpr(token);\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = new compiler.WrappedNodeExpr(param.token);\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = new compiler.LiteralExpr(param.attributeName);\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        compileNgModuleDefs(moduleType, ngModule);\n        setScopeOnDeclaredComponents(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            get: function () {\n                if (ngModuleDef === null) {\n                    var meta = {\n                        type: wrap(moduleType),\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2).map(wrapReference),\n                        declarations: declarations.map(wrapReference),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        emitInline: true,\n                    };\n                    var res = compiler.compileNgModule(meta);\n                    ngModuleDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", []);\n                }\n                return ngModuleDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: wrap(moduleType),\n                        deps: reflectDependencies(moduleType),\n                        providers: new compiler.WrappedNodeExpr(ngModule.providers || EMPTY_ARRAY$2),\n                        imports: new compiler.WrappedNodeExpr([\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ]),\n                    };\n                    var res = compiler.compileInjector(meta);\n                    ngInjectorDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", res.statements);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getNgModuleDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function wrap(value) {\n        return new compiler.WrappedNodeExpr(value);\n    }\n    function wrapReference(value) {\n        var wrapped = wrap(value);\n        return { value: wrapped, type: wrapped };\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    // The ConstantPool is a requirement of the JIT'er.\n                    var constantPool = new compiler.ConstantPool();\n                    // Parse the template and check for errors.\n                    var template = compiler.parseTemplate(metadata.template, \"ng://\" + stringify(type) + \"/template.html\", {\n                        preserveWhitespaces: metadata.preserveWhitespaces || false,\n                    }, '');\n                    if (template.errors !== undefined) {\n                        var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                        throw new Error(\"Errors during JIT compilation of template for \" + stringify(type) + \": \" + errors);\n                    }\n                    // Compile the component metadata, including template, into an expression.\n                    // TODO(alxhub): implement inputs, outputs, queries, etc.\n                    var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [], wrapDirectivesInClosure: false, styles: metadata.styles || [], encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, animations: metadata.animations || null }), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngComponentDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", preStatements);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var constantPool = new compiler.ConstantPool();\n                    var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                    var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngDirectiveDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, preStatements);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        var host = extractHostBindings(metadata, propMetadata);\n        var inputsFromMetadata = parseInputOutputs(metadata.inputs || []);\n        var outputsFromMetadata = parseInputOutputs(metadata.outputs || []);\n        var inputsFromType = {};\n        var outputsFromType = {};\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isInput(ann)) {\n                        inputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                    else if (isOutput(ann)) {\n                        outputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return {\n            name: type.name,\n            type: new compiler.WrappedNodeExpr(type),\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type), host: host,\n            inputs: __assign({}, inputsFromMetadata, inputsFromType),\n            outputs: __assign({}, outputsFromMetadata, outputsFromType),\n            queries: [],\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n        };\n    }\n    function extractHostBindings(metadata, propMetadata) {\n        // First parse the declarations from the metadata.\n        var _a = compiler.parseHostBindings(metadata.host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n        if (Object.keys(animations).length > 0) {\n            throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n        }\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isHostBinding(ann)) {\n                        properties[ann.hostPropertyName || field] = field;\n                    }\n                    else if (isHostListener(ann)) {\n                        listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                    }\n                });\n            }\n        };\n        // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return { attributes: attributes, listeners: listeners, properties: properties };\n    }\n    function isInput(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function isOutput(value) {\n        return value.ngMetadataName === 'Output';\n    }\n    function isHostBinding(value) {\n        return value.ngMetadataName === 'HostBinding';\n    }\n    function isHostListener(value) {\n        return value.ngMetadataName === 'HostListener';\n    }\n    function parseInputOutputs(values) {\n        return values.reduce(function (map, value) {\n            var _a = __read(value.split(',').map(function (piece) { return piece.trim(); }), 2), field = _a[0], property = _a[1];\n            map[field] = property || field;\n            return map;\n        }, {});\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Check whether the injectable metadata includes a provider specification.\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var ctorDeps = reflectDependencies(type);\n                    var userDeps = undefined;\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        userDeps = convertDependencies(meta.deps);\n                    }\n                    // Decide which flavor of factory to generate, based on the provider specified.\n                    // Only one of the use* fields should be set.\n                    var useClass = undefined;\n                    var useFactory = undefined;\n                    var useValue = undefined;\n                    var useExisting = undefined;\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        useClass = new compiler.WrappedNodeExpr(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    var _a = compiler.compileInjectable({\n                        name: type.name,\n                        type: new compiler.WrappedNodeExpr(type),\n                        providedIn: computeProvidedIn(meta.providedIn),\n                        useClass: useClass,\n                        useFactory: useFactory,\n                        useValue: useValue,\n                        useExisting: useExisting,\n                        ctorDeps: ctorDeps,\n                        userDeps: userDeps,\n                    }), expression = _a.expression, statements = _a.statements;\n                    def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", statements);\n                }\n                return def;\n            },\n        });\n    }\n    function computeProvidedIn(providedIn) {\n        if (providedIn == null || typeof providedIn === 'string') {\n            return new compiler.LiteralExpr(providedIn);\n        }\n        else {\n            return new compiler.WrappedNodeExpr(providedIn);\n        }\n    }\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var sourceMapUrl = \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\";\n                    var name_1 = type.name;\n                    var res = compiler.compilePipeFromMetadata({\n                        name: name_1,\n                        type: new compiler.WrappedNodeExpr(type),\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true,\n                    });\n                    ngPipeDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, res.statements);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ivyEnabled = true;\n    var R3_COMPILE_COMPONENT = compileComponent;\n    var R3_COMPILE_DIRECTIVE = compileDirective;\n    var R3_COMPILE_INJECTABLE = compileInjectable;\n    var R3_COMPILE_NGMODULE = compileNgModule;\n    var R3_COMPILE_PIPE = compilePipe;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return R3_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return R3_COMPILE_COMPONENT(type, meta); });\n    /**\n     *\n     *\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return R3_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     *\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     *\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return R3_COMPILE_NGMODULE(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     *\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    var VERSION = new Version('7.0.0-beta.5+32.sha-47f4412');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Injectable decorator and metadata.\n    *\n    * @Annotation\n    */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return R3_COMPILE_INJECTABLE(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @deprecated No replacement\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @experimental\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_NGCC__;\n    function compileNgModuleFactory__PRE_NGCC__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler$$1 = compilerFactory.createCompiler([options]);\n        return compiler$$1.compileModuleAsync(moduleType);\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @experimental\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular View.\n     *\n     * <!-- TODO: move the next two paragraphs to the dev guide -->\n     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n     * Elements which are created and destroyed together.\n     *\n     * Properties of elements in a View can change, but the structure (number and order) of elements in\n     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n     * removing nested Views via a `ViewContainerRef`. Each View can contain many View Containers.\n     * <!-- /TODO -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * Given this template...\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * We have two `TemplateRef`s:\n     *\n     * Outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * Inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * Notice that the original template is broken down into two separate `TemplateRef`s.\n     *\n     * The outer/inner `TemplateRef`s are then assembled into views like so:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this.nativeNode = nativeNode;\n            this._debugContext = _debugContext;\n            this.listeners = [];\n            this.parent = null;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * This module includes the providers of @angular/core that are needed\n     * to bootstrap components via `ApplicationRef`.\n     *\n     * @experimental\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        Object.defineProperty(DebugRenderer2.prototype, \"debugContext\", {\n            get: function () { return this.debugContextFactory(); },\n            enumerable: true,\n            configurable: true\n        });\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n     *\n     * The created DebugRenderer know how to create a Debug Context specific to IVY.\n     */\n    var Render3DebugRendererFactory2 = /** @class */ (function (_super) {\n        __extends(Render3DebugRendererFactory2, _super);\n        function Render3DebugRendererFactory2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Render3DebugRendererFactory2.prototype.createRenderer = function (element$$1, renderData) {\n            var renderer = _super.prototype.createRenderer.call(this, element$$1, renderData);\n            renderer.debugContextFactory = function () { return new Render3DebugContext(_getViewData()); };\n            return renderer;\n        };\n        return Render3DebugRendererFactory2;\n    }(DebugRendererFactory2));\n    /**\n     * Stores context information about view nodes.\n     *\n     * Used in tests to retrieve information those nodes.\n     */\n    var Render3DebugContext = /** @class */ (function () {\n        function Render3DebugContext(viewData) {\n            this.viewData = viewData;\n            // The LNode will be created next and appended to viewData\n            this.nodeIndex = viewData ? viewData.length : null;\n        }\n        Object.defineProperty(Render3DebugContext.prototype, \"view\", {\n            get: function () { return this.viewData; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"injector\", {\n            get: function () {\n                if (this.nodeIndex !== null) {\n                    var lElementNode = this.view[this.nodeIndex];\n                    var nodeInjector = lElementNode.nodeInjector;\n                    if (nodeInjector) {\n                        return new NodeInjector(nodeInjector);\n                    }\n                }\n                return Injector.NULL;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"component\", {\n            get: function () {\n                // TODO(vicb): why/when\n                if (this.nodeIndex === null) {\n                    return null;\n                }\n                var tView = this.view[TVIEW];\n                var components = tView.components;\n                return (components && components.indexOf(this.nodeIndex) == -1) ?\n                    null :\n                    this.view[this.nodeIndex].data[CONTEXT];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"providerTokens\", {\n            // TODO(vicb): add view providers when supported\n            get: function () {\n                var matchedDirectives = [];\n                // TODO(vicb): why/when\n                if (this.nodeIndex === null) {\n                    return matchedDirectives;\n                }\n                var directives = this.view[DIRECTIVES];\n                if (directives) {\n                    var currentNode = this.view[this.nodeIndex];\n                    for (var dirIndex = 0; dirIndex < directives.length; dirIndex++) {\n                        var directive = directives[dirIndex];\n                        if (getLElementNode(directive) === currentNode) {\n                            matchedDirectives.push(directive.constructor);\n                        }\n                    }\n                }\n                return matchedDirectives;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"references\", {\n            get: function () {\n                // TODO(vicb): implement retrieving references\n                throw new Error('Not implemented yet in ivy');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"context\", {\n            get: function () {\n                if (this.nodeIndex === null) {\n                    return null;\n                }\n                var lNode = this.view[this.nodeIndex];\n                return lNode.view[CONTEXT];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"componentRenderElement\", {\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"renderNode\", {\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(vicb): check previous implementation\n        Render3DebugContext.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            console.error.apply(console, __spread(values));\n        };\n        return Render3DebugContext;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3_COMPILE_COMPONENT__POST_NGCC__ = R3_COMPILE_COMPONENT;\n    var R3_COMPILE_DIRECTIVE__POST_NGCC__ = R3_COMPILE_DIRECTIVE;\n    var R3_COMPILE_INJECTABLE__POST_NGCC__ = R3_COMPILE_INJECTABLE;\n    var R3_COMPILE_NGMODULE__POST_NGCC__ = R3_COMPILE_NGMODULE;\n    var R3_COMPILE_PIPE__POST_NGCC__ = R3_COMPILE_PIPE;\n    var ivyEnable__POST_NGCC__ = ivyEnabled;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ÉµNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.ÉµgetInjectableDef = getInjectableDef;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµresolveComponentResources = resolveComponentResources;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineBase = defineBase;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdefineNgModule = defineNgModule;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµRender3ComponentFactory = ComponentFactory$1;\n    exports.ÉµRender3ComponentRef = ComponentRef$1;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectElementRef = injectElementRef;\n    exports.ÉµinjectTemplateRef = injectTemplateRef;\n    exports.ÉµinjectViewContainerRef = injectViewContainerRef;\n    exports.ÉµinjectChangeDetectorRef = injectChangeDetectorRef;\n    exports.ÉµinjectRenderer2 = injectRenderer2;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµgetFactoryOf = getFactoryOf;\n    exports.ÉµgetInheritedFactory = getInheritedFactory;\n    exports.ÉµtemplateRefExtractor = templateRefExtractor;\n    exports.ÉµPublicFeature = PublicFeature;\n    exports.ÉµInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµRender3NgModuleRef = NgModuleRef$1;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNgModuleFactory = NgModuleFactory$1;\n    exports.ÉµNO_CHANGE = NO_CHANGE;\n    exports.Éµcontainer = container;\n    exports.ÉµnextContext = nextContext;\n    exports.ÉµelementStart = elementStart;\n    exports.ÉµnamespaceHTML = namespaceHTML;\n    exports.ÉµnamespaceMathML = namespaceMathML;\n    exports.ÉµnamespaceSVG = namespaceSVG;\n    exports.Éµelement = element;\n    exports.Éµlistener = listener;\n    exports.Éµtext = text;\n    exports.ÉµembeddedViewStart = embeddedViewStart;\n    exports.Éµquery = query;\n    exports.ÉµregisterContentQuery = registerContentQuery;\n    exports.ÉµloadDirective = loadDirective;\n    exports.Éµprojection = projection;\n    exports.Éµbind = bind;\n    exports.Éµinterpolation1 = interpolation1;\n    exports.Éµinterpolation2 = interpolation2;\n    exports.Éµinterpolation3 = interpolation3;\n    exports.Éµinterpolation4 = interpolation4;\n    exports.Éµinterpolation5 = interpolation5;\n    exports.Éµinterpolation6 = interpolation6;\n    exports.Éµinterpolation7 = interpolation7;\n    exports.Éµinterpolation8 = interpolation8;\n    exports.ÉµinterpolationV = interpolationV;\n    exports.ÉµpipeBind1 = pipeBind1;\n    exports.ÉµpipeBind2 = pipeBind2;\n    exports.ÉµpipeBind3 = pipeBind3;\n    exports.ÉµpipeBind4 = pipeBind4;\n    exports.ÉµpipeBindV = pipeBindV;\n    exports.ÉµpureFunction0 = pureFunction0;\n    exports.ÉµpureFunction1 = pureFunction1;\n    exports.ÉµpureFunction2 = pureFunction2;\n    exports.ÉµpureFunction3 = pureFunction3;\n    exports.ÉµpureFunction4 = pureFunction4;\n    exports.ÉµpureFunction5 = pureFunction5;\n    exports.ÉµpureFunction6 = pureFunction6;\n    exports.ÉµpureFunction7 = pureFunction7;\n    exports.ÉµpureFunction8 = pureFunction8;\n    exports.ÉµpureFunctionV = pureFunctionV;\n    exports.ÉµgetCurrentView = getCurrentView;\n    exports.ÉµrestoreView = restoreView;\n    exports.ÉµcontainerRefreshStart = containerRefreshStart;\n    exports.ÉµcontainerRefreshEnd = containerRefreshEnd;\n    exports.ÉµqueryRefresh = queryRefresh;\n    exports.ÉµloadQueryList = loadQueryList;\n    exports.ÉµelementEnd = elementEnd;\n    exports.ÉµelementProperty = elementProperty;\n    exports.ÉµprojectionDef = projectionDef;\n    exports.Éµreference = reference;\n    exports.ÉµelementAttribute = elementAttribute;\n    exports.ÉµelementStyling = elementStyling;\n    exports.ÉµelementStylingMap = elementStylingMap;\n    exports.ÉµelementStylingProp = elementStyleProp;\n    exports.ÉµelementStylingApply = elementStylingApply;\n    exports.ÉµelementClassProp = elementClassProp;\n    exports.ÉµtextBinding = textBinding;\n    exports.Éµtemplate = template;\n    exports.ÉµembeddedViewEnd = embeddedViewEnd;\n    exports.Éµstore = store;\n    exports.Éµload = load;\n    exports.Éµpipe = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.Éµi18nApply = i18nApply;\n    exports.Éµi18nExpMapping = i18nExpMapping;\n    exports.Éµi18nInterpolation1 = i18nInterpolation1;\n    exports.Éµi18nInterpolation2 = i18nInterpolation2;\n    exports.Éµi18nInterpolation3 = i18nInterpolation3;\n    exports.Éµi18nInterpolation4 = i18nInterpolation4;\n    exports.Éµi18nInterpolation5 = i18nInterpolation5;\n    exports.Éµi18nInterpolation6 = i18nInterpolation6;\n    exports.Éµi18nInterpolation7 = i18nInterpolation7;\n    exports.Éµi18nInterpolation8 = i18nInterpolation8;\n    exports.Éµi18nInterpolationV = i18nInterpolationV;\n    exports.Éµi18nMapping = i18nMapping;\n    exports.ÉµWRAP_RENDERER_FACTORY2 = WRAP_RENDERER_FACTORY2;\n    exports.ÉµRender3DebugRendererFactory2 = Render3DebugRendererFactory2;\n    exports.ÉµcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ÉµpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ÉµcompileComponent = compileComponent;\n    exports.ÉµcompileDirective = compileDirective;\n    exports.ÉµcompilePipe = compilePipe;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµgetContext = getContext;\n    exports.ÉµR3_COMPILE_COMPONENT__POST_NGCC__ = R3_COMPILE_COMPONENT__POST_NGCC__;\n    exports.ÉµR3_COMPILE_DIRECTIVE__POST_NGCC__ = R3_COMPILE_DIRECTIVE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_INJECTABLE__POST_NGCC__ = R3_COMPILE_INJECTABLE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_NGMODULE__POST_NGCC__ = R3_COMPILE_NGMODULE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_PIPE__POST_NGCC__ = R3_COMPILE_PIPE__POST_NGCC__;\n    exports.ÉµivyEnable__POST_NGCC__ = ivyEnable__POST_NGCC__;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}