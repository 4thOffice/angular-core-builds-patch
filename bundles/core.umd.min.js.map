{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","compiler","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","InjectionToken","_desc","ngMetadataName","ngInjectableDef","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","type","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Error","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","GET_PROPERTY_NAME","USE_VALUE","getClosureSafeProperty","objWithPropertyToExtract","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","source","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","HEADER_OFFSET","TVIEW","PARENT","NEXT","QUERIES","FLAGS","HOST_NODE","BINDING_INDEX","DIRECTIVES","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","queueInitHooks","onInit","doCheck","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","def","directives","queueContentHooks","queueViewHooks","queueDestroyHooks","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","onDestroy","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","arr","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","stringify$1","loadInternal","readElementValue","MONKEY_PATCH_KEY_NAME","getContext","mpValue","readPatchedData","lViewData","lNodeIndex","directiveIndices","isComponentInstance","findViaComponent","isDirectiveInstance","instance","ngDirectiveDef","findViaDirective","directiveInstance","directivesAcrossView","directiveIndex","tNode","firstChild","lNode","getLNodeFromViewData","directiveIndexStart","getDirectiveStartIndex","directiveIndexEnd","getDirectiveEndIndex","traverseNextElement","discoverDirectiveIndices","discoverDirectives","directiveInstances","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","getLElementFromComponent","componentInstance","expectedLNodeIndex","ngComponentDef","child","componentIndices","components","elementComponentIndex","lElementIndex","startIndex","count","throwMultipleComponentError","tagName","RendererStyleFlags3","ACTIVE_INDEX","VIEWS","RENDER_PARENT","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getChildLNode","node","view","getParentLNode","containerHostIndex","dynamicLContainerNode","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParentNode","beforeNode","rootTNode","projectionNodeIndex","nextTNode","elementNode","executeNodeAction","lContainerNode","childContainerData","componentHost","findComponentHost","head","projection","viewRootLNode","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","container","insertMode","insertView","viewNode","views","lView","splice","detachView","removeIndex","detached","removedLView","removeView","destroyLView","getLViewChild","viewData","childIndex","hostNode","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","id","destroy","canInsertNativeChildOfElement","canInsertNativeChildOfView","grandParentContainer","canInsertNativeNode","grandParent","nativeInsertBefore","appendChild","renderParent","getRenderParent","appendProjectedNode","currentParent","parentView","lContainer","ngContainerChild","parentView_1","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","selectors","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","isClassBased_5","valueExists","setDirty","setContextDirty","setStyle","prop","sanitizer","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","setFlag","getProp","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","rendererFactory","elementDepthCount","previousOrParentTNode","isParent","currentQueries","_CLEAN_PROMISE","HEADER_FILLER","fill","CIRCULAR$1","getRenderer","getRendererFactory","getCurrentSanitizer","getCurrentView","restoreView","viewToRestore","contextViewData","getPreviousOrParentNode","_getViewData","getCleanup","getTViewCleanup","checkNoChangesMode","bindingRootIndex","getBindingRoot","enterView","newView","hostTNode","oldView","bindingStartIndex","leaveView","creationOnly","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","lViewNode","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","contentQueries","directiveDefIdx","contentQueriesRefresh","setHostBindings","hostBindings","refreshChildComponents","componentRefresh","bindings","hostBindingStartIndex","defs","dirIndex","hostVars","executeInitAndContentHooks","createLViewData","blueprint","createLNodeObject","nodeInjector","createLNode","parentInSameView","tParent","isState","createTNode","tData","dynamicContainerNode","parentLNode","adjustBlueprintForNewNode","resetComponentState","rf","_isParent","_previousOrParentTNode","template","tickRootContext","namespaceHTML","nextContext","level","walkUpViews","nestingLevel","renderComponentOrTemplate","hostView","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","element","localRefs","elementStart","elementEnd","elementCreate","setUpAttributes","createDirectivesAndLocals","overriddenRenderer","rendererToUse","createElement","createElementNS","nativeNodeLocalRefExtractor","localRefExtractor","cacheMatchingDirectivesForNode","exportsMap","","matches","currentMatches","findDirectiveMatches","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","instantiateDirectivesDirectly","isContentQueryHost","clone","tDirectives","directiveCreate","saveResolvedLocalsInData","localIndex","registry","directiveRegistry","diPublic","throwCyclicDependencyError","queueComponentIndexForCheck","queueHostBindingForCheck","NO_CHANGE","initChangeDetectorIfExisting","changeDetectorRef","_setComponentContext","exportAs","getOrCreateTView","consts","vars","pipes","viewQuery","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","tag","rNode","directiveDefs","pipeDefs","onPush","listener","eventName","listenerFn","useCapture","wrappedListener","wrapListenerWithDirtyLogic","markViewDirty","listen","storeCleanupFn","wrapListenerWithDirtyAndDefault","wrapListenerIn_markViewDirty","preventDefault","returnValue","addEventListener","cleanupInstances","outputs","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","elementAttribute","element_1","loadElement","removeAttribute","strValue","elementProperty","inputs","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","tViews","initialInputs","stylingTemplate","tNodeFlags","direction","propStore","isInput","directiveDef","propertyAliasMap","publicName","internalName","elementClassProp","stylingIndex","updateClassProp","addOrRemove","getStylingContext","elementStyling","classDeclarations","styleDeclarations","styleSanitizer","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","initialStylingValues","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","elementStylingApply","stylingContext","load","allocStylingContext","lElement","templateStyleContext","renderStyling","styleStore","classStore","isContextDirty","multiStartIndex","isClassBased_6","valueToApply","elementStyleProp","styleIndex","suffix","valueToAdd","elementStylingMap","classes","styles","updateStylingMap","applyAllClasses","ignoreAllClassUpdates","cachedClassString","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","isClassBased_3","isClassBased_4","textNode","textBinding","existingNode","textContent","directive","baseDirectiveCreate","addComponentLogic","componentView","addToViewTree","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","attributes","createLContainer","isForViewContainerRef","containerInternal","previousNode","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","containerNode","startIdx","viewAtPositionId","embeddedView","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","nodeIndex","selectorIndex","nodeToProject","projectedView","currentComponentHost","firstProjectedNode","grandparent","adjustedHostIndex","scheduleTick","rootContext","res_1","clean","scheduler","rootComponent","getRootView","_getComponentHostLElementNode","detectChanges","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","bindingUpdated","interpolationV","different","content","interpolation1","prefix","v0","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","bindingUpdated3","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","loadDirective","loadQueryList","queryListIdx","loadElementInternal","getBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","oldValue","msg","updateBinding","exp1","exp2","exp3","exp4","getTView","registerContentQuery","queryList","savedContentQueriesLength","currentDirectiveIndex","tViewContentQueries","isRootComponent","getLElementFromRootComponent","CLEAN_PROMISE","createRootContext","EMPTY$1","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","pipeTypes","directiveTypes","declaredInputs","encapsulation","Emulated","animations","invertObject","ngOnInit","ngDoCheck","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","ngOnDestroy","changeDetection","OnPush","extractDirectiveDef","extractPipeDef","features","viewProviders","feature","ngPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","declaredName","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getClosureSafeProperty$1","fillProperties","isComponentDef","definition","InheritDefinitionFeature","superType","getSuperType","getPrototypeOf","_loop_1","e_1","superDef","baseDef","ngBaseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","elementIndex","prevViewQuery_1","superViewQuery_1","ctx","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","setter_1","simpleChanges","writable","currentChange","configurable","onChangesWrapper","delegateHook","ngOnChanges","RendererStyleFlags2","ChangeDetectorRef","ElementRef","nativeElement","NgModuleRef","NgModuleFactory","TemplateRef","ViewContainerRef","RenderComponentType","slotCount","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngModule","_this","ngContentSelectors","projectableNodes","rootSelectorOrNode","ViewRef","_view","_appRef","_viewContainerRef","_lViewNode","enumerable","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","checkNoChangesInRootView","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","setTimeout","WRAP_RENDERER_FACTORY2","ComponentFactory$$1","componentDef","isInternalRootView","wrapper","componentTag","LifecycleHooksFeature","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","destroyCbs","location","NG_ELEMENT_ID","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","parentInjector","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","templateRef","viewContainerRef","elementRef","diPublicInInjector","di","bloomAdd","bloomBit","mask","b6","b5","directiveInject","getOrCreateInjectable","injectElementRef","getOrCreateElementRef","injectTemplateRef","getOrCreateTemplateRef","injectViewContainerRef","getOrCreateContainerRef","injectChangeDetectorRef","getOrCreateChangeDetectorRef","injectRenderer2","getOrCreateRenderer2","injectAttribute","attrNameToInject","getPreviousOrParentTNode","currentNode","isComponent","getOrCreateHostChangeDetector","getClosestComponentAncestor","hostInjector","bloomHash","bloomHashBit","bloomFindPossibleInjector","nodeFlags","searchMatchesQueuedForCreation","sameHostView","formerInjector","startInjector","b7","ReadFromInjectorFn","read","ElementRef$1","ElementRef$$1","vcRefHost","hostParent","ViewContainerRef$1","NodeInjector","_lInjector","ViewContainerRef$$1","_lContainerNode","_hostNode","_viewRefs","parentLInjector","clear","createEmbeddedView","adjustedIdx","_adjustIndex","viewRef","createComponent","componentFactory","ngModuleRef","contextInjector","insert","destroyed","move","newIndex","shift","TemplateRef$1","getFactoryOf","ngInjectorDef","getInheritedFactory","TemplateRef$$1","_declarationParentView","_tView","_renderer","_queries","createEmbeddedViewNode","declarationView","queries","templateRefExtractor","PublicFeature","i18nTagRegex","appendI18nNode","APP_ROOT","NOT_YET","CIRCULAR$2","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","imported","delete","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","existing","multiRecord_1","hasOnDestroy","input","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","_bootstrapComponents","ngModuleDef","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef","pipeInstance","pipeBind1","isPure","transform","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","LQueries_","shallow","deep","track","predicate","descend","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","result","containerValues","list","viewValuesIdx","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","previous","createPredicate","_valuesTree","QueryList","QueryList_","changes","_values","filter","find","reduce","init","some","toArray","reset","flatten","item","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ÉµdefineBase","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","ÉµdefinePipe","ÉµdirectiveInject","ÉµgetFactoryOf","ÉµgetInheritedFactory","ÉµinjectAttribute","ÉµinjectChangeDetectorRef","ÉµinjectElementRef","ÉµinjectTemplateRef","ÉµinjectViewContainerRef","ÉµtemplateRefExtractor","ÉµinjectRenderer2","ÉµNgOnChangesFeature","ÉµPublicFeature","ÉµInheritDefinitionFeature","ÉµelementAttribute","Éµbind","Éµcontainer","ÉµnextContext","ÉµcontainerRefreshStart","ÉµcontainerRefreshEnd","ÉµloadDirective","ÉµloadQueryList","ÉµnamespaceHTML","ÉµnamespaceMathML","ÉµnamespaceSVG","ÉµelementStart","ÉµelementEnd","Éµelement","ÉµEC","elementContainerStart","ÉµeC","elementContainerEnd","ÉµpureFunction0","ÉµpureFunction1","ÉµpureFunction2","ÉµpureFunction3","ÉµpureFunction4","ÉµpureFunction5","ÉµpureFunction6","ÉµpureFunction7","ÉµpureFunction8","ÉµpureFunctionV","ÉµgetCurrentView","ÉµrestoreView","Éµinterpolation1","Éµinterpolation2","Éµinterpolation3","Éµinterpolation4","Éµinterpolation5","Éµinterpolation6","Éµinterpolation7","Éµinterpolation8","ÉµinterpolationV","ÉµelementClassProp","Éµlistener","Éµload","Éµprojection","ÉµelementProperty","ÉµpipeBind1","ÉµpipeBind2","ÉµpipeBind3","ÉµpipeBind4","ÉµpipeBindV","ÉµprojectionDef","Éµpipe","Éµquery","ÉµqueryRefresh","ÉµregisterContentQuery","Éµreference","ÉµelementStyling","ÉµelementStylingMap","ÉµelementStylingProp","ÉµelementStylingApply","Éµtemplate","Éµtext","ÉµtextBinding","ÉµembeddedViewStart","ÉµembeddedViewEnd","Éµzh","Éµzs","Éµzss","Éµzr","Éµzc","sanitizeScript","unsafeScript","SCRIPT","Éµzu","TARGET","NG_COMPONENT_DEF","NG_DIRECTIVE_DEF","NG_INJECTABLE_DEF","NG_INJECTOR_DEF","NG_PIPE_DEF","NG_MODULE_DEF","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","dep","reflectDependency","LiteralExpr","host","optional","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","WrappedNodeExpr","param","EMPTY_ARRAY$2","compileNgModuleDefs","flatten$1","wrapReference","expandModuleWithProviders","emitInline","compileNgModule","jitExpression","expression","compileInjector","statements","patchComponentDefWithScope","transitiveScopes","from","compilation","dir","transitiveScopesFor","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","constantPool","ConstantPool","parseTemplate","preserveWhitespaces","errors","compileComponentFromMetadata","directiveMetadata","viewQueries","wrapDirectivesInClosure","makeBindingParser","preStatements","hasSelectorScope","ngSelectorScope","compileDirective","sourceMapUrl","compileDirectiveFromMetadata","extractHostBindings","parseHostBindings","listeners","properties","_loop_2","field","ann","isHostBinding","isHostListener","hostPropertyName","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","inputsFromType","outputsFromType","isOutput","bindingPropertyName","typeArgumentCount","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","piece","isUseClassProvider","GET_PROPERTY_NAME$1","USE_VALUE$1","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","compilePipe","compilePipeFromMetadata","Version","R3_COMPILE_COMPONENT","R3_COMPILE_DIRECTIVE","R3_COMPILE_INJECTABLE","compileInjectable","srcMeta","hasAProvider","ctorDeps","userDeps","computeProvidedIn","R3_COMPILE_NGMODULE","setScopeOnDeclaredComponents","declaration","R3_COMPILE_PIPE","Directive","Component","Default","Pipe","NG_BASE_DEF","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","Output","HostBinding","HostListener","NgModule","VERSION","full","major","minor","patch","Injectable","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_NGCC__","createCompiler","compileNgModuleFactory","ApplicationRef","f","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","parentEl","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugContext","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","Render3DebugRendererFactory2","element$$1","Render3DebugContext","matchedDirectives","R3_COMPILE_COMPONENT__POST_NGCC__","R3_COMPILE_DIRECTIVE__POST_NGCC__","R3_COMPILE_INJECTABLE__POST_NGCC__","R3_COMPILE_NGMODULE__POST_NGCC__","R3_COMPILE_PIPE__POST_NGCC__","GET_PROPERTY_NAME$2","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ÉµNoopNgZone","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdetectChanges","ÉµrenderComponent","renderComponent","hostFeatures","ÉµRender3ComponentFactory","ÉµRender3ComponentRef","ÉµRender3NgModuleRef","ÉµmarkDirty","markDirty","ÉµNgModuleFactory","ÉµNO_CHANGE","pipeBind2","Éµstore","ÉµwhenRendered","whenRendered","getRootContext","Éµi18nApply","i18nApply","instructions","localParentNode","localPreviousNode","instruction","textRNode","removedNode","Éµi18nExpMapping","i18nExpMapping","translation","placeholders","staticText","Éµi18nInterpolation1","i18nInterpolation1","Éµi18nInterpolation2","i18nInterpolation2","Éµi18nInterpolation3","i18nInterpolation3","idx","Éµi18nInterpolation4","i18nInterpolation4","b1","Éµi18nInterpolation5","i18nInterpolation5","Éµi18nInterpolation6","i18nInterpolation6","Éµi18nInterpolation7","i18nInterpolation7","b2","Éµi18nInterpolation8","i18nInterpolation8","Éµi18nInterpolationV","i18nInterpolationV","Éµi18nMapping","i18nMapping","elements","expressions","templateRoots","lastChildIndex","translationParts","generateMappingInstructions","tmplIndex","partIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","currentElements","currentExpressions","phIndex","templateRootIndex","newTmplIndex","tmplElements","phKeys","ph","tmplExpressions","ÉµWRAP_RENDERER_FACTORY2","ÉµRender3DebugRendererFactory2","ÉµcompileNgModuleDefs","ÉµpatchComponentDefWithScope","ÉµcompileComponent","ÉµcompileDirective","ÉµcompilePipe","ÉµsanitizeHtml","ÉµsanitizeStyle","ÉµsanitizeUrl","ÉµsanitizeResourceUrl","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµgetContext","ÉµR3_COMPILE_COMPONENT__POST_NGCC__","ÉµR3_COMPILE_DIRECTIVE__POST_NGCC__","ÉµR3_COMPILE_INJECTABLE__POST_NGCC__","ÉµR3_COMPILE_NGMODULE__POST_NGCC__","ÉµR3_COMPILE_PIPE__POST_NGCC__","ÉµivyEnable__POST_NGCC__","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.0.0-beta.5+13.sha-ed266da\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('@angular/compiler'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', '@angular/compiler', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.ng.compiler,global.rxjs.operators));\n}(this, (function (exports,rxjs,compiler,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @experimental\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @experimental\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * #### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * #### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         *\n         * ### Example\n         * {@example core/ts/metadata/encapsulation.ts region='longform'}\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @experimental\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     *\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var GET_PROPERTY_NAME = {};\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: GET_PROPERTY_NAME });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n                return key;\n            }\n        }\n        throw Error('!prop');\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            var injectableDef = token.ngInjectableDef;\n            if (injectableDef && injectableDef.providedIn == 'root') {\n                return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                    injectableDef.value;\n            }\n            if (flags & 8 /* Optional */)\n                return null;\n            throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!actual.ngComponentDef) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 17;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var PARENT = 1;\n    var NEXT = 2;\n    var QUERIES = 3;\n    var FLAGS = 4;\n    var HOST_NODE = 5;\n    var BINDING_INDEX = 6;\n    var DIRECTIVES = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n    var DECLARATION_VIEW = 16;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData[DIRECTIVES]\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 15 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.directives[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView[DIRECTIVES], tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(data, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(data[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // NOTE: The order here matters: Checking window, then global, then self is important.\n    //   checking them in another order can result in errors in some Node environments.\n    var __global$1 = typeof window != 'undefined' && window || typeof global != 'undefined' && global ||\n        typeof self != 'undefined' && self;\n    function ngDevModeResetPerfCounters() {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for clousre.\n        return __global$1['ngDevMode'] = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for clousre.\n        __global$1['ngDevMode'] = ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns wether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData` or `TData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /** Retrieves an element value from the provided `viewData`.\n      *\n      * Elements that are read may be wrapped in a style context,\n      * therefore reading the value may involve unwrapping that.\n      */\n    function loadElementInternal(index, arr) {\n        var value = loadInternal(index, arr);\n        return readElementValue(value);\n    }\n    function readElementValue(value) {\n        return (Array.isArray(value) ? value[0] : value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LViewData` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     */\n    function getContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LViewData instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lViewData = mpValue;\n                var lNodeIndex = void 0;\n                var component = undefined;\n                var directiveIndices = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    lNodeIndex = findViaComponent(lViewData, target);\n                    if (lNodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    lNodeIndex = findViaDirective(lViewData, target);\n                    if (lNodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directiveIndices = discoverDirectiveIndices(lViewData, lNodeIndex);\n                    directives = directiveIndices ? discoverDirectives(lViewData, directiveIndices) : null;\n                }\n                else {\n                    lNodeIndex = findViaNativeElement(lViewData, target);\n                    if (lNodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, compontent or\n                // directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var lNode = getLNodeFromViewData(lViewData, lNodeIndex);\n                var existingCtx = readPatchedData(lNode.native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lViewData, lNodeIndex, lNode.native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && directiveIndices && context.directives === undefined) {\n                    context.directiveIndices = directiveIndices;\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomElement(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lViewData = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lViewData = parentContext;\n                    }\n                    else {\n                        lViewData = parentContext.lViewData;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lViewData) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lViewData, rElement);\n                    if (index >= 0) {\n                        var lNode = getLNodeFromViewData(lViewData, index);\n                        var context = createLContext(lViewData, index, lNode.native);\n                        attachPatchData(lNode.native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lViewData, lNodeIndex, native) {\n        return {\n            lViewData: lViewData,\n            lNodeIndex: lNodeIndex,\n            native: native,\n            component: undefined,\n            directiveIndices: undefined,\n            directives: undefined,\n        };\n    }\n    /**\n     * A utility function for retrieving the matching lElementNode\n     * from a given DOM element, component or directive.\n     */\n    function getLElementNode(target) {\n        var context = getContext(target);\n        return context ? getLNodeFromViewData(context.lViewData, context.lNodeIndex) : null;\n    }\n    function getLElementFromRootComponent(componentInstance) {\n        // the host element for the root component is ALWAYS the first element\n        // in the lViewData array (which is where HEADER_OFFSET points to)\n        return getLElementFromComponent(componentInstance, HEADER_OFFSET);\n    }\n    /**\n     * A simplified lookup function for finding the LElementNode from a component instance.\n     *\n     * This function exists for tree-shaking purposes to avoid having to pull in everything\n     * that `getContext` has in the event that an Angular application doesn't need to have\n     * any programmatic access to an element's context (only change detection uses this function).\n     */\n    function getLElementFromComponent(componentInstance, expectedLNodeIndex) {\n        var lViewData = readPatchedData(componentInstance);\n        var lNode;\n        if (Array.isArray(lViewData)) {\n            expectedLNodeIndex = expectedLNodeIndex || findViaComponent(lViewData, componentInstance);\n            lNode = readElementValue(lViewData[expectedLNodeIndex]);\n            var context = createLContext(lViewData, expectedLNodeIndex, lNode.native);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lViewData;\n            lNode = readElementValue(context.lViewData[context.lNodeIndex]);\n        }\n        return lNode;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LViewData and returns the matching index\n     */\n    function findViaNativeElement(lViewData, native) {\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var lNode = getLNodeFromViewData(lViewData, tNode.index);\n            if (lNode.native === native) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else if (tNode.parent) {\n            return tNode.parent.next || null;\n        }\n        return null;\n    }\n    /**\n     * Locates the component within the given LViewData and returns the matching index\n     */\n    function findViaComponent(lViewData, componentInstance) {\n        var componentIndices = lViewData[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var lNodeData = readElementValue(lViewData[elementComponentIndex]).data;\n                if (lNodeData[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootNode = lViewData[HEADER_OFFSET];\n            var rootComponent = rootNode.data[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LViewData and returns the matching index\n     */\n    function findViaDirective(lViewData, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LViewData of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. By first checking to see if the instance\n        // is actually present we can narrow down to which lElementNode\n        // contains the instance of the directive and then return the index\n        var directivesAcrossView = lViewData[DIRECTIVES];\n        var directiveIndex = directivesAcrossView ? directivesAcrossView.indexOf(directiveInstance) : -1;\n        if (directiveIndex >= 0) {\n            var tNode = lViewData[TVIEW].firstChild;\n            while (tNode) {\n                var lNode = getLNodeFromViewData(lViewData, tNode.index);\n                var directiveIndexStart = getDirectiveStartIndex(lNode);\n                var directiveIndexEnd = getDirectiveEndIndex(lNode, directiveIndexStart);\n                if (directiveIndex >= directiveIndexStart && directiveIndex < directiveIndexEnd) {\n                    return tNode.index;\n                }\n                tNode = traverseNextElement(tNode);\n            }\n        }\n        return -1;\n    }\n    function assertDomElement(element) {\n        assertEqual(element.nodeType, 1, 'The provided value must be an instance of an HTMLElement');\n    }\n    /**\n     * Retruns the instance of the LElementNode at the given index in the LViewData.\n     *\n     * This function will also unwrap the inner value incase it's stuffed into an\n     * array (which is what happens when [style] and [class] bindings are present\n     * in the view instructions for the element being returned).\n     */\n    function getLNodeFromViewData(lViewData, lElementIndex) {\n        var value = lViewData[lElementIndex];\n        return value ? readElementValue(value) : null;\n    }\n    /**\n     * Returns a collection of directive index values that are used on the element\n     * (which is referenced by the lNodeIndex)\n     */\n    function discoverDirectiveIndices(lViewData, lNodeIndex) {\n        var directivesAcrossView = lViewData[DIRECTIVES];\n        var lNode = getLNodeFromViewData(lViewData, lNodeIndex);\n        if (lNode && directivesAcrossView && directivesAcrossView.length) {\n            // this check for tNode is to determine if the calue is a LEmementNode instance\n            var directiveIndexStart = getDirectiveStartIndex(lNode);\n            var directiveIndexEnd = getDirectiveEndIndex(lNode, directiveIndexStart);\n            var directiveIndices = [];\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                // special case since the instance of the component (if it exists)\n                // is stored in the directives array.\n                if (i > directiveIndexStart ||\n                    !isComponentInstance(directivesAcrossView[directiveIndexStart])) {\n                    directiveIndices.push(i);\n                }\n            }\n            return directiveIndices.length ? directiveIndices : null;\n        }\n        return null;\n    }\n    function discoverDirectives(lViewData, directiveIndices) {\n        var directives = [];\n        var directiveInstances = lViewData[DIRECTIVES];\n        if (directiveInstances) {\n            for (var i = 0; i < directiveIndices.length; i++) {\n                var directiveIndex = directiveIndices[i];\n                var directive = directiveInstances[directiveIndex];\n                directives.push(directive);\n            }\n        }\n        return directives;\n    }\n    function getDirectiveStartIndex(lNode) {\n        // the tNode instances store a flag value which then has a\n        // pointer which tells the starting index of where all the\n        // active directives are in the master directive array\n        return lNode.tNode.flags >> 15 /* DirectiveStartingIndexShift */;\n    }\n    function getDirectiveEndIndex(lNode, startIndex) {\n        // The end value is also apart of the same flag\n        // (see `TNodeFlags` to see how the flag bit shifting\n        // values are used).\n        var count = lNode.tNode.flags & 4095 /* DirectiveCountMask */;\n        return count ? (startIndex + count) : -1;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    // PARENT, NEXT, and QUERIES are indices 1, 2, and 3.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var VIEWS = 4;\n    var RENDER_PARENT = 5;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the first child of a given node */\n    function getChildLNode(node) {\n        if (node.tNode.child) {\n            var viewData = node.tNode.type === 2 /* View */ ? node.data : node.view;\n            return readElementValue(viewData[node.tNode.child.index]);\n        }\n        return null;\n    }\n    function getParentLNode(node) {\n        if (node.tNode.index === -1 && node.tNode.type === 2 /* View */) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = node.data[CONTAINER_INDEX];\n            return containerHostIndex === -1 ? null : node.view[containerHostIndex].dynamicLContainerNode;\n        }\n        var parent = node.tNode.parent;\n        return readElementValue(parent ? node.view[parent.index] : node.view[HOST_NODE]);\n    }\n    /**\n     * Retrieves render parent LElementNode for a given view.\n     * Might be null if a view is not yet attatched to any container.\n     */\n    function getRenderParent(viewNode) {\n        var container = getParentLNode(viewNode);\n        return container ? container.data[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the LElement nodes.\n     * @param renderer the current renderer.\n     * @param renderParentNode Optional the render parent node to be set in all LContainerNodes found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParentNode, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            var parent_1 = renderParentNode ? renderParentNode.native : null;\n            if (tNode.type === 3 /* Element */) {\n                var elementNode = readElementValue(currentView[tNode.index]);\n                executeNodeAction(action, renderer, parent_1, elementNode.native, beforeNode);\n                if (elementNode.dynamicLContainerNode) {\n                    executeNodeAction(action, renderer, parent_1, elementNode.dynamicLContainerNode.native, beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainerNode = currentView[tNode.index];\n                executeNodeAction(action, renderer, parent_1, lContainerNode.native, beforeNode);\n                var childContainerData = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.data :\n                    lContainerNode.data;\n                if (renderParentNode) {\n                    childContainerData[RENDER_PARENT] = renderParentNode;\n                }\n                if (childContainerData[VIEWS].length) {\n                    currentView = childContainerData[VIEWS][0].data;\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainerNode.dynamicLContainerNode ?\n                        lContainerNode.dynamicLContainerNode.native :\n                        lContainerNode.native;\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentHost = findComponentHost(currentView);\n                var head = componentHost.tNode.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentHost.data[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 8192 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the LNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index].native;\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentHost(lViewData) {\n        var viewRootLNode = lViewData[HOST_NODE];\n        while (viewRootLNode.tNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'lViewData.parent');\n            lViewData = lViewData[PARENT];\n            viewRootLNode = lViewData[HOST_NODE];\n        }\n        ngDevMode && assertNodeType(viewRootLNode.tNode, 3 /* Element */);\n        ngDevMode && assertDefined(viewRootLNode.data, 'node.data');\n        return viewRootLNode;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(container, viewToWalk, insertMode, beforeNode) {\n        var parentNode = container.data[RENDER_PARENT];\n        var parent = parentNode ? parentNode.native : null;\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (parent) {\n            var renderer = container.view[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, parentNode, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0].data;\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param container The container into which the view should be inserted\n     * @param viewNode The view to insert\n     * @param index The index at which to insert the view\n     * @returns The inserted view\n     */\n    function insertView(container, viewNode, index) {\n        var state = container.data;\n        var views = state[VIEWS];\n        var lView = viewNode.data;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1].data[NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index].data;\n            views.splice(index, 0, viewNode);\n        }\n        else {\n            views.push(viewNode);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container'S host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (viewNode.tNode.index === -1) {\n            lView[CONTAINER_INDEX] = container.tNode.parent.index;\n            viewNode.view = container.view;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param container The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns The detached view\n     */\n    function detachView(container, removeIndex) {\n        var views = container.data[VIEWS];\n        var viewNode = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1].data[NEXT] = viewNode.data[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!container.tNode.detached) {\n            addRemoveViewFromContainer(container, viewNode.data, false);\n        }\n        // Notify query that view has been removed\n        var removedLView = viewNode.data;\n        if (removedLView[QUERIES]) {\n            removedLView[QUERIES].removeView();\n        }\n        removedLView[CONTAINER_INDEX] = -1;\n        viewNode.view = null;\n        // Unsets the attached flag\n        viewNode.data[FLAGS] &= ~8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param container The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     * @returns The removed view\n     */\n    function removeView(container, removeIndex) {\n        var viewNode = container.data[VIEWS][removeIndex];\n        destroyLView(viewNode.data);\n        detachView(container, removeIndex);\n        return viewNode;\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        if (viewData[TVIEW].childIndex === -1)\n            return null;\n        var hostNode = viewData[viewData[TVIEW].childIndex];\n        return hostNode.data ? hostNode.data : hostNode.dynamicLContainerNode.data;\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var node;\n        if ((node = state[HOST_NODE]) && node.tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getParentLNode(node).data;\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer[TVIEW]) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]).native;\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view[DIRECTIVES], destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function canInsertNativeChildOfElement(parent, currentView) {\n        if (parent.view !== currentView) {\n            // If the Parent view is not the same as current view than we are inserting across\n            // Views. This happens when we insert a root element of the component view into\n            // the component host element and it should always be eager.\n            return true;\n        }\n        // Parent elements can be a component which may have projection.\n        if (parent.data === null) {\n            // Parent is a regular non-component element. We should eagerly insert into it\n            // since we know that this relationship will never be broken.\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reason:\n     * - view is not inserted into any container (view was created but not iserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view this view was inserted into a container and\n     * the container itself has it render parent determined.\n     */\n    function canInsertNativeChildOfView(parent) {\n        ngDevMode && assertNodeType(parent.tNode, 2 /* View */);\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var grandParentContainer = getParentLNode(parent);\n        if (grandParentContainer == null) {\n            // The `View` is not inserted into a `Container` we have to delay insertion.\n            return false;\n        }\n        ngDevMode && assertNodeType(grandParentContainer.tNode, 0 /* Container */);\n        if (grandParentContainer.data[RENDER_PARENT] == null) {\n            // The parent `Container` itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(parent, currentView) {\n        // We can only insert into a Component or View. Any other type should be an Error.\n        ngDevMode && assertNodeOfPossibleTypes(parent.tNode, 3 /* Element */, 4 /* ElementContainer */, 2 /* View */);\n        if (parent.tNode.type === 3 /* Element */) {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(parent, currentView);\n        }\n        else if (parent.tNode.type === 4 /* ElementContainer */) {\n            // Parent is an element container (ng-container).\n            // Its grand-parent might be an element, view or a sequence of ng-container parents.\n            var grandParent = getParentLNode(parent);\n            while (grandParent !== null && grandParent.tNode.type === 4 /* ElementContainer */) {\n                grandParent = getParentLNode(grandParent);\n            }\n            if (grandParent === null) {\n                return false;\n            }\n            else if (grandParent.tNode.type === 3 /* Element */) {\n                return canInsertNativeChildOfElement(grandParent, currentView);\n            }\n            else {\n                return canInsertNativeChildOfView(grandParent);\n            }\n        }\n        else {\n            // Parent is a View.\n            return canInsertNativeChildOfView(parent);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param parent The parent to which to append the child\n     * @param child The child that should be appended\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            var renderer = currentView[RENDERER];\n            if (parent.tNode.type === 2 /* View */) {\n                var container = getParentLNode(parent);\n                var renderParent = container.data[RENDER_PARENT];\n                var views = container.data[VIEWS];\n                var index = views.indexOf(parent);\n                var beforeNode = index + 1 < views.length ? (getChildLNode(views[index + 1])).native : container.native;\n                nativeInsertBefore(renderer, renderParent.native, child, beforeNode);\n            }\n            else if (parent.tNode.type === 4 /* ElementContainer */) {\n                var beforeNode = parent.native;\n                var grandParent = getParentLNode(parent);\n                while (grandParent.tNode.type === 4 /* ElementContainer */) {\n                    grandParent = getParentLNode(grandParent);\n                }\n                if (grandParent.tNode.type === 2 /* View */) {\n                    var renderParent = getRenderParent(grandParent);\n                    nativeInsertBefore(renderer, renderParent.native, child, beforeNode);\n                }\n                else {\n                    nativeInsertBefore(renderer, grandParent.native, child, beforeNode);\n                }\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parent.native, child) :\n                    parent.native.appendChild(child);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Removes the `child` element of the `parent` from the DOM.\n     *\n     * @param parent The parent from which to remove the child\n     * @param child The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            // We only remove the element if not in View or not projected.\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parent.native, child) :\n                parent.native.removeChild(child);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param node The node to process\n     * @param currentParent The last parent element to be processed\n     * @param currentView Current LView\n     */\n    function appendProjectedNode(node, currentParent, currentView, renderParent, parentView) {\n        appendChild(currentParent, node.native, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(node.native, parentView);\n        if (node.tNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var lContainer = node.data;\n            lContainer[RENDER_PARENT] = renderParent;\n            var views = lContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                var viewNode = views[i];\n                addRemoveViewFromContainer(node, viewNode.data, true, node.native);\n            }\n        }\n        else if (node.tNode.type === 4 /* ElementContainer */) {\n            var ngContainerChild = getChildLNode(node);\n            var parentView_1 = currentView[PARENT];\n            while (ngContainerChild) {\n                appendProjectedNode(ngContainerChild, currentParent, currentView, renderParent, parentView_1);\n                ngContainerChild = ngContainerChild.tNode.next ?\n                    readElementValue(ngContainerChild.view[ngContainerChild.tNode.next.index]) :\n                    null;\n            }\n        }\n        if (node.dynamicLContainerNode) {\n            node.dynamicLContainerNode.data[RENDER_PARENT] = renderParent;\n            appendChild(currentParent, node.dynamicLContainerNode.native, currentView);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(lElement, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[0 /* ElementPosition */] = lElement;\n        return context;\n    }\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer) {\n        var initialStylingValues = [null];\n        var context = [null, styleSanitizer || null, initialStylingValues, 0, 0, null];\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 3 /* Size */ * 2 + 6 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 6 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 6 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 3 /* Size */ + 6 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 3 /* Size */ + multiStart;\n            var indexForSingle = i * 3 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        setFlag(context, 3 /* MasterFlagPosition */, pointers(0, 0, multiStart));\n        setContextDirty(context, initialStylingValues.length > 1);\n        return context;\n    }\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classes The key/value map of CSS class names that will be used for the update.\n     * @param styles The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classes, styles) {\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var ignoreAllClassUpdates = false;\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (typeof classes == 'string') {\n            var cachedClassString = context[5 /* CachedCssClassString */];\n            if (cachedClassString && cachedClassString === classes) {\n                ignoreAllClassUpdates = true;\n            }\n            else {\n                context[5 /* CachedCssClassString */] = classes;\n                classNames = classes.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n        }\n        else {\n            classNames = classes ? Object.keys(classes) : EMPTY_ARR;\n            context[5 /* CachedCssClassString */] = null;\n        }\n        classes = (classes || EMPTY_OBJ);\n        var styleProps = styles ? Object.keys(styles) : EMPTY_ARR;\n        styles = styles || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (!ignoreAllClassUpdates || !isClassBased_2) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (initialValue !== newValue) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (valueToCompare !== newValue) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (initialValue !== newValue) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 3 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            if (ignoreAllClassUpdates && isClassBased_3)\n                break;\n            var value = getValue(context, ctxIndex);\n            var doRemoveValue = valueExists(value, isClassBased_3);\n            if (doRemoveValue) {\n                setDirty(context, ctxIndex, true);\n                setValue(context, ctxIndex, null);\n                dirty = true;\n            }\n            ctxIndex += 3 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            if (ignoreAllClassUpdates && isClassBased_4)\n                break;\n            var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n            var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n            var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n            var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n            context.push(flag, prop, value);\n            propIndex++;\n            dirty = true;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, value) {\n        var singleIndex = 6 /* SingleStylesStartPosition */ + index * 3 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || valueForMulti !== value) {\n                var multiDirty = false;\n                var singleDirty = true;\n                var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param styleStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param classStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     */\n    function renderStyling(context, renderer, styleStore, classStore) {\n        if (isContextDirty(context)) {\n            var native = context[0 /* ElementPosition */].native;\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            for (var i = 6 /* SingleStylesStartPosition */; i < context.length; i += 3 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    if (isClassBased_6) {\n                        setClass(native, prop, valueToApply ? true : false, renderer, classStore);\n                    }\n                    else {\n                        var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                        setStyle(native, prop, valueToApply, renderer, sanitizer, styleStore);\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            setContextDirty(context, false);\n        }\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store) {\n            store[prop] = value;\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store) {\n        if (store) {\n            store[className] = add;\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 7 /* BitMask */) | (staticIndex << 3 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 3 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 3 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 3 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 6 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 3 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 3 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 3 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * TView.data needs to fill the same number of slots as the LViewData header\n     * so the indices of nodes are consistent between LViewData and TView.data.\n     *\n     * It's much faster to keep a blueprint of the pre-filled array and slice it\n     * than it is to create a new array and fill it each time a TView is created.\n     */\n    var HEADER_FILLER = new Array(HEADER_OFFSET).fill(null);\n    /**\n     * Token set in currentMatches while dependencies are being resolved.\n     *\n     * If we visit a directive that has a value set to CIRCULAR, we know we've\n     * already seen it, and thus have a circular dependency.\n     */\n    var CIRCULAR$1 = '__CIRCULAR__';\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LViewData` to only those elements.\n     */\n    var elementDepthCount;\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentNode() {\n        return previousOrParentTNode == null || previousOrParentTNode === tView.node ?\n            viewData[HOST_NODE] :\n            readElementValue(viewData[previousOrParentTNode.index]);\n    }\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    var tView;\n    var currentQueries;\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== tView.node &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = currentQueries.clone());\n            previousOrParentTNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (currentQueries = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function _getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    /**\n     * An array of directive instances in the current view.\n     *\n     * These must be stored separately from LNodes because their presence is\n     * unknown at compile-time and thus space cannot be reserved in data[].\n     */\n    var directives;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.hostBindingStartIndex + any hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = viewData;\n        directives = newView && newView[DIRECTIVES];\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        bindingRootIndex = newView && tView.bindingStartIndex;\n        renderer = newView && newView[RENDERER];\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        viewData = contextViewData = newView;\n        oldView && (oldView[QUERIES] = currentQueries);\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(directives, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews() {\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = firstTemplatePass = false;\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(viewData);\n        // Content query results must be refreshed before content hooks are called.\n        refreshContentQueries(tView);\n        if (!checkNoChangesMode) {\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        setHostBindings(tView.hostBindings);\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(bindings) {\n        if (bindings != null) {\n            bindingRootIndex = viewData[BINDING_INDEX] = tView.hostBindingStartIndex;\n            var defs = tView.directives;\n            for (var i = 0; i < bindings.length; i += 2) {\n                var dirIndex = bindings[i];\n                var def = defs[dirIndex];\n                def.hostBindings(dirIndex, bindings[i + 1]);\n                bindingRootIndex = viewData[BINDING_INDEX] = bindingRootIndex + def.hostVars;\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.directives[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function executeInitAndContentHooks() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        var instance = tView.blueprint.slice();\n        instance[PARENT] = viewData;\n        instance[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        instance[CONTEXT] = context;\n        instance[INJECTOR$1] = viewData ? viewData[INJECTOR$1] : null;\n        instance[RENDERER] = renderer;\n        instance[SANITIZER] = sanitizer || null;\n        return instance;\n    }\n    /**\n     * Creation of LNode object is extracted to a separate function so we always create LNode object\n     * with the same shape\n     * (same properties assigned in the same order).\n     */\n    function createLNodeObject(type, currentView, nodeInjector, native, state) {\n        return {\n            native: native,\n            view: currentView,\n            nodeInjector: nodeInjector,\n            data: state,\n            tNode: null,\n            dynamicLContainerNode: null\n        };\n    }\n    function createLNode(index, type, native, name, attrs, state) {\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && tView && parent !== tView.node;\n        var tParent = parentInSameView ? parent : null;\n        var isState = state != null;\n        var node = createLNodeObject(type, viewData, null, native, isState ? state : null);\n        if (index === -1 || type === 2 /* View */) {\n            // View nodes are not stored in data because they can be added / removed at runtime (which\n            // would cause indices to change). Their TNodes are instead stored in TView.node.\n            node.tNode = (state ? state[TVIEW].node : null) ||\n                createTNode(type, index, null, null, tParent, null);\n        }\n        else {\n            var adjustedIndex = index + HEADER_OFFSET;\n            // This is an element or container or projection node\n            var tData = tView.data;\n            ngDevMode && assertLessThan(adjustedIndex, viewData.length, \"Slot should have been initialized with null\");\n            viewData[adjustedIndex] = node;\n            if (tData[adjustedIndex] == null) {\n                var tNode = tData[adjustedIndex] =\n                    createTNode(type, adjustedIndex, name, attrs, tParent, null);\n                if (!isParent && previousOrParentTNode) {\n                    previousOrParentTNode.next = tNode;\n                    if (previousOrParentTNode.dynamicContainerNode)\n                        previousOrParentTNode.dynamicContainerNode.next = tNode;\n                }\n            }\n            node.tNode = tData[adjustedIndex];\n            if (!tView.firstChild && type === 3 /* Element */) {\n                tView.firstChild = node.tNode;\n            }\n            // Now link ourselves into the tree.\n            if (isParent && previousOrParentTNode) {\n                if (previousOrParentTNode.child == null && parentInSameView ||\n                    previousOrParentTNode.type === 2 /* View */) {\n                    // We are in the same view, which means we are adding content node to the parent View.\n                    previousOrParentTNode.child = node.tNode;\n                }\n            }\n        }\n        // TODO: temporary, remove when removing LNode.nodeInjector\n        var parentLNode = index === -1 ? null : getParentLNode(node);\n        if (parentLNode)\n            node.nodeInjector = parentLNode.nodeInjector;\n        // View nodes and host elements need to set their host node (components do not save host TNodes)\n        if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n            var lViewData = state;\n            ngDevMode &&\n                assertEqual(lViewData[HOST_NODE], null, 'lViewData[HOST_NODE] should not have been initialized');\n            lViewData[HOST_NODE] = node;\n            if (lViewData[TVIEW].firstTemplatePass) {\n                lViewData[TVIEW].node = node.tNode;\n            }\n        }\n        previousOrParentTNode = node.tNode;\n        isParent = true;\n        return node;\n    }\n    /**\n     * When LNodes are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function adjustBlueprintForNewNode(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.hostBindingStartIndex++;\n            tView.blueprint.push(null);\n            view.push(null);\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewNode(tView, context, declarationView, renderer, queries) {\n        var _isParent = isParent;\n        var _previousOrParentTNode = previousOrParentTNode;\n        isParent = true;\n        previousOrParentTNode = null;\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        var viewNode = createLNode(-1, 2 /* View */, null, null, null, lView);\n        isParent = _isParent;\n        previousOrParentTNode = _previousOrParentTNode;\n        return viewNode;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewNode, tView, context, rf) {\n        var _isParent = isParent;\n        var _previousOrParentTNode = previousOrParentTNode;\n        var oldView;\n        if (viewNode.data[PARENT] == null && viewNode.data[CONTEXT] && !tView.template) {\n            // This is a root view inside the view tree\n            tickRootContext(viewNode.data[CONTEXT]);\n        }\n        else {\n            try {\n                isParent = true;\n                previousOrParentTNode = null;\n                oldView = enterView(viewNode.data, tView.node);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews();\n                }\n                else {\n                    viewNode.data[TVIEW].firstTemplatePass = firstTemplatePass = false;\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice in fact, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                isParent = _isParent;\n                previousOrParentTNode = _previousOrParentTNode;\n            }\n        }\n        return viewNode;\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, templateFn) {\n        var oldView = enterView(hostView, null);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(getRenderFlags(hostView), componentOrContext);\n                refreshDescendantViews();\n            }\n            else {\n                executeInitAndContentHooks();\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings(tView.hostBindings);\n                componentRefresh(HEADER_OFFSET);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(index - 1);\n        var node = createLNode(index, 4 /* ElementContainer */, native, null, attrs || null, null);\n        appendChild(getParentLNode(node), native, viewData);\n        createDirectivesAndLocals(node, localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        // Can be read directly because ng-containers can't have style bindings\n        var previousNode = viewData[previousOrParentTNode.index];\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        currentQueries && (currentQueries = currentQueries.addNode(previousNode));\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var node = createLNode(index, 3 /* Element */, native, name, attrs || null, null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(getParentLNode(node), native, viewData);\n        createDirectivesAndLocals(node, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (elementDepthCount === 0) {\n            attachPatchData(native, viewData);\n        }\n        elementDepthCount++;\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || renderer;\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    function nativeNodeLocalRefExtractor(lNode) {\n        return lNode.native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param lNode LNode for which directive and locals should be created\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from LNode\n     */\n    function createDirectivesAndLocals(lNode, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = nativeNodeLocalRefExtractor; }\n        if (firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            cacheMatchingDirectivesForNode(previousOrParentTNode, tView, localRefs || null);\n        }\n        else {\n            instantiateDirectivesDirectly();\n        }\n        saveResolvedLocalsInData(lNode, localRefExtractor);\n    }\n    /**\n     * On first template pass, we match each node against available directive selectors and save\n     * the resulting defs in the correct instantiation order for subsequent change detection runs\n     * (so dependencies are always created before the directives that inject them).\n     */\n    function cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var matches = tView.currentMatches = findDirectiveMatches(tNode);\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                var valueIndex = i + 1;\n                resolveDirective(def, valueIndex, matches, tView);\n                saveNameToExportMap(matches[valueIndex], def, exportsMap);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /** Matches the current node against all available selectors. */\n    function findDirectiveMatches(tNode) {\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    if (def.template) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                    }\n                    if (def.diPublic)\n                        def.diPublic(def);\n                    (matches || (matches = [])).push(def, null);\n                }\n            }\n        }\n        return matches;\n    }\n    function resolveDirective(def, valueIndex, matches, tView) {\n        if (matches[valueIndex] === null) {\n            matches[valueIndex] = CIRCULAR$1;\n            var instance = def.factory();\n            (tView.directives || (tView.directives = [])).push(def);\n            return directiveCreate(matches[valueIndex] = tView.directives.length - 1, instance, def);\n        }\n        else if (matches[valueIndex] === CIRCULAR$1) {\n            // If we revisit this directive before it's resolved, we know it's circular\n            throwCyclicDependencyError(def.type);\n        }\n        return null;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck() {\n        if (firstTemplatePass) {\n            (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n        }\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n     */\n    function queueHostBindingForCheck(dirIndex, hostVars) {\n        // Must subtract the header offset because hostBindings functions are generated with\n        // instructions that expect element indices that are NOT adjusted (e.g. elementProperty).\n        ngDevMode &&\n            assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < hostVars; i++) {\n            tView.blueprint.push(NO_CHANGE);\n            viewData.push(NO_CHANGE);\n        }\n        (tView.hostBindings || (tView.hostBindings = [])).push(dirIndex, previousOrParentTNode.index - HEADER_OFFSET);\n    }\n    /** Sets the context for a ChangeDetectorRef to the given instance. */\n    function initChangeDetectorIfExisting(injector, instance, view) {\n        if (injector && injector.changeDetectorRef != null) {\n            injector.changeDetectorRef._setComponentContext(view, instance);\n        }\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    /**\n     * This function instantiates the given directives.\n     */\n    function instantiateDirectivesDirectly() {\n        ngDevMode && assertEqual(firstTemplatePass, false, \"Directives should only be instantiated directly after first template pass\");\n        var count = previousOrParentTNode.flags & 4095 /* DirectiveCountMask */;\n        if (isContentQueryHost(previousOrParentTNode) && currentQueries) {\n            currentQueries = currentQueries.clone();\n        }\n        if (count > 0) {\n            var start = previousOrParentTNode.flags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var tDirectives = tView.directives;\n            for (var i = start; i < end; i++) {\n                var def = tDirectives[i];\n                directiveCreate(i, def.factory(), def);\n            }\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(lNode, localRefExtractor) {\n        var localNames = lNode.tNode.localNames;\n        if (localNames) {\n            var localIndex = lNode.tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ? localRefExtractor(lNode) : directives[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: HEADER_FILLER.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            hostBindingStartIndex: initialViewLength,\n            directives: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            hostBindings: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            currentMatches: null,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        rendererFactory = factory;\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Creates the host LNode.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     *\n     * @returns LElementNode created\n     */\n    function hostElement(tag, rNode, def, sanitizer) {\n        resetComponentState();\n        var node = createLNode(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n        if (firstTemplatePass) {\n            node.tNode.flags = 4096 /* isComponent */;\n            if (def.diPublic)\n                def.diPublic(def);\n            tView.directives = [def];\n        }\n        return node;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var node = getPreviousOrParentNode();\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var wrappedListener = wrapListenerWithDirtyLogic(viewData, listenerFn);\n                var cleanupFn = renderer.listen(node.native, eventName, wrappedListener);\n                storeCleanupFn(viewData, cleanupFn);\n            }\n            else {\n                var wrappedListener = wrapListenerWithDirtyAndDefault(viewData, listenerFn);\n                node.native.addEventListener(eventName, wrappedListener, useCapture);\n                var cleanupInstances = getCleanup(viewData);\n                cleanupInstances.push(wrappedListener);\n                if (firstTemplatePass) {\n                    getTViewCleanup(viewData).push(eventName, tNode.index, cleanupInstances.length - 1, useCapture);\n                }\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], directives);\n            var subscription = directives[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = viewData;\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        currentQueries && (currentQueries = currentQueries.addNode(getPreviousOrParentNode()));\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n        elementDepthCount--;\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var element_1 = loadElement(index);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1.native, name) :\n                    element_1.native.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1.native, name, strValue) :\n                    element_1.native.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var node = loadElement(index);\n        var tNode = node.tNode;\n        // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked\n        if (tNode && tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(node.tNode.flags, 0 /* Input */);\n        }\n        var inputData = tNode && tNode.inputs;\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(dataValue, value);\n            markDirtyIfOnPush(node);\n        }\n        else {\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            var native = node.native;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n                (native.setProperty ? native.setProperty(propName, value) :\n                    native[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param parent The parent of this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            flags: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: parent,\n            dynamicContainerNode: null,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], directives);\n            directives[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number lNodeFlags logical node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.directives;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        updateClassProp(getStylingContext(index), stylingIndex, value ? true : false);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n        var tNode = previousOrParentTNode;\n        if (!tNode.stylingTemplate) {\n            // initialize the styling template.\n            tNode.stylingTemplate =\n                createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            elementStylingApply(tNode.index - HEADER_OFFSET);\n        }\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     */\n    function getStylingContext(index) {\n        var stylingContext = load(index);\n        if (!Array.isArray(stylingContext)) {\n            var lElement = stylingContext;\n            var tNode = lElement.tNode;\n            ngDevMode &&\n                assertDefined(tNode.stylingTemplate, 'getStylingContext() called before elementStyling()');\n            stylingContext = viewData[index + HEADER_OFFSET] =\n                allocStylingContext(lElement, tNode.stylingTemplate);\n        }\n        return stylingContext;\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        renderStyling(getStylingContext(index), renderer);\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param styleName Name of property. Because it is going to DOM this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix) {\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     */\n    function elementStylingMap(index, classes, styles) {\n        updateStylingMap(getStylingContext(index), classes, styles);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNode = createTextNode(value, renderer);\n        var node = createLNode(index, 3 /* Element */, textNode, null, null);\n        // Text nodes are self closing.\n        isParent = false;\n        appendChild(getParentLNode(node), textNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var existingNode = loadElement(index);\n            ngDevMode && assertDefined(existingNode, 'LNode should exist');\n            ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n                existingNode.native.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Create a directive and their associated content queries.\n     *\n     * NOTE: directives can be created in order other than the index order. They can also\n     *       be retrieved before they are created in which case the value will be null.\n     *\n     * @param directive The directive instance.\n     * @param directiveDef DirectiveDef object which contains information about the template.\n     */\n    function directiveCreate(directiveDefIdx, directive, directiveDef) {\n        var hostNode = getPreviousOrParentNode();\n        var instance = baseDirectiveCreate(directiveDefIdx, directive, directiveDef, hostNode);\n        var isComponent = directiveDef.template;\n        if (isComponent) {\n            addComponentLogic(directiveDefIdx, directive, directiveDef, hostNode);\n        }\n        if (firstTemplatePass) {\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(directiveDefIdx, directiveDef.onInit, directiveDef.doCheck, tView);\n            if (directiveDef.hostBindings)\n                queueHostBindingForCheck(directiveDefIdx, directiveDef.hostVars);\n        }\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, instance, directiveDef.inputs, previousOrParentTNode);\n        }\n        if (directiveDef.contentQueries) {\n            directiveDef.contentQueries();\n        }\n        return instance;\n    }\n    function addComponentLogic(directiveIndex, instance, def, hostNode) {\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentTNode.index, createLViewData(rendererFactory.createRenderer(hostNode.native, def), tView, instance, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        // We need to set the host node/data here because when the component LNode was created,\n        // we didn't yet know it was a component (just an element).\n        hostNode.data = componentView;\n        componentView[HOST_NODE] = hostNode;\n        initChangeDetectorIfExisting(hostNode.nodeInjector, instance, componentView);\n        if (firstTemplatePass)\n            queueComponentIndexForCheck();\n    }\n    /**\n     * A lighter version of directiveCreate() that is used for the root component\n     *\n     * This version does not contain features that we don't already support at root in\n     * current Angular. Example: local refs and inputs on root component.\n     */\n    function baseDirectiveCreate(index, directive, directiveDef, hostNode) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        attachPatchData(directive, viewData);\n        if (directives == null)\n            viewData[DIRECTIVES] = directives = [];\n        ngDevMode && assertDataNext(index, directives);\n        directives[index] = directive;\n        if (firstTemplatePass) {\n            var flags = previousOrParentTNode.flags;\n            if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n                // When the first directive is created:\n                // - save the index,\n                // - set the number of directives to 1\n                previousOrParentTNode.flags =\n                    index << 15 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n            }\n            else {\n                // Only need to bump the size when subsequent directives are created\n                ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n                previousOrParentTNode.flags++;\n            }\n        }\n        else {\n            var diPublic = directiveDef.diPublic;\n            if (diPublic)\n                diPublic(directiveDef);\n        }\n        if (directiveDef.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(hostNode.native, directiveDef.attributes);\n        }\n        return directive;\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param parentLNode the LNode in which the container's content will be rendered\n     * @param currentView The parent view of the LContainer\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(parentLNode, currentView, isForViewContainerRef) {\n        ngDevMode && assertDefined(parentLNode, 'containers should have a parent');\n        var renderParent = canInsertNativeNode(parentLNode, currentView) ?\n            parentLNode :\n            null;\n        if (renderParent && renderParent.tNode.type === 2 /* View */) {\n            renderParent = getParentLNode(renderParent).data[RENDER_PARENT];\n        }\n        return [\n            isForViewContainerRef ? null : 0,\n            currentView,\n            null,\n            null,\n            [],\n            renderParent\n        ];\n    }\n    /**\n     * Creates an LContainerNode for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        // TODO: consider a separate node type for templates\n        var node = containerInternal(index, tagName || null, attrs || null, localRefs || null);\n        if (firstTemplatePass) {\n            node.tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(node, localRefs, localRefExtractor);\n        currentQueries && (currentQueries = currentQueries.addNode(node));\n        queueLifecycleHooks(node.tNode.flags, tView);\n        isParent = false;\n    }\n    /**\n     * Creates an LContainerNode for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var node = containerInternal(index, null, null, null);\n        firstTemplatePass && (node.tNode.tViews = []);\n        isParent = false;\n    }\n    function containerInternal(index, tagName, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'container nodes should be created before any bindings');\n        var previousNode = getPreviousOrParentNode();\n        var currentParent = isParent ? previousNode : getParentLNode(previousNode);\n        var lContainer = createLContainer(currentParent, viewData);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = renderer.createComment(ngDevMode ? 'container' : '');\n        var node = createLNode(index, 0 /* Container */, comment, tagName, attrs, lContainer);\n        appendChild(getParentLNode(node), comment, viewData);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, node.data);\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        return node;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        previousOrParentTNode = loadInternal(index, tView.data);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        isParent = true;\n        // Inline containers cannot have style bindings, so we can read the value directly\n        viewData[previousOrParentTNode.index].data[ACTIVE_INDEX] = 0;\n        if (!checkNoChangesMode) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, creationMode);\n        }\n    }\n    /**\n     * Marks the end of the LContainerNode.\n     *\n     * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        // Inline containers cannot have style bindings, so we can read the value directly\n        var container = viewData[previousOrParentTNode.index];\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var nextIndex = container.data[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < container.data[VIEWS].length) {\n            removeView(container, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === null) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var lViewNode = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    var dynamicViewData = lViewNode.data;\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(lViewNode, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param containerNode where to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(containerNode, startIdx, viewBlockId) {\n        var views = containerNode.data[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i].data[TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(containerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the search here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        // Inline containers cannot have style bindings, so we can read the value directly\n        var container = viewData[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var lContainer = container.data;\n        var viewNode = scanForView(container, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewNode) {\n            var embeddedView = viewNode.data;\n            isParent = true;\n            enterView(embeddedView, embeddedView[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            var newView = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                newView[QUERIES] = lContainer[QUERIES].createView();\n            }\n            viewNode = createLNode(viewBlockId, 2 /* View */, null, null, null, newView);\n            enterView(newView, newView[TVIEW].node);\n        }\n        if (container) {\n            if (creationMode) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(container, viewNode, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewNode.data);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var viewHost = tView.node;\n        refreshDescendantViews();\n        leaveView(viewData[PARENT]);\n        previousOrParentTNode = viewHost;\n        isParent = false;\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var element = readElementValue(viewData[adjustedElementIndex]);\n        ngDevMode && assertNodeType(tView.data[adjustedElementIndex], 3 /* Element */);\n        ngDevMode &&\n            assertDefined(element.data, \"Component's host node should have an LViewData attached.\");\n        var hostView = element.data;\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            detectChangesInternal(hostView, element, hostView[CONTEXT]);\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentHost(viewData);\n        if (!componentNode.tNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.tNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.tNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var node = createLNode(nodeIndex, 1 /* Projection */, null, null, attrs || null, null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (node.tNode.projection === null)\n            node.tNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        isParent = false;\n        // re-distribution of projectable nodes is stored on a component's view level\n        var parent = getParentLNode(node);\n        var componentNode = findComponentHost(viewData);\n        var nodeToProject = componentNode.tNode.projection[selectorIndex];\n        var projectedView = componentNode.view;\n        var projectionNodeIndex = -1;\n        var renderParent = null;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentHost = findComponentHost(projectedView);\n                var firstProjectedNode = currentComponentHost.tNode.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView[nodeToProject.index];\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentHost.view;\n                    continue;\n                }\n            }\n            else {\n                var lNode = projectedView[nodeToProject.index];\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                lNode.tNode.flags |= 8192 /* isProjected */;\n                if (canInsertNativeNode(parent, viewData)) {\n                    var grandparent = void 0;\n                    if (renderParent == null) {\n                        renderParent = parent.tNode.type === 2 /* View */ ?\n                            (grandparent = getParentLNode(parent)) &&\n                                grandparent.data[RENDER_PARENT] :\n                            parent;\n                    }\n                    appendProjectedNode(lNode, parent, viewData, renderParent, projectedView);\n                }\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentNode.view) {\n                // move down into the view of the component we're projecting right now\n                var lNode = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = lNode.tNode;\n                projectedView = lNode.view;\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(node) {\n        // Because data flows down the component tree, ancestors do not need to be marked dirty\n        if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n            node.data[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Necessary to support OnPush components.\n     */\n    function wrapListenerWithDirtyLogic(view, listenerFn) {\n        return function (e) {\n            markViewDirty(view);\n            return listenerFn(e);\n        };\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Also wraps with preventDefault behavior.\n     */\n    function wrapListenerWithDirtyAndDefault(view, listenerFn) {\n        return function wrapListenerIn_markViewDirty(e) {\n            markViewDirty(view);\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView[PARENT] != null) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext');\n        scheduleTick(currentView[CONTEXT]);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext) {\n        if (rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                tickRootContext(rootContext);\n                res_1(null);\n                rootContext.clean = _CLEAN_PROMISE;\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(getRootView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        var lViewData = lElementNode.view;\n        while (lViewData[PARENT]) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var hostNode = _getComponentHostLElementNode(component);\n        ngDevMode &&\n            assertDefined(hostNode.data, 'Component host node should be attached to an LViewData instance.');\n        detectChangesInternal(hostNode.data, hostNode, component);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        checkNoChangesMode = true;\n        try {\n            detectChanges(component);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        checkNoChangesMode = true;\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, hostNode, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, null);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView[FLAGS], component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews();\n            updateViewQuery(viewQuery, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, flags, component) {\n        if (viewQuery && (flags & 1 /* CreationMode */)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, component) {\n        if (viewQuery) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        markViewDirty(lElementNode.view);\n    }\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(viewData[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(viewData[BINDING_INDEX]++, v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        viewData[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        return loadInternal(index, contextViewData);\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /** Retrieves a value from the `directives` array. */\n    function loadDirective(index) {\n        ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n        ngDevMode && assertDataInRange(index, directives);\n        return directives[index];\n    }\n    function loadQueryList(queryListIdx) {\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, viewData);\n    }\n    function loadElement(index) {\n        return loadElementInternal(index, viewData);\n    }\n    /** Gets the current binding value. */\n    function getBinding(bindingIndex) {\n        ngDevMode && assertDataInRange(viewData[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(viewData[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && assertLessThan(bindingIndex, viewData.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (viewData[bindingIndex] === NO_CHANGE) {\n            viewData[bindingIndex] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding and returns the value. */\n    function updateBinding(bindingIndex, value) {\n        return viewData[bindingIndex] = value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(bindingIndex, exp1);\n        return bindingUpdated(bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated(bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated2(bindingIndex + 2, exp3, exp4) || different;\n    }\n    function getTView() {\n        return tView;\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList) {\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (firstTemplatePass) {\n            var currentDirectiveIndex = directives.length - 1;\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(previousOrParentTNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n    function assertDataNext(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function _getComponentHostLElementNode(component, isRootComponent) {\n        ngDevMode && assertDefined(component, 'expecting component got null');\n        var lElementNode = isRootComponent ? getLElementFromRootComponent(component) :\n            getLElementFromComponent(component);\n        ngDevMode && assertDefined(component, 'object is not a component');\n        return lElementNode;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = componentType.ngComponentDef;\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window));\n        var rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef), createTView(-1, null, 1, 0, null, null, null), rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n        rootView[INJECTOR$1] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var elementNode;\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n            // Create directive instance with factory() and store at index 0 in directives array\n            component = baseDirectiveCreate(0, componentDef.factory(), componentDef, elementNode);\n            if (componentDef.hostBindings) {\n                queueHostBindingForCheck(0, componentDef.hostVars);\n            }\n            rootContext.components.push(component);\n            elementNode.data[CONTEXT] = component;\n            initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n            opts.hostFeatures && opts.hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n            executeInitAndContentHooks();\n            setHostBindings(rootView[TVIEW].hostBindings);\n            detectChangesInternal(elementNode.data, elementNode, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    function createRootContext(scheduler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var elementNode = _getComponentHostLElementNode(component);\n        // Root component is always created at dir index 0\n        var tView = elementNode.view[TVIEW];\n        queueInitHooks(0, def.onInit, def.doCheck, tView);\n        queueLifecycleHooks(elementNode.tNode.flags, tView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY$1 = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY$1);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var pipeTypes = componentDefinition.pipes;\n        var directiveTypes = componentDefinition.directives;\n        var declaredInputs = {};\n        var encapsulation = componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated;\n        var styles = componentDefinition.styles || EMPTY_ARRAY;\n        var animations = componentDefinition.animations || null;\n        var data = componentDefinition.data || {};\n        if (animations) {\n            data.animations = animations;\n        }\n        var def = {\n            type: type,\n            diPublic: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            hostVars: componentDefinition.hostVars || 0,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            inputs: invertObject(componentDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(componentDefinition.outputs),\n            exportAs: componentDefinition.exportAs || null,\n            onInit: type.prototype.ngOnInit || null,\n            doCheck: type.prototype.ngDoCheck || null,\n            afterContentInit: type.prototype.ngAfterContentInit || null,\n            afterContentChecked: type.prototype.ngAfterContentChecked || null,\n            afterViewInit: type.prototype.ngAfterViewInit || null,\n            afterViewChecked: type.prototype.ngAfterViewChecked || null,\n            onDestroy: type.prototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null,\n            pipeDefs: pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: data,\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: encapsulation,\n            providers: EMPTY_ARRAY,\n            viewProviders: EMPTY_ARRAY,\n            id: \"c\" + _renderCompCount++, styles: styles,\n        };\n        var feature = componentDefinition.features;\n        feature && feature.forEach(function (fn) { return fn(def); });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = type.ngComponentDef || type.ngDirectiveDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = type.ngPipeDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY$1;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty$1(objWithPropertyToExtract, target) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === target) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDefInternal} or a {@link DirectiveDefInternal}\n     * @param definition The definition to examine\n     */\n    function isComponentDef(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef(definition) && isComponentDef(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function () {\n                            superContentQueries_1();\n                            prevContentQueries_1();\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY$1) {\n            return {};\n        }\n        else if (Array.isArray(value) && value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     *\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     *\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n     *\n     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n     * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n     * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n     * the `TemplateRef` from a Component or a Directive via {@link Query}.\n     *\n     * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#\n     * createEmbeddedView}, which will create the View and attach it to the View Container.\n     *\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more Views can be attached.\n     *\n     * The container can contain two kinds of Views. Host Views, created by instantiating a\n     * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n     * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n     *\n     * The location of the View Container within the containing View is specified by the Anchor\n     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n     * have a single View Container.\n     *\n     * Root elements of Views attached to this container become siblings of the Anchor Element in\n     * the Rendered View.\n     *\n     * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n     * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n     *\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        return ViewContainerRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handeled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @experimental\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @experimental\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        return Renderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, context) {\n            this._view = _view;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._lViewNode = null;\n            this.context = context;\n        }\n        /** @internal */\n        ViewRef.prototype._setComponentContext = function (view, context) {\n            this._view = view;\n            this.context = context;\n        };\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = getRendererFactory();\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        return RootViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = component.ngComponentDef;\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () {\n            var useRaf = typeof requestAnimationFrame !== 'undefined' && typeof window !== 'undefined';\n            return useRaf ? requestAnimationFrame.bind(window) : setTimeout;\n        },\n    });\n    /**\n     * A function used to wrap the `RendererFactory2`.\n     * Used in tests to change the `RendererFactory2` into a `DebugRendererFactory2`.\n     */\n    var WRAP_RENDERER_FACTORY2 = new InjectionToken('WRAP_RENDERER_FACTORY2');\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            if (ngModule) {\n                var wrapper = ngModule.injector.get(WRAP_RENDERER_FACTORY2, function (v) { return v; });\n                rendererFactory = wrapper(ngModule.injector.get(RendererFactory2));\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            // The first index of the first selector is the tag name.\n            var componentTag = this.componentDef.selectors[0][0];\n            var rootContext = ngModule && !isInternalRootView ?\n                ngModule.injector.get(ROOT_CONTEXT) :\n                createRootContext(requestAnimationFrame.bind(window));\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef), createTView(-1, null, 1, 0, null, null, null), rootContext, this.componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n            rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var elementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                // Create element node at index 0 in data array\n                elementNode = hostElement(componentTag, hostNode, this.componentDef);\n                // Create directive instance with factory() and store at index 0 in directives array\n                component =\n                    baseDirectiveCreate(0, this.componentDef.factory(), this.componentDef, elementNode);\n                if (this.componentDef.hostBindings) {\n                    queueHostBindingForCheck(0, this.componentDef.hostVars);\n                }\n                rootContext.components.push(component);\n                initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n                elementNode.data[CONTEXT] = component;\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                LifecycleHooksFeature(component, this.componentDef);\n                setHostBindings(rootView[TVIEW].hostBindings);\n                // Transform the arrays of native nodes into a LNode structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var projection$$1 = elementNode.tNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            adjustBlueprintForNewNode(rootView);\n                            var lNode = createLNode(++index, 3 /* Element */, nodeList[j], null, null);\n                            if (previousTNode) {\n                                previousTNode.next = lNode.tNode;\n                            }\n                            else {\n                                firstTNode = lNode.tNode;\n                            }\n                            previousTNode = lNode.tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // Execute the template in creation mode only, and then turn off the CreationMode flag\n                renderEmbeddedTemplate(elementNode, elementNode.data[TVIEW], component, 1 /* Create */);\n                elementNode.data[FLAGS] &= ~1 /* CreationMode */;\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, hostNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._lViewNode.tNode.child = elementNode.tNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, hostNode) {\n            var _this = _super.call(this) || this;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(rootView);\n            _this.hostView._lViewNode = createLNode(-1, 2 /* View */, null, null, null, rootView);\n            _this.injector = injector;\n            _this.location = new ElementRef(hostNode);\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injector The node injector in which the directive should be registered\n     * @param type The directive to register\n     */\n    function bloomAdd(injector, type) {\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        if (b7) {\n            b6 ? (b5 ? (injector.bf7 |= mask) : (injector.bf6 |= mask)) :\n                (b5 ? (injector.bf5 |= mask) : (injector.bf4 |= mask));\n        }\n        else {\n            b6 ? (b5 ? (injector.bf3 |= mask) : (injector.bf2 |= mask)) :\n                (b5 ? (injector.bf1 |= mask) : (injector.bf0 |= mask));\n        }\n    }\n    function getOrCreateNodeInjector() {\n        ngDevMode && assertPreviousIsParent();\n        return getOrCreateNodeInjectorForNode(getPreviousOrParentNode());\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param node for which an injector should be retrieved / created.\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(node) {\n        var nodeInjector = node.nodeInjector;\n        var parent = getParentLNode(node);\n        var parentInjector = parent && parent.nodeInjector;\n        if (nodeInjector != parentInjector) {\n            return nodeInjector;\n        }\n        return node.nodeInjector = {\n            parent: parentInjector,\n            node: node,\n            bf0: 0,\n            bf1: 0,\n            bf2: 0,\n            bf3: 0,\n            bf4: 0,\n            bf5: 0,\n            bf6: 0,\n            bf7: 0,\n            cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n            cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n            cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n            cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n            cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n            cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n            cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n            cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n            templateRef: null,\n            viewContainerRef: null,\n            elementRef: null,\n            changeDetectorRef: null,\n        };\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param def The definition of the directive to be made public\n     */\n    function diPublicInInjector(di, def) {\n        bloomAdd(di, def.type);\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param def The definition of the directive to be made public\n     */\n    function diPublic(def) {\n        diPublicInInjector(getOrCreateNodeInjector(), def);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n    }\n    /**\n     * Creates an ElementRef and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef() {\n        return getOrCreateElementRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef() {\n        return getOrCreateTemplateRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef() {\n        return getOrCreateContainerRef(getOrCreateNodeInjector());\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n    }\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getOrCreateNodeInjector());\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @experimental\n     */\n    function injectAttribute(attrNameToInject) {\n        var tNode = getPreviousOrParentTNode();\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     * Or, if it already exists, retrieves the existing instance.\n     *\n     * @returns The ChangeDetectorRef to use\n     */\n    function getOrCreateChangeDetectorRef(di, context) {\n        if (di.changeDetectorRef)\n            return di.changeDetectorRef;\n        var currentNode = di.node;\n        if (isComponent(currentNode.tNode)) {\n            return di.changeDetectorRef = new ViewRef(currentNode.data, context);\n        }\n        else if (currentNode.tNode.type === 3 /* Element */) {\n            return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view[HOST_NODE]);\n        }\n        return null;\n    }\n    /** Gets or creates ChangeDetectorRef for the closest host component */\n    function getOrCreateHostChangeDetector(currentNode) {\n        var hostNode = getClosestComponentAncestor(currentNode);\n        var hostInjector = hostNode.nodeInjector;\n        var existingRef = hostInjector && hostInjector.changeDetectorRef;\n        return existingRef ?\n            existingRef :\n            new ViewRef(hostNode.data, hostNode\n                .view[DIRECTIVES][hostNode.tNode.flags >> 15 /* DirectiveStartingIndexShift */]);\n    }\n    function getOrCreateRenderer2(di) {\n        var renderer = di.node.view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /**\n     * If the node is an embedded view, traverses up the view tree to return the closest\n     * ancestor view that is attached to a component. If it's already a component node,\n     * returns itself.\n     */\n    function getClosestComponentAncestor(node) {\n        while (node.tNode.type === 2 /* View */) {\n            node = node.view[HOST_NODE];\n        }\n        return node;\n    }\n    /**\n     * Returns the value associated to the given token from the injectors.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(nodeInjector, token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBit(token);\n        // If the token has a bloom hash, then it is a directive that is public to the injection system\n        // (diPublic) otherwise fall back to the module injector.\n        if (bloomHash !== null) {\n            var injector = nodeInjector;\n            while (injector) {\n                // Get the closest potential matching injector (upwards in the injector tree) that\n                // *potentially* has the token.\n                injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n                // If no injector is found, we *know* that there is no ancestor injector that contains the\n                // token, so we abort.\n                if (!injector) {\n                    break;\n                }\n                // At this point, we have an injector which *may* contain the token, so we step through the\n                // directives associated with the injector's corresponding node to get the directive instance.\n                var node = injector.node;\n                var nodeFlags = node.tNode.flags;\n                var count = nodeFlags & 4095 /* DirectiveCountMask */;\n                if (count !== 0) {\n                    var start = nodeFlags >> 15 /* DirectiveStartingIndexShift */;\n                    var end = start + count;\n                    var defs = node.view[TVIEW].directives;\n                    for (var i = start; i < end; i++) {\n                        // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                        // and matches the given token, return the directive instance.\n                        var directiveDef = defs[i];\n                        if (directiveDef.type === token && directiveDef.diPublic) {\n                            return node.view[DIRECTIVES][i];\n                        }\n                    }\n                }\n                // If we *didn't* find the directive for the token and we are searching the current node's\n                // injector, it's possible the directive is on this node and hasn't been created yet.\n                var instance = void 0;\n                if (injector === nodeInjector &&\n                    (instance = searchMatchesQueuedForCreation(node, token))) {\n                    return instance;\n                }\n                // The def wasn't found anywhere on this node, so it was a false positive.\n                // If flags permit, traverse up the tree and continue searching.\n                if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                    injector = null;\n                }\n                else {\n                    injector = injector.parent;\n                }\n            }\n        }\n        var moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    function searchMatchesQueuedForCreation(node, token) {\n        var matches = node.view[TVIEW].currentMatches;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                if (def.type === token) {\n                    return resolveDirective(def, i + 1, matches, node.view[TVIEW]);\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBit(token) {\n        var id = token[NG_ELEMENT_ID];\n        return typeof id === 'number' ? id & BLOOM_MASK : null;\n    }\n    /**\n     * Finds the closest injector that might have a certain directive.\n     *\n     * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n     * check and a starting injector, this function traverses up injectors until it finds an\n     * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n     * injector may have that directive. It only *may* have the directive because directives begin\n     * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n     * different directive sharing the bit.\n     *\n     * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n     * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n     * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n     * the directive and do not need to be checked.\n     *\n     * @param injector The starting node injector to check\n     * @param  bloomBit The bit to check in each injector's bloom filter\n     * @param  flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n     * @returns An injector that might have the directive\n     */\n    function bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n        // match.\n        var injector = flags & 4 /* SkipSelf */ ? startInjector.parent : startInjector;\n        while (injector) {\n            // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n            // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n            // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n            var value = void 0;\n            if (b7) {\n                value = b6 ? (b5 ? injector.bf7 : injector.bf6) : (b5 ? injector.bf5 : injector.bf4);\n            }\n            else {\n                value = b6 ? (b5 ? injector.bf3 : injector.bf2) : (b5 ? injector.bf1 : injector.bf0);\n            }\n            // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n            // this injector is a potential match.\n            if (value & mask) {\n                return injector;\n            }\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                return null;\n            }\n            // If the current injector does not have the directive, check the bloom filters for the ancestor\n            // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n            if (b7) {\n                value = b6 ? (b5 ? injector.cbf7 : injector.cbf6) : (b5 ? injector.cbf5 : injector.cbf4);\n            }\n            else {\n                value = b6 ? (b5 ? injector.cbf3 : injector.cbf2) : (b5 ? injector.cbf1 : injector.cbf0);\n            }\n            // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n            // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n            if (value & mask) {\n                injector = injector.parent;\n            }\n            else {\n                return null;\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks whether the current injector and its parent are in the same host view.\n     *\n     * This is necessary to support @Host() decorators. If @Host() is set, we should stop searching once\n     * the injector and its parent view don't match because it means we'd cross the view boundary.\n     */\n    function sameHostView(injector) {\n        return !!injector.parent && injector.parent.node.view === injector.node.view;\n    }\n    var ReadFromInjectorFn = /** @class */ (function () {\n        function ReadFromInjectorFn(read) {\n            this.read = read;\n        }\n        return ReadFromInjectorFn;\n    }());\n    /**\n     * Creates an ElementRef for a given node injector and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @param di The node injector where we should store a created ElementRef\n     * @returns The ElementRef instance to use\n     */\n    function getOrCreateElementRef(di) {\n        return di.elementRef || (di.elementRef = new ElementRef$1(di.node.native));\n    }\n    /** A ref to a node's native element. */\n    var ElementRef$1 = /** @class */ (function () {\n        function ElementRef$$1(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef$$1;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function getOrCreateContainerRef(di) {\n        if (!di.viewContainerRef) {\n            var vcRefHost = di.node;\n            var hostTNode = vcRefHost.tNode;\n            ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n            var hostParent = getParentLNode(vcRefHost);\n            var lContainer = createLContainer(hostParent, vcRefHost.view, true);\n            var comment = vcRefHost.view[RENDERER].createComment(ngDevMode ? 'container' : '');\n            var lContainerNode = createLNodeObject(0 /* Container */, vcRefHost.view, vcRefHost.nodeInjector, comment, lContainer);\n            appendChild(hostParent, comment, vcRefHost.view);\n            if (!hostTNode.dynamicContainerNode) {\n                hostTNode.dynamicContainerNode =\n                    createTNode(0 /* Container */, -1, null, null, hostTNode, null);\n            }\n            lContainerNode.tNode = hostTNode.dynamicContainerNode;\n            vcRefHost.dynamicLContainerNode = lContainerNode;\n            addToViewTree(vcRefHost.view, hostTNode.index, lContainer);\n            di.viewContainerRef = new ViewContainerRef$1(lContainerNode, vcRefHost);\n        }\n        return di.viewContainerRef;\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_lInjector) {\n            this._lInjector = _lInjector;\n        }\n        NodeInjector.prototype.get = function (token) {\n            if (token === TemplateRef) {\n                return getOrCreateTemplateRef(this._lInjector);\n            }\n            if (token === ViewContainerRef) {\n                return getOrCreateContainerRef(this._lInjector);\n            }\n            if (token === ElementRef) {\n                return getOrCreateElementRef(this._lInjector);\n            }\n            if (token === ChangeDetectorRef) {\n                return getOrCreateChangeDetectorRef(this._lInjector, null);\n            }\n            if (token === Renderer2) {\n                return getOrCreateRenderer2(this._lInjector);\n            }\n            return getOrCreateInjectable(this._lInjector, token);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * A ref to a container that enables adding and removing views from that container\n     * imperatively.\n     */\n    var ViewContainerRef$1 = /** @class */ (function () {\n        function ViewContainerRef$$1(_lContainerNode, _hostNode) {\n            this._lContainerNode = _lContainerNode;\n            this._hostNode = _hostNode;\n            this._viewRefs = [];\n        }\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"element\", {\n            get: function () {\n                var injector = getOrCreateNodeInjectorForNode(this._hostNode);\n                return getOrCreateElementRef(injector);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"injector\", {\n            get: function () {\n                var injector = getOrCreateNodeInjectorForNode(this._hostNode);\n                return new NodeInjector(injector);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var parentLInjector = getParentLNode(this._hostNode).nodeInjector;\n                return parentLInjector ? new NodeInjector(parentLInjector) : new NullInjector();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef$$1.prototype.clear = function () {\n            var lContainer = this._lContainerNode.data;\n            while (lContainer[VIEWS].length) {\n                this.remove(0);\n            }\n        };\n        ViewContainerRef$$1.prototype.get = function (index) { return this._viewRefs[index] || null; };\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"length\", {\n            get: function () {\n                var lContainer = this._lContainerNode.data;\n                return lContainer[VIEWS].length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef$$1.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var adjustedIdx = this._adjustIndex(index);\n            var viewRef = templateRef\n                .createEmbeddedView(context || {}, this._lContainerNode, adjustedIdx);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && contextInjector) {\n                ngModuleRef = contextInjector.get(NgModuleRef, null);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef$$1.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var lViewNode = viewRef._lViewNode;\n            var adjustedIdx = this._adjustIndex(index);\n            insertView(this._lContainerNode, lViewNode, adjustedIdx);\n            var views = this._lContainerNode.data[VIEWS];\n            var beforeNode = adjustedIdx + 1 < views.length ?\n                (getChildLNode(views[adjustedIdx + 1])).native :\n                this._lContainerNode.native;\n            addRemoveViewFromContainer(this._lContainerNode, lViewNode.data, true, beforeNode);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.move = function (viewRef, newIndex) {\n            var index = this.indexOf(viewRef);\n            this.detach(index);\n            this.insert(viewRef, this._adjustIndex(newIndex));\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n        ViewContainerRef$$1.prototype.remove = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            removeView(this._lContainerNode, adjustedIdx);\n            this._viewRefs.splice(adjustedIdx, 1);\n        };\n        ViewContainerRef$$1.prototype.detach = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            detachView(this._lContainerNode, adjustedIdx);\n            return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n        };\n        ViewContainerRef$$1.prototype._adjustIndex = function (index, shift) {\n            if (shift === void 0) { shift = 0; }\n            if (index == null) {\n                return this._lContainerNode.data[VIEWS].length + shift;\n            }\n            if (ngDevMode) {\n                assertGreaterThan(index, -1, 'index must be positive');\n                // +1 because it's legal to insert at the end.\n                assertLessThan(index, this._lContainerNode.data[VIEWS].length + 1 + shift, 'index');\n            }\n            return index;\n        };\n        return ViewContainerRef$$1;\n    }());\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @param di The node injector where we should store a created TemplateRef\n     * @returns The TemplateRef instance to use\n     */\n    function getOrCreateTemplateRef(di) {\n        if (!di.templateRef) {\n            var hostNode = di.node;\n            var hostTNode = hostNode.tNode;\n            ngDevMode && assertNodeType(hostTNode, 0 /* Container */);\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            di.templateRef = new TemplateRef$1(hostNode.view, getOrCreateElementRef(di), hostTNode.tViews, getRenderer(), hostNode.data[QUERIES]);\n        }\n        return di.templateRef;\n    }\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = typeAny.ngComponentDef || typeAny.ngDirectiveDef || typeAny.ngPipeDef ||\n            typeAny.ngInjectableDef || typeAny.ngInjectorDef;\n        if (def === undefined || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n    var TemplateRef$1 = /** @class */ (function () {\n        function TemplateRef$$1(_declarationParentView, elementRef, _tView, _renderer, _queries) {\n            this._declarationParentView = _declarationParentView;\n            this.elementRef = elementRef;\n            this._tView = _tView;\n            this._renderer = _renderer;\n            this._queries = _queries;\n        }\n        TemplateRef$$1.prototype.createEmbeddedView = function (context, containerNode, index) {\n            var viewNode = createEmbeddedViewNode(this._tView, context, this._declarationParentView, this._renderer, this._queries);\n            if (containerNode) {\n                insertView(containerNode, viewNode, index);\n            }\n            renderEmbeddedTemplate(viewNode, this._tView, context, 1 /* Create */);\n            var viewRef = new ViewRef(viewNode.data, context);\n            viewRef._lViewNode = viewNode;\n            return viewRef;\n        };\n        return TemplateRef$$1;\n    }());\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(lNode) {\n        return getOrCreateTemplateRef(getOrCreateNodeInjectorForNode(lNode));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This feature publishes the directive (or component) into the DI system, making it visible to\n     * others for injection.\n     *\n     * @param definition\n     */\n    function PublicFeature(definition) {\n        definition.diPublic = diPublic;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /{\\$([^}]+)}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, templateRoots, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n        var instructions = (new Array(nbTemplates)).fill(undefined);\n        generateMappingInstructions(0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param tmplIndex The order of appearance of the template.\n     * 0 for the root template, following indexes match the order in `templateRoots`.\n     * @param partIndex The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(tmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex) {\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        var currentElements = elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n        var currentExpressions = expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n        instructions[tmplIndex] = tmplInstructions;\n        for (; partIndex < translationParts.length; partIndex++) {\n            // The value can either be text or the name of a placeholder (element/template root/expression)\n            var value = translationParts[partIndex];\n            // Odd indexes are placeholders\n            if (partIndex & 1) {\n                var phIndex = void 0;\n                if (currentElements && currentElements[value] !== undefined) {\n                    phIndex = currentElements[value];\n                    // The placeholder represents a DOM element, add an instruction to move it\n                    var templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n                    if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n                        // This is a template root, it has no closing tag, not treating it as an element\n                        tmplInstructions.push(phIndex | -2147483648 /* TemplateRoot */);\n                    }\n                    else {\n                        tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                        openedTagCount++;\n                    }\n                    phVisited.push(value);\n                }\n                else if (currentExpressions && currentExpressions[value] !== undefined) {\n                    phIndex = currentExpressions[value];\n                    // The placeholder represents an expression, add an instruction to move it\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else {\n                    // It is a closing tag\n                    tmplInstructions.push(-1073741824 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (phIndex !== undefined && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (templateRoots) {\n                    var newTmplIndex = templateRoots.indexOf(value) + 1;\n                    if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n                        partIndex = generateMappingInstructions(newTmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n                    }\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Add instructions to remove elements that are not used in the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        // Add instructions to remove expressions that are not used in the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index.toString(2).length, 28, \"Index \" + index + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                tmplInstructions.push(i | -1610612736 /* Any */);\n            }\n        }\n        return partIndex;\n    }\n    function appendI18nNode(node, parentNode, previousNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = _getViewData();\n        appendChild(parentNode, node.native || null, viewData);\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = node.view[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousNode === parentNode && node.tNode !== parentNode.tNode.child) {\n                node.tNode.next = parentNode.tNode.child;\n                parentNode.tNode.child = node.tNode;\n            }\n            else if (previousNode !== parentNode && node.tNode !== previousNode.tNode.next) {\n                node.tNode.next = previousNode.tNode.next;\n                previousNode.tNode.next = node.tNode;\n            }\n            else {\n                node.tNode.next = null;\n            }\n            if (parentNode.view === node.view)\n                node.tNode.parent = parentNode.tNode;\n        }\n        // Template containers also have a comment node for the `ViewContainerRef` that should be moved\n        if (node.tNode.type === 0 /* Container */ && node.dynamicLContainerNode) {\n            appendChild(parentNode, node.dynamicLContainerNode.native || null, viewData);\n            if (firstTemplatePass) {\n                node.tNode.dynamicContainerNode = node.dynamicLContainerNode.tNode;\n                node.dynamicLContainerNode.tNode.parent = node.tNode;\n            }\n            return node.dynamicLContainerNode;\n        }\n        return node;\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = _getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var localParentNode = getParentLNode(load(startIndex)) || getPreviousOrParentNode();\n        var localPreviousNode = localParentNode;\n        resetComponentState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var element$$1 = load(instruction & 536870911 /* IndexMask */);\n                    localPreviousNode = appendI18nNode(element$$1, localParentNode, localPreviousNode);\n                    localParentNode = element$$1;\n                    break;\n                case 1610612736 /* Expression */:\n                case -2147483648 /* TemplateRoot */:\n                case -1610612736 /* Any */:\n                    var node = load(instruction & 536870911 /* IndexMask */);\n                    localPreviousNode = appendI18nNode(node, localParentNode, localPreviousNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createLNode takes a raw index (not adjusted by header offset).\n                    adjustBlueprintForNewNode(viewData);\n                    var lastNodeIndex = viewData.length - 1;\n                    var textLNode = createLNode(lastNodeIndex - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                    localPreviousNode = appendI18nNode(textLNode, localParentNode, localPreviousNode);\n                    resetComponentState();\n                    break;\n                case -1073741824 /* CloseNode */:\n                    localPreviousNode = localParentNode;\n                    localParentNode = getParentLNode(localParentNode);\n                    break;\n                case -536870912 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var index = instruction & 536870911 /* IndexMask */;\n                    var removedNode = load(index);\n                    var parentNode = getParentLNode(removedNode);\n                    removeChild(parentNode, removedNode.native || null, viewData);\n                    // For template containers we also need to remove their `ViewContainerRef` from the DOM\n                    if (removedNode.tNode.type === 0 /* Container */ && removedNode.dynamicLContainerNode) {\n                        removeChild(parentNode, removedNode.dynamicLContainerNode.native || null, viewData);\n                        removedNode.dynamicLContainerNode.tNode.detached = true;\n                        removedNode.dynamicLContainerNode.data[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of an expression has changed and replaces it by its value in a translation,\n     * or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation1(instructions, v0) {\n        var different = bindingUpdated(_getViewData()[BINDING_INDEX]++, v0);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                res += stringify$1(v0);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation2(instructions, v0, v1) {\n        var viewData = _getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b1 ? v1 : v0;\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation3(instructions, v0, v1, v2) {\n        var viewData = _getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? v2 : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation4(instructions, v0, v1, v2, v3) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation5(instructions, v0, v1, v2, v3, v4) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */ function i18nInterpolation6(instructions, v0, v1, v2, v3, v4, v5) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation7(instructions, v0, v1, v2, v3, v4, v5, v6) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     * @param v7 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation8(instructions, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var viewData = _getViewData();\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$2 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @experimental\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) &&\n                            token.ngInjectableDef ||\n                            undefined;\n                        if (def !== undefined && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = injectableDefRecord(token);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = defOrWrappedDef.ngInjectorDef;\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = ngModule.ngInjectorDef;\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$2) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$2;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefRecord(token) {\n        var def = token.ngInjectableDef;\n        if (def === undefined) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return makeRecord(function () { return new token(); });\n        }\n        return makeRecord(def.factory);\n    }\n    function providerToRecord(provider) {\n        var token = resolveForwardRef(provider);\n        var value = NOT_YET;\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefRecord(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                value = provider.useValue;\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefRecord(classRef_1);\n                }\n            }\n        }\n        return makeRecord(factory, value);\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = ngModuleType.ngModuleDef;\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |--------consts--------|----------------vars----------------|------ hostVars (dir1) ------|\n     * ---------------------------------------------------------------------------------------------\n     * | nodes / refs / pipes | bindings | pure function bindings  | host bindings  | host slots |\n     * ---------------------------------------------------------------------------------------------\n     *                        ^                                    ^\n     *             TView.bindingStartIndex            TView.hostBindingStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the hostBindingStartIndex +\n     * any hostVars in directives evaluated before it.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return getCreationMode() ?\n            updateBinding(bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(bindingIndex, exp) ?\n            updateBinding(bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated2(bindingIndex, exp1, exp2) ?\n            updateBinding(bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated3(bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(bindingIndex + 4, exp5) || different ?\n            updateBinding(bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (node) {\n            add(this.deep, node);\n            if (isContentQueryHost(node.tNode)) {\n                add(this.shallow, node);\n                if (node.tNode.parent && isContentQueryHost(node.tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, node);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(node.tNode) && add(this.shallow, node);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param node Node on which directives are present.\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(node, type) {\n        var defs = node.view[TVIEW].directives;\n        var flags = node.tNode.flags;\n        var count = flags & 4095 /* DirectiveCountMask */;\n        var start = flags >> 15 /* DirectiveStartingIndexShift */;\n        var end = start + count;\n        for (var i = start; i < end; i++) {\n            var def = defs[i];\n            if (def.type === type && def.diPublic) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n        if (read instanceof ReadFromInjectorFn) {\n            return read.read(nodeInjector, node, directiveIdx);\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(node, read);\n            if (matchingIdx !== null) {\n                return node.view[DIRECTIVES][matchingIdx];\n            }\n        }\n        return null;\n    }\n    function add(query, node) {\n        var nodeInjector = getOrCreateNodeInjectorForNode(node);\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var directiveIdx = getIdxOfMatchingDirective(node, type);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // if read token and / or strategy is not specified, use type as read token\n                    var result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(node.tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        // a node is matching a predicate - determine what to read\n                        // note that queries using name selector must specify read strategy\n                        ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n                        var result = readFromNodeInjector(nodeInjector, node, predicate.read, directiveIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     *\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts`s have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ÉµdefineBase': defineBase,\n        'ÉµdefineComponent': defineComponent,\n        'ÉµdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ÉµdefineNgModule': defineNgModule,\n        'ÉµdefinePipe': definePipe,\n        'ÉµdirectiveInject': directiveInject,\n        'ÉµgetFactoryOf': getFactoryOf,\n        'ÉµgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ÉµinjectAttribute': injectAttribute,\n        'ÉµinjectChangeDetectorRef': injectChangeDetectorRef,\n        'ÉµinjectElementRef': injectElementRef,\n        'ÉµinjectTemplateRef': injectTemplateRef,\n        'ÉµinjectViewContainerRef': injectViewContainerRef,\n        'ÉµtemplateRefExtractor': templateRefExtractor,\n        'ÉµinjectRenderer2': injectRenderer2,\n        'ÉµNgOnChangesFeature': NgOnChangesFeature,\n        'ÉµPublicFeature': PublicFeature,\n        'ÉµInheritDefinitionFeature': InheritDefinitionFeature,\n        'ÉµelementAttribute': elementAttribute,\n        'Éµbind': bind,\n        'Éµcontainer': container,\n        'ÉµnextContext': nextContext,\n        'ÉµcontainerRefreshStart': containerRefreshStart,\n        'ÉµcontainerRefreshEnd': containerRefreshEnd,\n        'ÉµloadDirective': loadDirective,\n        'ÉµloadQueryList': loadQueryList,\n        'ÉµnamespaceHTML': namespaceHTML,\n        'ÉµnamespaceMathML': namespaceMathML,\n        'ÉµnamespaceSVG': namespaceSVG,\n        'ÉµelementStart': elementStart,\n        'ÉµelementEnd': elementEnd,\n        'Éµelement': element,\n        'ÉµEC': elementContainerStart,\n        'ÉµeC': elementContainerEnd,\n        'ÉµpureFunction0': pureFunction0,\n        'ÉµpureFunction1': pureFunction1,\n        'ÉµpureFunction2': pureFunction2,\n        'ÉµpureFunction3': pureFunction3,\n        'ÉµpureFunction4': pureFunction4,\n        'ÉµpureFunction5': pureFunction5,\n        'ÉµpureFunction6': pureFunction6,\n        'ÉµpureFunction7': pureFunction7,\n        'ÉµpureFunction8': pureFunction8,\n        'ÉµpureFunctionV': pureFunctionV,\n        'ÉµgetCurrentView': getCurrentView,\n        'ÉµrestoreView': restoreView,\n        'Éµinterpolation1': interpolation1,\n        'Éµinterpolation2': interpolation2,\n        'Éµinterpolation3': interpolation3,\n        'Éµinterpolation4': interpolation4,\n        'Éµinterpolation5': interpolation5,\n        'Éµinterpolation6': interpolation6,\n        'Éµinterpolation7': interpolation7,\n        'Éµinterpolation8': interpolation8,\n        'ÉµinterpolationV': interpolationV,\n        'ÉµelementClassProp': elementClassProp,\n        'Éµlistener': listener,\n        'Éµload': load,\n        'Éµprojection': projection,\n        'ÉµelementProperty': elementProperty,\n        'ÉµpipeBind1': pipeBind1,\n        'ÉµpipeBind2': pipeBind1,\n        'ÉµpipeBind3': pipeBind3,\n        'ÉµpipeBind4': pipeBind4,\n        'ÉµpipeBindV': pipeBindV,\n        'ÉµprojectionDef': projectionDef,\n        'Éµpipe': pipe,\n        'Éµquery': query,\n        'ÉµqueryRefresh': queryRefresh,\n        'ÉµregisterContentQuery': registerContentQuery,\n        'Éµreference': reference,\n        'ÉµelementStyling': elementStyling,\n        'ÉµelementStylingMap': elementStylingMap,\n        'ÉµelementStylingProp': elementStyleProp,\n        'ÉµelementStylingApply': elementStylingApply,\n        'Éµtemplate': template,\n        'Éµtext': text,\n        'ÉµtextBinding': textBinding,\n        'ÉµembeddedViewStart': embeddedViewStart,\n        'ÉµembeddedViewEnd': embeddedViewEnd,\n        'Éµzh': sanitizeHtml,\n        'Éµzs': sanitizeStyle,\n        'Éµzss': defaultStyleSanitizer,\n        'Éµzr': sanitizeResourceUrl,\n        'Éµzc': sanitizeScript,\n        'Éµzu': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TARGET = {};\n    var NG_COMPONENT_DEF = getClosureSafeProperty$1({ ngComponentDef: TARGET }, TARGET);\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty$1({ ngDirectiveDef: TARGET }, TARGET);\n    var NG_INJECTABLE_DEF = getClosureSafeProperty$1({ ngInjectableDef: TARGET }, TARGET);\n    var NG_INJECTOR_DEF = getClosureSafeProperty$1({ ngInjectorDef: TARGET }, TARGET);\n    var NG_PIPE_DEF = getClosureSafeProperty$1({ ngPipeDef: TARGET }, TARGET);\n    var NG_MODULE_DEF = getClosureSafeProperty$1({ ngModuleDef: TARGET }, TARGET);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     *\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        return deps.map(function (dep) { return reflectDependency(dep); });\n    }\n    function reflectDependency(dep) {\n        var meta = {\n            token: new compiler.LiteralExpr(null),\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            if (token === ElementRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ElementRef;\n            }\n            else if (token === Injector) {\n                meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n            }\n            else if (token === TemplateRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.TemplateRef;\n            }\n            else if (token === ViewContainerRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ViewContainerRef;\n            }\n            else {\n                meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            }\n            meta.token = new compiler.WrappedNodeExpr(token);\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = new compiler.WrappedNodeExpr(param.token);\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = new compiler.LiteralExpr(param.attributeName);\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        compileNgModuleDefs(moduleType, ngModule);\n        setScopeOnDeclaredComponents(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            get: function () {\n                if (ngModuleDef === null) {\n                    var meta = {\n                        type: wrap(moduleType),\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2).map(wrap),\n                        declarations: declarations.map(wrapReference),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        emitInline: true,\n                    };\n                    var res = compiler.compileNgModule(meta);\n                    ngModuleDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", []);\n                }\n                return ngModuleDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: wrap(moduleType),\n                        deps: reflectDependencies(moduleType),\n                        providers: new compiler.WrappedNodeExpr(ngModule.providers || EMPTY_ARRAY$2),\n                        imports: new compiler.WrappedNodeExpr([\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ]),\n                    };\n                    var res = compiler.compileInjector(meta);\n                    ngInjectorDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", res.statements);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = component.ngComponentDef;\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return dir.ngDirectiveDef || dir.ngComponentDef; })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return pipe.ngPipeDef; });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = moduleType.ngModuleDef;\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (declaredWithDefs.ngPipeDef !== undefined) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (exportedTyped.ngPipeDef !== undefined) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function wrap(value) {\n        return new compiler.WrappedNodeExpr(value);\n    }\n    function wrapReference(value) {\n        var wrapped = wrap(value);\n        return { value: wrapped, type: wrapped };\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return value.ngModuleDef !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    // The ConstantPool is a requirement of the JIT'er.\n                    var constantPool = new compiler.ConstantPool();\n                    // Parse the template and check for errors.\n                    var template = compiler.parseTemplate(metadata.template, \"ng://\" + stringify(type) + \"/template.html\", {\n                        preserveWhitespaces: metadata.preserveWhitespaces || false,\n                    }, '');\n                    if (template.errors !== undefined) {\n                        var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                        throw new Error(\"Errors during JIT compilation of template for \" + stringify(type) + \": \" + errors);\n                    }\n                    // Compile the component metadata, including template, into an expression.\n                    // TODO(alxhub): implement inputs, outputs, queries, etc.\n                    var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [], wrapDirectivesInClosure: false, styles: metadata.styles || [], encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, animations: metadata.animations || null }), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngComponentDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", preStatements);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var constantPool = new compiler.ConstantPool();\n                    var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                    var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngDirectiveDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, preStatements);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        var host = extractHostBindings(metadata, propMetadata);\n        var inputsFromMetadata = parseInputOutputs(metadata.inputs || []);\n        var outputsFromMetadata = parseInputOutputs(metadata.outputs || []);\n        var inputsFromType = {};\n        var outputsFromType = {};\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isInput(ann)) {\n                        inputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                    else if (isOutput(ann)) {\n                        outputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return {\n            name: type.name,\n            type: new compiler.WrappedNodeExpr(type),\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type), host: host,\n            inputs: __assign({}, inputsFromMetadata, inputsFromType),\n            outputs: __assign({}, outputsFromMetadata, outputsFromType),\n            queries: [],\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n        };\n    }\n    function extractHostBindings(metadata, propMetadata) {\n        // First parse the declarations from the metadata.\n        var _a = compiler.parseHostBindings(metadata.host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n        if (Object.keys(animations).length > 0) {\n            throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n        }\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isHostBinding(ann)) {\n                        properties[ann.hostPropertyName || field] = field;\n                    }\n                    else if (isHostListener(ann)) {\n                        listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                    }\n                });\n            }\n        };\n        // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return { attributes: attributes, listeners: listeners, properties: properties };\n    }\n    function isInput(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function isOutput(value) {\n        return value.ngMetadataName === 'Output';\n    }\n    function isHostBinding(value) {\n        return value.ngMetadataName === 'HostBinding';\n    }\n    function isHostListener(value) {\n        return value.ngMetadataName === 'HostListener';\n    }\n    function parseInputOutputs(values) {\n        return values.reduce(function (map, value) {\n            var _a = __read(value.split(',').map(function (piece) { return piece.trim(); }), 2), field = _a[0], property = _a[1];\n            map[field] = property || field;\n            return map;\n        }, {});\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Check whether the injectable metadata includes a provider specification.\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var ctorDeps = reflectDependencies(type);\n                    var userDeps = undefined;\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        userDeps = convertDependencies(meta.deps);\n                    }\n                    // Decide which flavor of factory to generate, based on the provider specified.\n                    // Only one of the use* fields should be set.\n                    var useClass = undefined;\n                    var useFactory = undefined;\n                    var useValue = undefined;\n                    var useExisting = undefined;\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        useClass = new compiler.WrappedNodeExpr(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    var _a = compiler.compileInjectable({\n                        name: type.name,\n                        type: new compiler.WrappedNodeExpr(type),\n                        providedIn: computeProvidedIn(meta.providedIn),\n                        useClass: useClass,\n                        useFactory: useFactory,\n                        useValue: useValue,\n                        useExisting: useExisting,\n                        ctorDeps: ctorDeps,\n                        userDeps: userDeps,\n                    }), expression = _a.expression, statements = _a.statements;\n                    def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", statements);\n                }\n                return def;\n            },\n        });\n    }\n    function computeProvidedIn(providedIn) {\n        if (providedIn == null || typeof providedIn === 'string') {\n            return new compiler.LiteralExpr(providedIn);\n        }\n        else {\n            return new compiler.WrappedNodeExpr(providedIn);\n        }\n    }\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    var GET_PROPERTY_NAME$1 = {};\n    var USE_VALUE$1 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$1 }, GET_PROPERTY_NAME$1);\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var sourceMapUrl = \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\";\n                    var name_1 = type.name;\n                    var res = compiler.compilePipeFromMetadata({\n                        name: name_1,\n                        type: new compiler.WrappedNodeExpr(type),\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true,\n                    });\n                    ngPipeDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, res.statements);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ivyEnabled = true;\n    var R3_COMPILE_COMPONENT = compileComponent;\n    var R3_COMPILE_DIRECTIVE = compileDirective;\n    var R3_COMPILE_INJECTABLE = compileInjectable;\n    var R3_COMPILE_NGMODULE = compileNgModule;\n    var R3_COMPILE_PIPE = compilePipe;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return R3_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return R3_COMPILE_COMPONENT(type, meta); });\n    /**\n     *\n     *\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return R3_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Used to get the minified alias of ngBaseDef\n     */\n    var NG_BASE_DEF = Object.keys({ ngBaseDef: true })[0];\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     *\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     *\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return R3_COMPILE_NGMODULE(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     *\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    var VERSION = new Version('7.0.0-beta.5+13.sha-ed266da');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Injectable decorator and metadata.\n    *\n    * @Annotation\n    */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return R3_COMPILE_INJECTABLE(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @deprecated No replacement\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @experimental\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_NGCC__;\n    function compileNgModuleFactory__PRE_NGCC__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler$$1 = compilerFactory.createCompiler([options]);\n        return compiler$$1.compileModuleAsync(moduleType);\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @experimental\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular View.\n     *\n     * <!-- TODO: move the next two paragraphs to the dev guide -->\n     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n     * Elements which are created and destroyed together.\n     *\n     * Properties of elements in a View can change, but the structure (number and order) of elements in\n     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n     * removing nested Views via a `ViewContainerRef`. Each View can contain many View Containers.\n     * <!-- /TODO -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * Given this template...\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * We have two `TemplateRef`s:\n     *\n     * Outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * Inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * Notice that the original template is broken down into two separate `TemplateRef`s.\n     *\n     * The outer/inner `TemplateRef`s are then assembled into views like so:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this.nativeNode = nativeNode;\n            this._debugContext = _debugContext;\n            this.listeners = [];\n            this.parent = null;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * This module includes the providers of @angular/core that are needed\n     * to bootstrap components via `ApplicationRef`.\n     *\n     * @experimental\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n                var injectableDef = depDef.token.ngInjectableDef;\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n            typeof override.token.ngInjectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (token.ngInjectableDef.providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(token.ngInjectableDef.providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        Object.defineProperty(DebugRenderer2.prototype, \"debugContext\", {\n            get: function () { return this.debugContextFactory(); },\n            enumerable: true,\n            configurable: true\n        });\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n     *\n     * The created DebugRenderer know how to create a Debug Context specific to IVY.\n     */\n    var Render3DebugRendererFactory2 = /** @class */ (function (_super) {\n        __extends(Render3DebugRendererFactory2, _super);\n        function Render3DebugRendererFactory2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Render3DebugRendererFactory2.prototype.createRenderer = function (element$$1, renderData) {\n            var renderer = _super.prototype.createRenderer.call(this, element$$1, renderData);\n            renderer.debugContextFactory = function () { return new Render3DebugContext(_getViewData()); };\n            return renderer;\n        };\n        return Render3DebugRendererFactory2;\n    }(DebugRendererFactory2));\n    /**\n     * Stores context information about view nodes.\n     *\n     * Used in tests to retrieve information those nodes.\n     */\n    var Render3DebugContext = /** @class */ (function () {\n        function Render3DebugContext(viewData) {\n            this.viewData = viewData;\n            // The LNode will be created next and appended to viewData\n            this.nodeIndex = viewData ? viewData.length : null;\n        }\n        Object.defineProperty(Render3DebugContext.prototype, \"view\", {\n            get: function () { return this.viewData; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"injector\", {\n            get: function () {\n                if (this.nodeIndex !== null) {\n                    var lElementNode = this.view[this.nodeIndex];\n                    var nodeInjector = lElementNode.nodeInjector;\n                    if (nodeInjector) {\n                        return new NodeInjector(nodeInjector);\n                    }\n                }\n                return Injector.NULL;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"component\", {\n            get: function () {\n                // TODO(vicb): why/when\n                if (this.nodeIndex === null) {\n                    return null;\n                }\n                var tView = this.view[TVIEW];\n                var components = tView.components;\n                return (components && components.indexOf(this.nodeIndex) == -1) ?\n                    null :\n                    this.view[this.nodeIndex].data[CONTEXT];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"providerTokens\", {\n            // TODO(vicb): add view providers when supported\n            get: function () {\n                var matchedDirectives = [];\n                // TODO(vicb): why/when\n                if (this.nodeIndex === null) {\n                    return matchedDirectives;\n                }\n                var directives = this.view[DIRECTIVES];\n                if (directives) {\n                    var currentNode = this.view[this.nodeIndex];\n                    for (var dirIndex = 0; dirIndex < directives.length; dirIndex++) {\n                        var directive = directives[dirIndex];\n                        if (getLElementNode(directive) === currentNode) {\n                            matchedDirectives.push(directive.constructor);\n                        }\n                    }\n                }\n                return matchedDirectives;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"references\", {\n            get: function () {\n                // TODO(vicb): implement retrieving references\n                throw new Error('Not implemented yet in ivy');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"context\", {\n            get: function () {\n                if (this.nodeIndex === null) {\n                    return null;\n                }\n                var lNode = this.view[this.nodeIndex];\n                return lNode.view[CONTEXT];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"componentRenderElement\", {\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"renderNode\", {\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(vicb): check previous implementation\n        Render3DebugContext.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            console.error.apply(console, __spread(values));\n        };\n        return Render3DebugContext;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3_COMPILE_COMPONENT__POST_NGCC__ = R3_COMPILE_COMPONENT;\n    var R3_COMPILE_DIRECTIVE__POST_NGCC__ = R3_COMPILE_DIRECTIVE;\n    var R3_COMPILE_INJECTABLE__POST_NGCC__ = R3_COMPILE_INJECTABLE;\n    var R3_COMPILE_NGMODULE__POST_NGCC__ = R3_COMPILE_NGMODULE;\n    var R3_COMPILE_PIPE__POST_NGCC__ = R3_COMPILE_PIPE;\n    var ivyEnable__POST_NGCC__ = ivyEnabled;\n    var GET_PROPERTY_NAME$2 = {};\n    var USE_VALUE$2 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$2 }, GET_PROPERTY_NAME$2);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ÉµNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµresolveComponentResources = resolveComponentResources;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineBase = defineBase;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdefineNgModule = defineNgModule;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµRender3ComponentFactory = ComponentFactory$1;\n    exports.ÉµRender3ComponentRef = ComponentRef$1;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectElementRef = injectElementRef;\n    exports.ÉµinjectTemplateRef = injectTemplateRef;\n    exports.ÉµinjectViewContainerRef = injectViewContainerRef;\n    exports.ÉµinjectChangeDetectorRef = injectChangeDetectorRef;\n    exports.ÉµinjectRenderer2 = injectRenderer2;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµgetFactoryOf = getFactoryOf;\n    exports.ÉµgetInheritedFactory = getInheritedFactory;\n    exports.ÉµtemplateRefExtractor = templateRefExtractor;\n    exports.ÉµPublicFeature = PublicFeature;\n    exports.ÉµInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµRender3NgModuleRef = NgModuleRef$1;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNgModuleFactory = NgModuleFactory$1;\n    exports.ÉµNO_CHANGE = NO_CHANGE;\n    exports.Éµcontainer = container;\n    exports.ÉµnextContext = nextContext;\n    exports.ÉµelementStart = elementStart;\n    exports.ÉµnamespaceHTML = namespaceHTML;\n    exports.ÉµnamespaceMathML = namespaceMathML;\n    exports.ÉµnamespaceSVG = namespaceSVG;\n    exports.Éµelement = element;\n    exports.Éµlistener = listener;\n    exports.Éµtext = text;\n    exports.ÉµembeddedViewStart = embeddedViewStart;\n    exports.Éµquery = query;\n    exports.ÉµregisterContentQuery = registerContentQuery;\n    exports.ÉµloadDirective = loadDirective;\n    exports.Éµprojection = projection;\n    exports.Éµbind = bind;\n    exports.Éµinterpolation1 = interpolation1;\n    exports.Éµinterpolation2 = interpolation2;\n    exports.Éµinterpolation3 = interpolation3;\n    exports.Éµinterpolation4 = interpolation4;\n    exports.Éµinterpolation5 = interpolation5;\n    exports.Éµinterpolation6 = interpolation6;\n    exports.Éµinterpolation7 = interpolation7;\n    exports.Éµinterpolation8 = interpolation8;\n    exports.ÉµinterpolationV = interpolationV;\n    exports.ÉµpipeBind1 = pipeBind1;\n    exports.ÉµpipeBind2 = pipeBind2;\n    exports.ÉµpipeBind3 = pipeBind3;\n    exports.ÉµpipeBind4 = pipeBind4;\n    exports.ÉµpipeBindV = pipeBindV;\n    exports.ÉµpureFunction0 = pureFunction0;\n    exports.ÉµpureFunction1 = pureFunction1;\n    exports.ÉµpureFunction2 = pureFunction2;\n    exports.ÉµpureFunction3 = pureFunction3;\n    exports.ÉµpureFunction4 = pureFunction4;\n    exports.ÉµpureFunction5 = pureFunction5;\n    exports.ÉµpureFunction6 = pureFunction6;\n    exports.ÉµpureFunction7 = pureFunction7;\n    exports.ÉµpureFunction8 = pureFunction8;\n    exports.ÉµpureFunctionV = pureFunctionV;\n    exports.ÉµgetCurrentView = getCurrentView;\n    exports.ÉµrestoreView = restoreView;\n    exports.ÉµcontainerRefreshStart = containerRefreshStart;\n    exports.ÉµcontainerRefreshEnd = containerRefreshEnd;\n    exports.ÉµqueryRefresh = queryRefresh;\n    exports.ÉµloadQueryList = loadQueryList;\n    exports.ÉµelementEnd = elementEnd;\n    exports.ÉµelementProperty = elementProperty;\n    exports.ÉµprojectionDef = projectionDef;\n    exports.Éµreference = reference;\n    exports.ÉµelementAttribute = elementAttribute;\n    exports.ÉµelementStyling = elementStyling;\n    exports.ÉµelementStylingMap = elementStylingMap;\n    exports.ÉµelementStylingProp = elementStyleProp;\n    exports.ÉµelementStylingApply = elementStylingApply;\n    exports.ÉµelementClassProp = elementClassProp;\n    exports.ÉµtextBinding = textBinding;\n    exports.Éµtemplate = template;\n    exports.ÉµembeddedViewEnd = embeddedViewEnd;\n    exports.Éµstore = store;\n    exports.Éµload = load;\n    exports.Éµpipe = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.Éµi18nApply = i18nApply;\n    exports.Éµi18nExpMapping = i18nExpMapping;\n    exports.Éµi18nInterpolation1 = i18nInterpolation1;\n    exports.Éµi18nInterpolation2 = i18nInterpolation2;\n    exports.Éµi18nInterpolation3 = i18nInterpolation3;\n    exports.Éµi18nInterpolation4 = i18nInterpolation4;\n    exports.Éµi18nInterpolation5 = i18nInterpolation5;\n    exports.Éµi18nInterpolation6 = i18nInterpolation6;\n    exports.Éµi18nInterpolation7 = i18nInterpolation7;\n    exports.Éµi18nInterpolation8 = i18nInterpolation8;\n    exports.Éµi18nInterpolationV = i18nInterpolationV;\n    exports.Éµi18nMapping = i18nMapping;\n    exports.ÉµWRAP_RENDERER_FACTORY2 = WRAP_RENDERER_FACTORY2;\n    exports.ÉµRender3DebugRendererFactory2 = Render3DebugRendererFactory2;\n    exports.ÉµcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ÉµpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ÉµcompileComponent = compileComponent;\n    exports.ÉµcompileDirective = compileDirective;\n    exports.ÉµcompilePipe = compilePipe;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµgetContext = getContext;\n    exports.ÉµR3_COMPILE_COMPONENT__POST_NGCC__ = R3_COMPILE_COMPONENT__POST_NGCC__;\n    exports.ÉµR3_COMPILE_DIRECTIVE__POST_NGCC__ = R3_COMPILE_DIRECTIVE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_INJECTABLE__POST_NGCC__ = R3_COMPILE_INJECTABLE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_NGMODULE__POST_NGCC__ = R3_COMPILE_NGMODULE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_PIPE__POST_NGCC__ = R3_COMPILE_PIPE__POST_NGCC__;\n    exports.ÉµivyEnable__POST_NGCC__ = ivyEnable__POST_NGCC__;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}