{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","InjectFlags","ɵ0","token","Inject","Optional","Self","SkipSelf","Host","ɵ1","attributeName","Attribute","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","def","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","isForwardRef","fn","R3ResolvedDependencyType","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","InjectionToken","_desc","__NG_ELEMENT_ID__","INJECTOR","THROW_IF_NOT_FOUND","NG_TEMP_TOKEN_PATH","NG_TOKEN_PATH","NEW_LINE","NO_NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","ɵɵinject","inject","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","NullInjector","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ChangeDetectionStrategy","ChangeDetectorStatus","ViewEncapsulation","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","NgModuleRef","NgModuleFactory","addAllToArray","items","arr","flatten","list","dst","item","slice","deepForEach","input","forEach","addToArray","splice","removeFromArray","pop","assertDefined","actual","msg","throwError","noSideEffects","ɵChangeDetectorStatus","EMPTY_OBJ","EMPTY_ARRAY","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_LOCALE_ID_DEF","ngLocaleIdDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","template","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","data","encapsulation","Emulated","id","styles","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineBase","baseDefinition","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getBaseDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","DECLARATION_VIEW","DECLARATION_LCONTAINER","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","MOVED_VIEWS","NATIVE","VIEW_REFS","CONTAINER_HEADER_OFFSET","isLView","isLContainer","isContentQueryHost","tNode","isComponent","isComponentDef","isRootView","elementDepthCount","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","_stylingState","_stateStorage","Map","_stylingElement","STYLING_INDEX_START_VALUE","BIT_MASK_START_VALUE","getStylingState","element","readFromMap","classesBitMask","classesIndex","stylesBitMask","stylesIndex","resetStylingState","bindingsEnabled","currentDirectiveDef","setCurrentDirectiveDef","getBindingsEnabled","ɵɵenableBindings","ɵɵdisableBindings","getLView","lView","previousOrParentTNode","isParent","MIN_DIRECTIVE_ID","activeDirectiveId","activeDirectiveSuperClassDepthPosition","activeDirectiveSuperClassHeight","setActiveHostElement","elementIndex","_selectedIndex","setSelectedIndex","incrementActiveDirectiveId","adjustActiveDirectiveSuperClassDepthPosition","delta","Math","max","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","_isParent","setTNodeAndViewData","view","getIsParent","setIsNotParent","checkNoChangesMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","enterView","newView","hostTNode","oldView","bindingStartIndex","nextContextImpl","level","walkUpViews","nestingLevel","currentView","leaveView","getSelectedIndex","_currentSanitizer","_currentNamespace","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","namespaceHTMLInternal","setCurrentStyleSanitizer","sanitizer","getCurrentStyleSanitizer","isDifferent","a","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","maybeUnwrapFn","Function","RendererStyleFlags3","MAP_BASED_ENTRY_PROP_NAME","TEMPLATE_DIRECTIVE_INDEX","updateLastDirectiveIndex","lastDirectiveIndex","markContextToPersistState","setConfig","getConfig","getProp","getPropConfig","isSanitizationRequired","getGuardMask","setGuardMask","maskValue","config","getValuesCount","getBindingValue","offset","getDefaultValue","allowStylingFlush","isContextLocked","stateIsPersisted","getPropValuesStartPosition","hasValueChanged","compareValueA","compareValueB","isStylingValueDefined","concatString","separator","hyphenate","v","toLowerCase","getStylingMapArray","isStylingContext","getInitialStylingValue","hasClassInput","hasStyleInput","getMapProp","setMapValue","getMapValue","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","setUpAttributes","native","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","isAnimationProp","setProperty","isNameOnlyAttributeMarker","marker","ANIMATION_PROP_PREFIX","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","MONKEY_PATCH_KEY_NAME","unwrapRNode","getNativeByIndex","getNativeByTNode","getNativeByTNodeOrNull","getTNode","load","getComponentViewByIndex","nodeIndex","hostView","slotValue","readPatchedData","readPatchedLView","isCreationMode","resetPreOrderHookFlags","getLViewParent","parent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","firstTemplatePass","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","classes","attrsLength","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","directiveStart","cptViewProvidersCount","endIndex","directiveEnd","providerTokenOrDef","dirDef","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","ɵɵgetInheritedFactory","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","tagName","nodeName","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","getUrlSanitizer","tag","prop","ɵɵsanitizeUrlOrResourceUrl","ɵɵdefaultStyleSanitizer","doSanitizeValue","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","getLContext","mpValue","component","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","throwMultipleComponentError","throwMixedMultiProviderError","registerPreOrderHooks","directiveIndex","directiveDef","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","end","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executePreOrderHooks","currentNodeIndex","executeHooks","firstPassHooks","checkHooks","initPhaseState","hooksToCall","callHooks","initPhase","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","selector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","isSelectorInSelectorList","selectorListLoop","currentSelectorInList","DEFAULT_GUARD_MASK_VALUE","STYLING_INDEX_FOR_MAP_BINDING","DEFAULT_BINDING_VALUE","DEFAULT_SIZE_VALUE","deferredBindingQueue","updateClassBinding","bindingIndex","deferRegistration","forceUpdate","isMapBased","state","updateBindingData","updateStyleBinding","counterIndex","sanitizationRequired","deferBindingRegistration","flushDeferredBindings","registerBinding","changed","countId","bindingValue","registered","found","valuesCount","allocateNewContextEntry","addBindingIntoContext","firstValueIndex","lastValueIndex","maybeApplyStyling","allowFlush","bitMask","styleSetter","styleSanitizer","lockAndFinalizeContext","initialValues","updateInitialStylingOnContext","initialStyling","lockContext","contextHasUpdates","applyStyling","bindingData","bitMaskValue","applyStylingFn","normalizeBitMaskValue","stylingMapsSyncFn","getStylingMapsSyncFn","_activeStylingMapApplyFn","mapsMode","valueApplied","valuesCountUpToDefault","defaultValue","valueAppliedWithinMap","setStyle","nativeStyle","style","DashCase","removeStyle","removeProperty","setClass","className","classList","addClass","add","removeClass","remove","renderStylingMap","stylingValues","isClassBased","stylingMapArr","NO_CHANGE","ELEMENT_MARKER","COMMENT_MARKER","syncStylingMap","targetProp","targetPropValueWasApplied","runTheSyncAlgorithm","loopUntilEnd","innerSyncStylingMap","currentMapIndex","cursor","getCurrentSyncCursor","mapIndex","MAP_CURSORS","iteratedTooFar","isTargetPropMatched","valueIsDefined","resolveInnerMapMode","isValueAllowedToBeApplied","useDefault","valueToApply","bindingIndexToApply","setCurrentSyncCursor","indexValue","resetSyncCursors","activateStylingMapFeature","setStylingMapsSyncFn","currentMode","isExactMatch","innerMode","doApplyValue","addItemToStylingMap","allowOverwrite","propAtIndex","applied","stylingMapToString","attrValue","stylingMapToStringMap","stringMap","TStylingContextDebug","enumerable","configurable","entries","guardMask","bindingsStartPosition","sources","NodeStylingDebug","_data","_isClassBased","_sanitizer","overrideSanitizer","_mapValues","toDebug","debug","toHtml","includeChildren","isTextNode","textContent","readLViewValue","TNode","tView_","propertyMetadataStartIndex","propertyMetadataEndIndex","localNames","initialInputs","tViews","projectionNext","projection","LViewDebug","_raw_lView","__raw__flags__","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","toDebugNodes","debugNodes","tNodeCursor","rawValue","componentLViewDebug","nodes","cleanup","rendererFactory","childHead","childTail","declarationView","queries","tHost","childViews","__other__","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","ɵɵselect","selectInternal","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","result","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","_CLEAN_PROMISE","Promise","resolve","refreshContentQueries","directiveDefIdx","elementCreate","namespace","createElementNS","createLView","host","tHostNode","getOrCreateTNode","adjustedIndex","createTNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","renderView","executeViewQueryFn","templateFn","executeTemplate","staticContentQueries","staticViewQueries","renderChildComponents","hostLView","renderComponent","refreshView","refreshDynamicEmbeddedViews","viewOrContainer","embeddedLView","embeddedTView","setHostBindings","viewData","selectedIndex","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","refreshComponent","renderComponentOrTemplate","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","executeContentQueries","createDirectivesAndLocals","localRefExtractor","instantiateAllDirectives","start","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localIndex","getOrCreateTView","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","directiveRegistry","pipeRegistry","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","tParent","generatePropertyAliases","direction","propStore","isInput","defs","propertyAliasMap","internalName","ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","elementPropertyInternal","nativeOnly","loadRendererFn","inputData","dataValue","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","childComponentLView","savePropertyDebugData","lastBindingIndex","bindingMetadata","resolveDirectives","findDirectiveMatches","registry","matches","markAsComponentHost","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","previousExpandoLength","directiveCount","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","i_1","minifiedInputName","privateName","numberOfDirectives","directiveFactory","nodeInjectorFactory","componentView","addToViewTree","elementAttributeInternal","strValue","createLContainer","hostNative","isForViewContainerRef","componentHostIdx","viewAttachedToChangeDetector","syncViewWithBlueprint","componentTView","lViewOrLContainer","markViewDirty","tickRootContext","rootContext","rootComponent","detectChangesInternal","detectChangesInRootView","viewQueryFn","storeBindingMetadata","prefix","suffix","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","textBindingInternal","setValue","renderInitialStyling","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","executeActionOnElementOrContainer","action","lNodeToHandle","beforeNode","lContainer","rNode","nativeInsertBefore","nativeRemoveNode","destroyNode","executeActionOnContainer","renderParent","anchor","executeActionOnView","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","declarationLContainer","trackMovedView","declarationContainer","declaredViews","lQueries","detachMovedView","projectedViews","declaredViewIndex","detachView","removeIndex","viewToDetach","removedLView","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","firstView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","destroy","insertBefore","nativeAppendOrInsertBefore","nativeAppendChild","childEl","childTNode","getRenderParent","getHighestElementOrICUContainer","getHostNative","isIcuCase","ShadowDom","Native","anchorNode","getNativeAnchorNode","parentTNode","getBeforeNodeForView","childEl_1","childEl_1_1","viewIndexInContainer","nextViewIndex","tViewNodeChild","isHostElement","nativeParent","nativeRemoveChild","appendProjectedNodes","tProjectionNode","selectorIndex","projectedView","nodeToProject","appendProjectedNode","appendProjectedChildren","ngContainerChildTNode","projectionView","projectedTNode","nodeOrContainer","viewRootTNode","executeActionOnNode","executeActionOnElementContainerOrIcuContainer","executeActionOnProjection","componentLView","projectionTNode","projectedComponentLView","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","callback","storeCleanupFn","cleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_super","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationView","_declarationTContainer","elementRef","createEmbeddedView","createEmbeddedViewAndNode","declarationViewLQueries","viewRef","createContainerRef","ViewContainerRefToken","ViewContainerRef_","_lContainer","_hostTNode","_hostView","getParentInjectorTNode","startTNode","parentTNode_1","clear","templateRef","insert","createComponent","componentFactory","projectableNodes","ngModuleRef","contextInjector","parentInjector","ngModule","componentRef","allocateContainerIfNeeded","adjustedIdx","_adjustIndex","viewAttachedToContainer","move","newIndex","shift","commentNode","createComment","nativeNextSibling","injectChangeDetectorRef","isPipe","createViewRef","componentIndex","hostComponentView","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","compileInjectable","srcMeta","hasAProvider","isUseClassProvider","isUseFactoryProvider","isUseValueProvider","isUseExistingProvider","compilerMeta","typeArgumentCount","ctorDeps","userDeps","useClass","useFactory","useExisting","USE_VALUE$1","USE_VALUE$2","EMPTY_ARRAY$1","convertInjectableProviderToFactory","provider","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","render2CompileInjectable","injectableType","APP_ROOT","NOT_YET","CIRCULAR","EMPTY_ARRAY$2","NULL_INJECTOR","getNullInjector","createInjector","defType","additionalProviders","R3Injector","records","injectorDefTypes","Set","_destroyed","dedupStack","injectorDef","processInjectorType","processProvider","set","makeRecord","isRootInjector","has","assertNotDestroyed","service","previousInjector","record","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","tokens","defOrWrappedDef","parents","isDuplicate","importTypesWithProviders_1","imported","_loop_1","ngModule_1","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","isExistingProvider","isFactoryProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","INJECTOR_IMPL","INJECTOR_IMPL__PRE_R3__","StaticInjector","Injector","NULL","IDENT","EMPTY","CIRCULAR$1","MULTI_PROVIDER_FN","_records","useNew","recursivelyProcessProviders","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","multiProvider","multiProviderMixError","tryResolveToken","resolveToken","NO_NEW_LINE$1","depRecords","depRecord","childRecord","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","Query","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","promises","templateUrl","styleUrls","styleOffset","styleUrl","fullyResolved","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","componentNeedsResolution","old","ɵɵallocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","updateBinding","getBinding","bindingUpdated","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵproperty","bindReconciledValue","ɵɵattribute","bound","interpolationV","isBindingUpdated","interpolation1","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","ɵɵattributeInterpolate1","interpolatedValue","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","interpolated","markDirty","scheduleTick","res_1","nothingScheduled","clean","scheduler","playerHandler","flushPlayers","ɵɵcontainer","containerInternal","ɵɵtemplate","tContainerNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","nextIndex","comment","store","ɵɵreference","getContextLView","ɵɵdirectiveInject","ɵɵinjectAttribute","ɵɵstyling","updateLastDirectiveIndex$1","getClassesContext","getStylesContext","getActiveDirectiveStylingIndex","ɵɵstyleSanitizer","ɵɵstyleProp","stylePropInternal","_stylingProp","resolveStylePropValue","resolvedValue","deferStylingUpdate","ɵɵclassProp","defer","updated","ɵɵstyleMap","updateDirectiveInputValue","_stylingMap","ɵɵclassMap","classMapInternal","valueHasChanged","normalizeIntoStylingMap","newValues","normalizeProps","allValuesTrue","newValue","normalizeStylingDirectiveInputValue","initialValue","forceClassesAsString","forceStylesAsString","ɵɵstylingApply","getRenderer","flushStyling","classesContext","stylesContext","persistState","allowFlushClasses","allowFlushStyles","classesFlushed","stylesFlushed","deleteStylingStateFromStorage","storeStylingState","registerInitialStylingOnTNode","startIndex","hasAdditionalInitialStyling","attr","updateRawValueOnContext","getActiveDirectiveId","getActiveDirectiveSuperClassDepth","getContext","allocTStylingContext","getActiveDirectiveSuperClassHeight","ɵɵelementStart","getNamespace","lastAttrIndex","getElementDepthCount","increaseElementDepthCount","elementStart","ɵɵelementEnd","decreaseElementDepthCount","elementEnd","setDirectiveStylingInput","ɵɵelement","ɵɵelementHostAttrs","hostElementIndex","stylingInputs","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵelementContainer","ɵɵembeddedViewStart","viewBlockId","containerTNode","viewToRender","scanForView","startIdx","viewAtPositionId","setIsParent","getOrCreateEmbeddedTView","containerTViews","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","processOutputs","lCleanupIndex","existingListener","hasDirectives","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngNextListenerFn__","wrapListener","listen","addEventListener","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","slotIndex","delayProjection","setDelayProjection","ɵɵprojection","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","ɵɵtext","textNative","ɵɵtextBinding","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵtextInterpolate3","ɵɵtextInterpolate4","ɵɵtextInterpolate5","ɵɵtextInterpolate6","ɵɵtextInterpolate7","ɵɵtextInterpolate8","ɵɵtextInterpolateV","ɵɵclassMapInterpolate1","ɵɵclassMapInterpolate2","ɵɵclassMapInterpolate3","ɵɵclassMapInterpolate4","ɵɵclassMapInterpolate5","ɵɵclassMapInterpolate6","ɵɵclassMapInterpolate7","ɵɵclassMapInterpolate8","ɵɵclassMapInterpolateV","ɵɵstylePropInterpolate1","valueSuffix","ɵɵstylePropInterpolate2","ɵɵstylePropInterpolate3","ɵɵstylePropInterpolate4","ɵɵstylePropInterpolate5","ɵɵstylePropInterpolate6","ɵɵstylePropInterpolate7","ɵɵstylePropInterpolate8","ɵɵstylePropInterpolateV","ɵɵhostProperty","ɵɵupdateSyntheticHostBinding","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext$1","getViewComponent","loadLContext","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","listeners","firstParam","secondParam","name_1","listenerElement","useCaptureOrIndx","sort","sortListeners","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","resetAllStylingState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","ɵɵInheritDefinitionFeature","superType","getSuperType","superDef","baseDef","writeableDef","maybeUnwrapEmpty","baseViewQuery","baseContentQueries","baseHostBindings","inheritHostBindings","inheritViewQuery","inheritContentQueries","superHostBindings","superViewQuery","superContentQueries","features_1","features_1_1","superPrototype","prevViewQuery","ctx","prevContentQueries","prevHostBindings","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","rootSelectorOrNode","noop","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","array","nonMinified","SCHEDULER","isBoundToModule","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","LocaleDataIndex","_rootLView","destroyCbs","LOCALE_DATA","ɵLocaleDataIndex","u","localeEn","plural","floor","abs","getLocalePluralCase","locale","findLocaleData","PluralCase","normalizedLocale","parentLocale","DEFAULT_LOCALE_ID","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICU_PLACEHOLDERS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","replaceNgsp","NGSP_UNICODE_REGEXP","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_type","_idx","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","changeMask","shiftsCounter","ɵɵi18nExp","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","resolvedCase","getPluralCase","getLocaleId","LOCALE_ID","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","TRANSLATIONS","LOCALIZE_PH_REGEXP","ɵɵi18nLocalize","setLocaleId","localeId","assertSameOrNotExisting","incoming","registerNgModuleType","getRegisteredNgModuleType","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","getNgLocaleIdDef","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","ɵɵpureFunction2","ɵɵpureFunction3","ɵɵpureFunction4","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","symbolIterator","_results","QueryList","symbol","proto","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","setDirty","LQuery_","queryList","clone","LQueries_","tQueries","noOfInheritedQueries","viewLQueries","tQuery","getByIndex","indexInDeclarationView","dirtyQueriesWithMatches","getTQuery","TQueryMetadata_","predicate","isStatic","read","TQueries_","queriesForTemplateRef","childQueryIndex","tqueryClone","e_3","e_3_1","track","tquery","TQuery_","crossesNgTemplate","_appliesToNextNode","_declarationNodeIndex","isApplyingToNode","matchTNode","addMatch","matchTNodeWithReadOption","getIdxOfMatchingSelector","typePredicate","nodeMatchIdx","directiveOrProviderIdx","matchIdx","createResultForNode","matchingIdx","createResultByTNodeType","createSpecialToken","materializeViewResults","queryIndex","lQuery","tViewData","tQueryMatches","matchedNodeIdx","ɵɵqueryRefresh","collectQueryResults","e_4","lViewResults","e_4_1","ɵɵstaticViewQuery","descend","viewQueryInternal","ɵɵviewQuery","createTQuery","createLQuery","ɵɵcontentQuery","contentQueryInternal","ɵɵstaticContentQuery","saveContentQueryAndDirectiveIndex","tViewContentQueries","ɵɵloadQuery","loadQueryInternal","storeCleanupWithContext","ɵɵtemplateRefExtractor","ɵɵinjectPipeChangeDetectorRef","angularCoreEnv","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","emitInline","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","interpolation","usesInheritance","addBaseDefToUndecoratedParents","hasSelectorScope","compileDirective","sourceMapUrl","facade","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","part","viewQueries","objPrototype","extractBaseDefMetadata","compileBase","hasHostDecorators","field","ann","metadataName","bindingPropertyName","isQueryAnn","queriesMeta","_loop_2","annotations_1","isInputAnn","convertToR3QueryMetadata","splitByComma","piece","static","compilePipe","typeName","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","Input","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","MissingTranslationStrategy","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","LOCALE_ID$1","TRANSLATIONS$1","TRANSLATIONS_FORMAT","ivyEnabled","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","isBoundToModule__PRE_R3__","cf","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","NgModuleFactoryLoader","getModuleFactory__PRE_R3__","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","collectClassNames","debugElement","tNodeAttrs","lowercaseTNodeAttrs","eAttrs","_getStylingDebugInfo","children","getDebugNode__POST_R3__","_queryAllR3","invokedListeners","eventListeners","unwrappedListener","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNativeNodeDescendants","debugNode","getDebugNode","_queryNodeChildrenInContainerR3","head","head_1","head_1_1","nextTNode","nextLView","childView","_nativeNodeToDebugNode","NG_DEBUG_PROPERTY","getDebugNode__PRE_R3__","indexDebugNode","DebugNode","DebugElement","platformCore","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","ViewAction","ApplicationModule","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","createView","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","ɵangular_packages_core_core_r","ɵangular_packages_core_core_o","ɵangular_packages_core_core_p","ɵangular_packages_core_core_q","ɵangular_packages_core_core_s","ɵangular_packages_core_core_g","ɵangular_packages_core_core_m","ɵangular_packages_core_core_n","ɵangular_packages_core_core_l","ɵangular_packages_core_core_k","ɵangular_packages_core_core_a","ɵangular_packages_core_core_c","ɵangular_packages_core_core_b","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_f","ɵangular_packages_core_core_j","ɵangular_packages_core_core_t","ɵangular_packages_core_core_v","ɵangular_packages_core_core_u","ɵangular_packages_core_core_y","ɵangular_packages_core_core_w","ɵangular_packages_core_core_x","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_be","ɵangular_packages_core_core_bf","ɵangular_packages_core_core_bn","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_bm","ɵangular_packages_core_core_bi","ɵangular_packages_core_core_bj","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_z","ɵangular_packages_core_core_ba","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵDEFAULT_LOCALE_ID","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵgetLocalePluralCase","ɵfindLocaleData","ɵLOCALE_DATA","ɵdetectChanges","ɵrenderComponent","renderComponent$1","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵi18nConfigureLocalize","i18nConfigureLocalize","translations","ɵsetLocaleId","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","ɵisBoundToModule__POST_R3__","isBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","nodeAtIndex","getOrCreateRenderer2","ɵgetModuleFactory__POST_R3__","getModuleFactory__POST_R3__","ɵregisterNgModuleType","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵINJECTOR_IMPL__POST_R3__","INJECTOR_IMPL__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v9.0.0-next.2+21.sha-7a75f78.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0 = function (token) { return ({ token: token }); };\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', ɵ0);\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    var ɵ1 = function (attributeName) { return ({ attributeName: attributeName }); };\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', ɵ1);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            token: opts.token, providedIn: opts.providedIn || null, factory: opts.factory,\n            value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` in a way which is immune to accidentally reading inherited\n     * value.\n     *\n     * @param type A type which may have its own (non-inherited) `ngInjectableDef`.\n     */\n    function getInjectableDef(type) {\n        var def = type[NG_INJECTABLE_DEF];\n        // The definition read above may come from a base class. `hasOwnProperty` is not sufficient to\n        // distinguish this case, as in older browsers (e.g. IE10) static property inheritance is\n        // implemented by copying the properties.\n        //\n        // Instead, the ngInjectableDef's token is compared to the type, and if they don't match then the\n        // property was not defined directly on the type itself, and was likely inherited. The definition\n        // is only returned if the type matches the def.token.\n        return def && def.token === type ? def : null;\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` or read the `ngInjectableDef` from one of its ancestors.\n     *\n     * @param type A type which may have `ngInjectableDef`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ngInjectableDef` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        if (type && type[NG_INJECTABLE_DEF]) {\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + type.name + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + type.name + \"\\\" class.\"));\n            return type[NG_INJECTABLE_DEF];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        return isForwardRef(type) ? type() : type;\n    }\n    /** Checks whether a function is wrapped by a `forwardRef`. */\n    function isForwardRef(fn) {\n        return typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Always use __globalThis if available, which is the spec-defined global variable across all\n    // environments, then fallback to __global first, because in Node tests both __global and\n    // __window may be defined and _global should be __global in that case.\n    var _global = __globalThis || __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"ChangeDetectorRef\"] = 2] = \"ChangeDetectorRef\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = ɵɵdefineInjectable({\n                    token: this,\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var ɵ0$1 = getClosureSafeProperty;\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ0$1 });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = getFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            return arr.pop();\n        }\n        else {\n            return arr.splice(index, 1)[0];\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNumber(actual, msg) {\n        if (typeof actual != 'number') {\n            throwError(msg);\n        }\n    }\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertSame(actual, expected, msg) {\n        if (actual !== expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node != null &&\n                node.constructor.name === 'WebWorkerRenderNode'), true, \"The provided value must be an instance of a DOM Node but got \" + stringify(node));\n    }\n    function assertDataInRange(arr, index) {\n        var maxLen = arr ? arr.length : 0;\n        assertLessThan(index, maxLen, \"Index expected to be less than \" + maxLen + \" but got \" + index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var locationString = typeof location !== 'undefined' ? location.toString() : '';\n        var newCounters = {\n            namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n            styleMap: 0,\n            styleMapCacheMiss: 0,\n            classMap: 0,\n            classMapCacheMiss: 0,\n            styleProp: 0,\n            stylePropCacheMiss: 0,\n            classProp: 0,\n            classPropCacheMiss: 0,\n            flushStyling: 0,\n            classesApplied: 0,\n            stylesApplied: 0,\n            stylingWritePersistedState: 0,\n            stylingReadPersistedState: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n        _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * NOTE: changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_LOCALE_ID_DEF = getClosureSafeProperty({ ngLocaleIdDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n            tView: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n            // Add ngInjectableDef so components are reachable through the module injector by default\n            // (unless it has already been set by the @Injectable decorator). This is mostly to\n            // support injecting components in tests. In real application code, components should\n            // be retrieved through the node injector, so this isn't a problem.\n            if (!type.hasOwnProperty(NG_INJECTABLE_DEF)) {\n                type[NG_INJECTABLE_DEF] =\n                    ɵɵdefineInjectable({ token: type, factory: componentDefinition.factory });\n            }\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```ts\n     * class ShouldBeInherited {\n     *   static ngBaseDef = ɵɵdefineBase({\n     *      ...\n     *   })\n     * }\n     * ```\n     *\n     * @param baseDefinition The base definition parameters\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n            viewQuery: baseDefinition.viewQuery || null,\n            contentQueries: baseDefinition.contentQueries || null,\n            hostBindings: baseDefinition.hostBindings || null\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getBaseDef(type) {\n        return type[NG_BASE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n    function getNgLocaleIdDef(type) {\n        return type[NG_LOCALE_ID_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var DECLARATION_VIEW = 16;\n    var DECLARATION_LCONTAINER = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 19;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT and NEXT are indices 3 and 4\n    // As we already have these constants in LView, we don't need to re-create them.\n    var MOVED_VIEWS = 5;\n    // T_HOST is index 6\n    // We already have this constants in LView, we don't need to re-create it.\n    var NATIVE = 7;\n    var VIEW_REFS = 8;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 9;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$1 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * True if `value` is `LView`.\n    * @param value wrapped value of `RNode`, `LView`, `LContainer`\n    */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertTNodeForLView(tNode, lView) {\n        tNode.hasOwnProperty('tView_') && assertEqual(tNode.tView_, lView[TVIEW], 'This TNode does not belong to this LView.');\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode, 'previousOrParentTNode should exist!');\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataNext(lView, index, arr) {\n        if (arr == null)\n            arr = lView;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n    function assertFirstTemplatePass(tView, errMessage) {\n        assertEqual(tView.firstTemplatePass, true, errMessage || 'Should only be called in first template pass.');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' &&\n            Object.getPrototypeOf(obj) == NodeInjectorFactory.prototype;\n    }\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$2 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * // TODO(matsko): add updateMask info\n     *\n     * This file contains all state-based logic for styling in Angular.\n     *\n     * Styling in Angular is evaluated with a series of styling-specific\n     * template instructions which are called one after another each time\n     * change detection occurs in Angular.\n     *\n     * Styling makes use of various temporary, state-based variables between\n     * instructions so that it can better cache and optimize its values.\n     * These values are usually populated and cleared when an element is\n     * exited in change detection (once all the instructions are run for\n     * that element).\n     *\n     * There are, however, situations where the state-based values\n     * need to be stored and used at a later point. This ONLY occurs when\n     * there are template-level as well as host-binding-level styling\n     * instructions on the same element. The example below shows exactly\n     * what could be:\n     *\n     * ```html\n     * <!-- two sources of styling: the template and the directive -->\n     * <div [style.width]=\"width\" dir-that-sets-height></div>\n     * ```\n     *\n     * If and when this situation occurs, the current styling state is\n     * stored in a storage map value and then later accessed once the\n     * host bindings are evaluated. Once styling for the current element\n     * is over then the map entry will be cleared.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    var _stylingState = null;\n    var _stateStorage = new Map();\n    // this value is not used outside this file and is only here\n    // as a caching check for when the element changes.\n    var _stylingElement = null;\n    var STYLING_INDEX_START_VALUE = 1;\n    var BIT_MASK_START_VALUE = 0;\n    function getStylingState(element, readFromMap) {\n        if (!_stylingElement || element !== _stylingElement) {\n            _stylingElement = element;\n            if (readFromMap) {\n                _stylingState = _stateStorage.get(element) || null;\n                ngDevMode && ngDevMode.stylingReadPersistedState++;\n            }\n            _stylingState = _stylingState || {\n                classesBitMask: BIT_MASK_START_VALUE,\n                classesIndex: STYLING_INDEX_START_VALUE,\n                stylesBitMask: BIT_MASK_START_VALUE,\n                stylesIndex: STYLING_INDEX_START_VALUE,\n            };\n        }\n        return _stylingState;\n    }\n    function resetStylingState() {\n        _stylingState = null;\n        _stylingElement = null;\n    }\n    function storeStylingState(element, state) {\n        ngDevMode && ngDevMode.stylingWritePersistedState++;\n        _stateStorage.set(element, state);\n    }\n    function deleteStylingStateFromStorage(element) {\n        _stateStorage.delete(element);\n    }\n    function resetAllStylingState() {\n        resetStylingState();\n        _stateStorage.clear();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Used as the starting directive id value.\n     *\n     * All subsequent directives are incremented from this value onwards.\n     * The reason why this value is `1` instead of `0` is because the `0`\n     * value is reserved for the template.\n     */\n    var MIN_DIRECTIVE_ID = 1;\n    var activeDirectiveId = MIN_DIRECTIVE_ID;\n    /**\n     * Position depth (with respect from leaf to root) in a directive sub-class inheritance chain.\n     */\n    var activeDirectiveSuperClassDepthPosition = 0;\n    /**\n     * Total count of how many directives are a part of an inheritance chain.\n     *\n     * When directives are sub-classed (extended) from one to another, Angular\n     * needs to keep track of exactly how many were encountered so it can accurately\n     * generate the next directive id (once the next directive id is visited).\n     * Normally the next directive id just a single incremented value from the\n     * previous one, however, if the previous directive is a part of an inheritance\n     * chain (a series of sub-classed directives) then the incremented value must\n     * also take into account the total amount of sub-classed values.\n     *\n     * Note that this value resets back to zero once the next directive is\n     * visited (when `incrementActiveDirectiveId` or `setActiveHostElement`\n     * is called).\n     */\n    var activeDirectiveSuperClassHeight = 0;\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (_selectedIndex !== elementIndex) {\n            setSelectedIndex(elementIndex === null ? -1 : elementIndex);\n            activeDirectiveId = elementIndex === null ? 0 : MIN_DIRECTIVE_ID;\n            activeDirectiveSuperClassDepthPosition = 0;\n            activeDirectiveSuperClassHeight = 0;\n        }\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        activeDirectiveId += 1 + activeDirectiveSuperClassHeight;\n        // because we are dealing with a new directive this\n        // means we have exited out of the inheritance chain\n        activeDirectiveSuperClassDepthPosition = 0;\n        activeDirectiveSuperClassHeight = 0;\n    }\n    /**\n     * Set the current super class (reverse inheritance) position depth for a directive.\n     *\n     * For example we have two directives: Child and Other (but Child is a sub-class of Parent)\n     * <div child-dir other-dir></div>\n     *\n     * // increment\n     * parentInstance->hostBindings() (depth = 1)\n     * // decrement\n     * childInstance->hostBindings() (depth = 0)\n     * otherInstance->hostBindings() (depth = 0 b/c it's a different directive)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function adjustActiveDirectiveSuperClassDepthPosition(delta) {\n        activeDirectiveSuperClassDepthPosition += delta;\n        // we keep track of the height value so that when the next directive is visited\n        // then Angular knows to generate a new directive id value which has taken into\n        // account how many sub-class directives were a part of the previous directive.\n        activeDirectiveSuperClassHeight =\n            Math.max(activeDirectiveSuperClassHeight, activeDirectiveSuperClassDepthPosition);\n    }\n    /**\n     * Returns he current depth of the super/sub class inheritance chain.\n     *\n     * This will return how many inherited directive/component classes\n     * exist in the current chain.\n     *\n     * ```typescript\n     * @Directive({ selector: '[super-dir]' })\n     * class SuperDir {}\n     *\n     * @Directive({ selector: '[sub-dir]' })\n     * class SubDir extends SuperDir {}\n     *\n     * // if `<div sub-dir>` is used then the super class height is `1`\n     * // if `<div super-dir>` is used then the super class height is `0`\n     * ```\n     */\n    function getActiveDirectiveSuperClassHeight() {\n        return activeDirectiveSuperClassHeight;\n    }\n    /**\n     * Returns the current super class (reverse inheritance) depth for a directive.\n     *\n     * This is designed to help instruction code distinguish different hostBindings\n     * calls from each other when a directive has extended from another directive.\n     * Normally using the directive id value is enough, but with the case\n     * of parent/sub-class directive inheritance more information is required.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function getActiveDirectiveSuperClassDepth() {\n        return activeDirectiveSuperClassDepthPosition;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode, _isParent) {\n        previousOrParentTNode = tNode;\n        isParent = _isParent;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsNotParent() {\n        isParent = false;\n    }\n    function setIsParent() {\n        isParent = true;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n        setCurrentStyleSanitizer(null);\n        resetAllStylingState();\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New LView to become active\n     */\n    function leaveView(newView) {\n        enterView(newView, null);\n    }\n    var _selectedIndex = -1;\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return _selectedIndex;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function setSelectedIndex(index) {\n        _selectedIndex = index;\n        // we have now jumped to another element\n        // therefore the state is stale\n        resetStylingState();\n    }\n    var _currentNamespace = null;\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        namespaceHTMLInternal();\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     */\n    function namespaceHTMLInternal() {\n        _currentNamespace = null;\n    }\n    function getNamespace() {\n        return _currentNamespace;\n    }\n    var _currentSanitizer;\n    function setCurrentStyleSanitizer(sanitizer) {\n        _currentSanitizer = sanitizer;\n    }\n    function getCurrentStyleSanitizer() {\n        return _currentSanitizer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'function')\n            return value.name || value.toString();\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type.toString();\n        }\n        return renderStringify(value);\n    }\n    var ɵ0$2 = function () {\n        return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n            setTimeout // everything else\n        ).bind(_global);\n    };\n    var defaultScheduler = (ɵ0$2)();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    var MAP_BASED_ENTRY_PROP_NAME = '--MAP--';\n    var TEMPLATE_DIRECTIVE_INDEX = 0;\n    /**\n     * Creates a new instance of the `TStylingContext`.\n     *\n     * The `TStylingContext` is used as a manifest of all style or all class bindings on\n     * an element. Because it is a T-level data-structure, it is only created once per\n     * tNode for styles and for classes. This function allocates a new instance of a\n     * `TStylingContext` with the initial values (see `interfaces.ts` for more info).\n     */\n    function allocTStylingContext(initialStyling) {\n        // because map-based bindings deal with a dynamic set of values, there\n        // is no way to know ahead of time whether or not sanitization is required.\n        // For this reason the configuration will always mark sanitization as active\n        // (this means that when map-based values are applied then sanitization will\n        // be checked against each property).\n        var mapBasedConfig = 1 /* SanitizationRequired */;\n        return [\n            initialStyling || [''],\n            0 /* Initial */,\n            TEMPLATE_DIRECTIVE_INDEX,\n            mapBasedConfig,\n            0,\n            MAP_BASED_ENTRY_PROP_NAME,\n        ];\n    }\n    /**\n     * Sets the provided directive as the last directive index in the provided `TStylingContext`.\n     *\n     * Styling in Angular can be applied from the template as well as multiple sources of\n     * host bindings. This means that each binding function (the template function or the\n     * hostBindings functions) will generate styling instructions as well as a styling\n     * apply function (i.e. `stylingApply()`). Because host bindings functions and the\n     * template function are independent from one another this means that the styling apply\n     * function will be called multiple times. By tracking the last directive index (which\n     * is what happens in this function) the styling algorithm knows exactly when to flush\n     * styling (which is when the last styling apply function is executed).\n     */\n    function updateLastDirectiveIndex(context, lastDirectiveIndex) {\n        if (lastDirectiveIndex === TEMPLATE_DIRECTIVE_INDEX) {\n            var currentValue = context[2 /* LastDirectiveIndexPosition */];\n            if (currentValue > TEMPLATE_DIRECTIVE_INDEX) {\n                // This means that a directive or two contained a host bindings function, but\n                // now the template function also contains styling. When this combination of sources\n                // comes up then we need to tell the context to store the state between updates\n                // (because host bindings evaluation happens after template binding evaluation).\n                markContextToPersistState(context);\n            }\n        }\n        else {\n            context[2 /* LastDirectiveIndexPosition */] = lastDirectiveIndex;\n        }\n    }\n    function getConfig(context) {\n        return context[1 /* ConfigPosition */];\n    }\n    function setConfig(context, value) {\n        context[1 /* ConfigPosition */] = value;\n    }\n    function getProp(context, index) {\n        return context[index + 2 /* PropOffset */];\n    }\n    function getPropConfig(context, index) {\n        return context[index + 0 /* ConfigAndGuardOffset */] &\n            1 /* Mask */;\n    }\n    function isSanitizationRequired(context, index) {\n        return (getPropConfig(context, index) & 1 /* SanitizationRequired */) > 0;\n    }\n    function getGuardMask(context, index) {\n        var configGuardValue = context[index + 0 /* ConfigAndGuardOffset */];\n        return configGuardValue >> 1 /* TotalBits */;\n    }\n    function setGuardMask(context, index, maskValue) {\n        var config = getPropConfig(context, index);\n        var guardMask = maskValue << 1 /* TotalBits */;\n        context[index + 0 /* ConfigAndGuardOffset */] = config | guardMask;\n    }\n    function getValuesCount(context, index) {\n        return context[index + 1 /* ValuesCountOffset */];\n    }\n    function getBindingValue(context, index, offset) {\n        return context[index + 3 /* BindingsStartOffset */ + offset];\n    }\n    function getDefaultValue(context, index) {\n        var valuesCount = getValuesCount(context, index);\n        return context[index + 3 /* BindingsStartOffset */ + valuesCount - 1];\n    }\n    /**\n     * Temporary function which determines whether or not a context is\n     * allowed to be flushed based on the provided directive index.\n     */\n    function allowStylingFlush(context, index) {\n        return (context && index === context[2 /* LastDirectiveIndexPosition */]) ? true :\n            false;\n    }\n    function lockContext(context) {\n        setConfig(context, getConfig(context) | 1 /* Locked */);\n    }\n    function isContextLocked(context) {\n        return (getConfig(context) & 1 /* Locked */) > 0;\n    }\n    function stateIsPersisted(context) {\n        return (getConfig(context) & 2 /* PersistStateValues */) > 0;\n    }\n    function markContextToPersistState(context) {\n        setConfig(context, getConfig(context) | 2 /* PersistStateValues */);\n    }\n    function getPropValuesStartPosition(context) {\n        return 6 /* MapBindingsBindingsStartPosition */ +\n            context[4 /* MapBindingsValuesCountPosition */];\n    }\n    function isMapBased(prop) {\n        return prop === MAP_BASED_ENTRY_PROP_NAME;\n    }\n    function hasValueChanged(a, b) {\n        var compareValueA = Array.isArray(a) ? a[0 /* RawValuePosition */] : a;\n        var compareValueB = Array.isArray(b) ? b[0 /* RawValuePosition */] : b;\n        // these are special cases for String based values (which are created as artifacts\n        // when sanitization is bypassed on a particular value)\n        if (compareValueA instanceof String) {\n            compareValueA = compareValueA.toString();\n        }\n        if (compareValueB instanceof String) {\n            compareValueB = compareValueB.toString();\n        }\n        return isDifferent(compareValueA, compareValueB);\n    }\n    /**\n     * Determines whether the provided styling value is truthy or falsy.\n     */\n    function isStylingValueDefined(value) {\n        // the reason why null is compared against is because\n        // a CSS class value that is set to `false` must be\n        // respected (otherwise it would be treated as falsy).\n        // Empty string values are because developers usually\n        // set a value to an empty string to remove it.\n        return value != null && value !== '';\n    }\n    function concatString(a, b, separator) {\n        if (separator === void 0) { separator = ' '; }\n        return a + ((b.length && a.length) ? separator : '') + b;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (v) { return v.charAt(0) + '-' + v.charAt(1); }).toLowerCase();\n    }\n    /**\n     * Returns an instance of `StylingMapArray`.\n     *\n     * This function is designed to find an instance of `StylingMapArray` in case it is stored\n     * inside of an instance of `TStylingContext`. When a styling context is created it\n     * will copy over an initial styling values from the tNode (which are stored as a\n     * `StylingMapArray` on the `tNode.classes` or `tNode.styles` values).\n     */\n    function getStylingMapArray(value) {\n        return isStylingContext(value) ?\n            value[0 /* InitialStylingValuePosition */] :\n            value;\n    }\n    function isStylingContext(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) &&\n            value.length >= 6 /* MapBindingsBindingsStartPosition */ &&\n            typeof value[1] !== 'string';\n    }\n    function getInitialStylingValue(context) {\n        var map = getStylingMapArray(context);\n        return map && map[0 /* RawValuePosition */] || '';\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 8 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 16 /* hasStyleInput */) !== 0;\n    }\n    function getMapProp(map, index) {\n        return map[index + 0 /* PropOffset */];\n    }\n    function setMapValue(map, index, value) {\n        map[index + 1 /* ValueOffset */] = value;\n    }\n    function getMapValue(map, index) {\n        return map[index + 1 /* ValueOffset */];\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str = concatString(str, prop + \":\" + styles[prop], ';');\n            }\n        }\n        return str;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var ɵ0$3 = function (hostElement, rendererType) { return document; };\n    var domRendererFactory3 = {\n        createRenderer: ɵ0$3\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$3 = 1;\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     * @param renderer The renderer to be used\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(renderer, native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n            marker === 6 /* I18n */;\n    }\n    var ANIMATION_PROP_PREFIX = '@';\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)\n     * in same location in `LView`. This is because we don't want to pre-allocate space for it\n     * because the storage is sparse. This file contains utilities for dealing with such data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Returns `LView` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLView(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLView()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (typeof value[TYPE] === 'object')\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Returns `LContainer` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLContainer(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLContainer()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (value[TYPE] === true)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    /**\n     * Retrieve an `RNode` for a given `TNode` and `LView`.\n     *\n     * This function guarantees in dev mode to retrieve a non-null `RNode`.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNode(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        ngDevMode && assertDataInRange(lView, tNode.index);\n        var node = unwrapRNode(lView[tNode.index]);\n        ngDevMode && assertDomNode(node);\n        return node;\n    }\n    /**\n     * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n     *\n     * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNodeOrNull(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        var index = tNode.index;\n        var node = index == -1 ? null : unwrapRNode(lView[index]);\n        ngDevMode && node !== null && assertDomNode(node);\n        return node;\n    }\n    /**\n     * A helper function that returns `true` if a given `TNode` has any matching directives.\n     */\n    function hasDirectives(tNode) {\n        return tNode.directiveEnd > tNode.directiveStart;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function load(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        ngDevMode && assertDataInRange(hostView, nodeIndex);\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given an `LView`, find the closest declaration view which is not an embedded view.\n     *\n     * This method searches for the `LView` associated with the component which declared the `LView`.\n     *\n     * This function may return itself if the `LView` passed in is not an embedded `LView`. Otherwise\n     * it walks the declaration parents until it finds a component view (non-embedded-view.)\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode !== null && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, tView, token) {\n        bloomAdd(injectorIndex, tView, token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        if (attrNameToInject === 'class') {\n            return getInitialStylingValue(tNode.classes);\n        }\n        if (attrNameToInject === 'style') {\n            return getInitialStylingValue(tNode.styles);\n        }\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    while (i < attrsLength && typeof attrs[i] === 'string') {\n                        i++;\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param tView The tView we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(undefined, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = ɵɵgetFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_TYPE = 'ngType';\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getType(error) {\n        return error[ERROR_TYPE];\n    }\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /* A pattern that matches safe srcset values */\n    var SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value, mode) {\n        mode = mode || 3 /* ValidateAndSanitize */;\n        var doSanitizeValue = true;\n        if (mode & 1 /* ValidateProperty */) {\n            doSanitizeValue = prop === 'background-image' || prop === 'background' ||\n                prop === 'border-image' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image' || prop === 'clip-path';\n        }\n        if (mode & 2 /* SanitizeOnly */) {\n            return doSanitizeValue ? ɵɵsanitizeStyle(value) : value;\n        }\n        else {\n            return doSanitizeValue;\n        }\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n     */\n    /**\n     * Creates an `Array` construction with a given name. This is useful when\n     * looking for memory consumption to see what time of array it is.\n     *\n     *\n     * @param name Name to give to the constructor\n     * @returns A subclass of `Array` if possible. This can only be done in\n     *          environments which support `class` construct.\n     */\n    function createNamedArrayType(name) {\n        // This should never be called in prod mode, so let's verify that is the case.\n        if (ngDevMode) {\n            try {\n                // We need to do it this way so that TypeScript does not down-level the below code.\n                var FunctionConstructor = createNamedArrayType.constructor;\n                return (new FunctionConstructor('Array', \"return class ABC extends Array{}\"))(Array);\n            }\n            catch (e) {\n                // If it does not work just give up and fall back to regular Array.\n                return Array;\n            }\n        }\n        else {\n            throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNodeOrNull(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     * @param @param currentNodeIndex 2 cases depending the the value:\n     * - undefined: execute hooks only from the saved index until the end of the array (pre-order case,\n     * when flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executePreOrderHooks(currentView, tView, checkNoChangesMode, currentNodeIndex) {\n        if (!checkNoChangesMode) {\n            executeHooks(currentView, tView.preOrderHooks, tView.preOrderCheckHooks, checkNoChangesMode, 0 /* OnInitHooksToBeRun */, currentNodeIndex !== undefined ? currentNodeIndex : null);\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param currentView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode, initPhaseState, currentNodeIndex) {\n        if (checkNoChangesMode)\n            return;\n        if (checkHooks !== null || firstPassHooks !== null) {\n            var hooksToCall = (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState ?\n                firstPassHooks :\n                checkHooks;\n            if (hooksToCall !== null) {\n                callHooks(currentView, hooksToCall, initPhaseState, currentNodeIndex);\n            }\n        }\n        // The init phase state must be always checked here as it may have been recursively updated\n        var flags = currentView[FLAGS];\n        if (currentNodeIndex == null && (flags & 3 /* InitPhaseStateMask */) === initPhaseState &&\n            initPhaseState !== 3 /* InitPhaseCompleted */) {\n            flags &= 1023 /* IndexWithinInitPhaseReset */;\n            flags += 1 /* InitPhaseStateIncrementer */;\n            currentView[FLAGS] = flags;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$4 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$5 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd = unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5;\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.classes) {\n                    if (!isCssClassMatching(getInitialStylingValue(tNode.classes), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * ===========================================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n     * Attributes\n     * ===========================================================================================================\n     * Inline + Projection     | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES                 | NO\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n     * ===========================================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */ || maybeAttrName === 2 /* Styles */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for styling in Angular.\n     *\n     * All styling bindings (i.e. `[style]`, `[style.prop]`, `[class]` and `[class.name]`)\n     * will have their values be applied through the logic in this file.\n     *\n     * When a binding is encountered (e.g. `<div [style.width]=\"w\">`) then\n     * the binding data will be populated into a `TStylingContext` data-structure.\n     * There is only one `TStylingContext` per `TNode` and each element instance\n     * will update its style/class binding values in concert with the styling\n     * context.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    // The first bit value reflects a map-based binding value's bit.\n    // The reason why it's always activated for every entry in the map\n    // is so that if any map-binding values update then all other prop\n    // based bindings will pass the guard check automatically without\n    // any extra code or flags.\n    var DEFAULT_GUARD_MASK_VALUE = 1;\n    /**\n     * The guard/update mask bit index location for map-based bindings.\n     *\n     * All map-based bindings (i.e. `[style]` and `[class]` )\n     */\n    var STYLING_INDEX_FOR_MAP_BINDING = 0;\n    /**\n     * Default fallback value for a styling binding.\n     *\n     * A value of `null` is used here which signals to the styling algorithm that\n     * the styling value is not present. This way if there are no other values\n     * detected then it will be removed once the style/class property is dirty and\n     * diffed within the styling algorithm present in `flushStyling`.\n     */\n    var DEFAULT_BINDING_VALUE = null;\n    /**\n     * Default size count value for a new entry in a context.\n     *\n     * A value of `1` is used here because each entry in the context has a default\n     * property.\n     */\n    var DEFAULT_SIZE_VALUE = 1;\n    var deferredBindingQueue = [];\n    /**\n     * Visits a class-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a class-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateClassBinding(context, data, element, prop, bindingIndex, value, deferRegistration, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, stateIsPersisted(context));\n        var index = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.classesIndex++;\n        var updated = updateBindingData(context, data, index, prop, bindingIndex, value, deferRegistration, forceUpdate, false);\n        if (updated || forceUpdate) {\n            // We flip the bit in the bitMask to reflect that the binding\n            // at the `index` slot has changed. This identifies to the flushing\n            // phase that the bindings for this particular CSS class need to be\n            // applied again because on or more of the bindings for the CSS\n            // class have changed.\n            state.classesBitMask |= 1 << index;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Visits a style-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a style-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateStyleBinding(context, data, element, prop, bindingIndex, value, sanitizer, deferRegistration, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, stateIsPersisted(context));\n        var index = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.stylesIndex++;\n        var sanitizationRequired = isMapBased ?\n            true :\n            (sanitizer ? sanitizer(prop, null, 1 /* ValidateProperty */) : false);\n        var updated = updateBindingData(context, data, index, prop, bindingIndex, value, deferRegistration, forceUpdate, sanitizationRequired);\n        if (updated || forceUpdate) {\n            // We flip the bit in the bitMask to reflect that the binding\n            // at the `index` slot has changed. This identifies to the flushing\n            // phase that the bindings for this particular property need to be\n            // applied again because on or more of the bindings for the CSS\n            // property have changed.\n            state.stylesBitMask |= 1 << index;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Called each time a binding value has changed within the provided `TStylingContext`.\n     *\n     * This function is designed to be called from `updateStyleBinding` and `updateClassBinding`.\n     * If called during the first update pass, the binding will be registered in the context.\n     * If the binding does get registered and the `deferRegistration` flag is true then the\n     * binding data will be queued up until the context is later flushed in `applyStyling`.\n     *\n     * This function will also update binding slot in the provided `LStylingData` with the\n     * new binding entry (if it has changed).\n     *\n     * @returns whether or not the binding value was updated in the `LStylingData`.\n     */\n    function updateBindingData(context, data, counterIndex, prop, bindingIndex, value, deferRegistration, forceUpdate, sanitizationRequired) {\n        if (!isContextLocked(context)) {\n            if (deferRegistration) {\n                deferBindingRegistration(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n            }\n            else {\n                deferredBindingQueue.length && flushDeferredBindings();\n                // this will only happen during the first update pass of the\n                // context. The reason why we can't use `tNode.firstTemplatePass`\n                // here is because its not guaranteed to be true when the first\n                // update pass is executed (remember that all styling instructions\n                // are run in the update phase, and, as a result, are no more\n                // styling instructions that are run in the creation phase).\n                registerBinding(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n            }\n        }\n        var changed = forceUpdate || hasValueChanged(data[bindingIndex], value);\n        if (changed) {\n            data[bindingIndex] = value;\n        }\n        return changed;\n    }\n    /**\n     * Schedules a binding registration to be run at a later point.\n     *\n     * The reasoning for this feature is to ensure that styling\n     * bindings are registered in the correct order for when\n     * directives/components have a super/sub class inheritance\n     * chains. Each directive's styling bindings must be\n     * registered into the context in reverse order. Therefore all\n     * bindings will be buffered in reverse order and then applied\n     * after the inheritance chain exits.\n     */\n    function deferBindingRegistration(context, counterIndex, prop, bindingIndex, sanitizationRequired) {\n        deferredBindingQueue.unshift(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n    }\n    /**\n     * Flushes the collection of deferred bindings and causes each entry\n     * to be registered into the context.\n     */\n    function flushDeferredBindings() {\n        var i = 0;\n        while (i < deferredBindingQueue.length) {\n            var context = deferredBindingQueue[i++];\n            var count = deferredBindingQueue[i++];\n            var prop = deferredBindingQueue[i++];\n            var bindingIndex = deferredBindingQueue[i++];\n            var sanitizationRequired = deferredBindingQueue[i++];\n            registerBinding(context, count, prop, bindingIndex, sanitizationRequired);\n        }\n        deferredBindingQueue.length = 0;\n    }\n    /**\n     * Registers the provided binding (prop + bindingIndex) into the context.\n     *\n     * This function is shared between bindings that are assigned immediately\n     * (via `updateBindingData`) and at a deferred stage. When called, it will\n     * figure out exactly where to place the binding data in the context.\n     *\n     * It is needed because it will either update or insert a styling property\n     * into the context at the correct spot.\n     *\n     * When called, one of two things will happen:\n     *\n     * 1) If the property already exists in the context then it will just add\n     *    the provided `bindingValue` to the end of the binding sources region\n     *    for that particular property.\n     *\n     *    - If the binding value is a number then it will be added as a new\n     *      binding index source next to the other binding sources for the property.\n     *\n     *    - Otherwise, if the binding value is a string/boolean/null type then it will\n     *      replace the default value for the property if the default value is `null`.\n     *\n     * 2) If the property does not exist then it will be inserted into the context.\n     *    The styling context relies on all properties being stored in alphabetical\n     *    order, so it knows exactly where to store it.\n     *\n     *    When inserted, a default `null` value is created for the property which exists\n     *    as the default value for the binding. If the bindingValue property is inserted\n     *    and it is either a string, number or null value then that will replace the default\n     *    value.\n     *\n     * Note that this function is also used for map-based styling bindings. They are treated\n     * much the same as prop-based bindings, but, because they do not have a property value\n     * (since it's a map), all map-based entries are stored in an already populated area of\n     * the context at the top (which is reserved for map-based entries).\n     */\n    function registerBinding(context, countId, prop, bindingValue, sanitizationRequired) {\n        var registered = false;\n        if (prop) {\n            // prop-based bindings (e.g `<div [style.width]=\"w\" [class.foo]=\"f\">`)\n            var found = false;\n            var i = getPropValuesStartPosition(context);\n            while (i < context.length) {\n                var valuesCount = getValuesCount(context, i);\n                var p = getProp(context, i);\n                found = prop <= p;\n                if (found) {\n                    // all style/class bindings are sorted by property name\n                    if (prop < p) {\n                        allocateNewContextEntry(context, i, prop, sanitizationRequired);\n                    }\n                    addBindingIntoContext(context, false, i, bindingValue, countId);\n                    break;\n                }\n                i += 3 /* BindingsStartOffset */ + valuesCount;\n            }\n            if (!found) {\n                allocateNewContextEntry(context, context.length, prop, sanitizationRequired);\n                addBindingIntoContext(context, false, i, bindingValue, countId);\n                registered = true;\n            }\n        }\n        else {\n            // map-based bindings (e.g `<div [style]=\"s\" [class]=\"{className:true}\">`)\n            // there is no need to allocate the map-based binding region into the context\n            // since it is already there when the context is first created.\n            addBindingIntoContext(context, true, 3 /* MapBindingsPosition */, bindingValue, countId);\n            registered = true;\n        }\n        return registered;\n    }\n    function allocateNewContextEntry(context, index, prop, sanitizationRequired) {\n        // 1,2: splice index locations\n        // 3: each entry gets a config value (guard mask + flags)\n        // 4. each entry gets a size value (which is always one because there is always a default binding\n        // value)\n        // 5. the property that is getting allocated into the context\n        // 6. the default binding value (usually `null`)\n        var config = sanitizationRequired ? 1 /* SanitizationRequired */ :\n            0 /* Default */;\n        context.splice(index, 0, config, DEFAULT_SIZE_VALUE, prop, DEFAULT_BINDING_VALUE);\n        setGuardMask(context, index, DEFAULT_GUARD_MASK_VALUE);\n    }\n    /**\n     * Inserts a new binding value into a styling property tuple in the `TStylingContext`.\n     *\n     * A bindingValue is inserted into a context during the first update pass\n     * of a template or host bindings function. When this occurs, two things\n     * happen:\n     *\n     * - If the bindingValue value is a number then it is treated as a bindingIndex\n     *   value (a index in the `LView`) and it will be inserted next to the other\n     *   binding index entries.\n     *\n     * - Otherwise the binding value will update the default value for the property\n     *   and this will only happen if the default value is `null`.\n     *\n     * Note that this function also handles map-based bindings and will insert them\n     * at the top of the context.\n     */\n    function addBindingIntoContext(context, isMapBased, index, bindingValue, countId) {\n        var valuesCount = getValuesCount(context, index);\n        var firstValueIndex = index + 3 /* BindingsStartOffset */;\n        var lastValueIndex = firstValueIndex + valuesCount;\n        if (!isMapBased) {\n            // prop-based values all have default values, but map-based entries do not.\n            // we want to access the index for the default value in this case and not just\n            // the bindings...\n            lastValueIndex--;\n        }\n        if (typeof bindingValue === 'number') {\n            // the loop here will check to see if the binding already exists\n            // for the property in the context. Why? The reason for this is\n            // because the styling context is not \"locked\" until the first\n            // flush has occurred. This means that if a repeated element\n            // registers its styling bindings then it will register each\n            // binding more than once (since its duplicated). This check\n            // will prevent that from happening. Note that this only happens\n            // when a binding is first encountered and not each time it is\n            // updated.\n            for (var i = firstValueIndex; i <= lastValueIndex; i++) {\n                var indexAtPosition = context[i];\n                if (indexAtPosition === bindingValue)\n                    return;\n            }\n            context.splice(lastValueIndex, 0, bindingValue);\n            context[index + 1 /* ValuesCountOffset */]++;\n            // now that a new binding index has been added to the property\n            // the guard mask bit value (at the `countId` position) needs\n            // to be included into the existing mask value.\n            var guardMask = getGuardMask(context, index) | (1 << countId);\n            setGuardMask(context, index, guardMask);\n        }\n        else if (bindingValue !== null && context[lastValueIndex] == null) {\n            context[lastValueIndex] = bindingValue;\n        }\n    }\n    /**\n     * Applies all pending style and class bindings to the provided element.\n     *\n     * This function will attempt to flush styling via the provided `classesContext`\n     * and `stylesContext` context values. This function is designed to be run from\n     * the `stylingApply()` instruction (which is run at the very end of styling\n     * change detection) and will rely on any state values that are set from when\n     * any styling bindings update.\n     *\n     * This function may be called multiple times on the same element because it can\n     * be called from the template code as well as from host bindings. In order for\n     * styling to be successfully flushed to the element (which will only happen once\n     * despite this being called multiple times), the following criteria must be met:\n     *\n     * - `flushStyling` is called from the very last directive that has styling for\n     *    the element (see `allowStylingFlush()`).\n     * - one or more bindings for classes or styles has updated (this is checked by\n     *   examining the classes or styles bit mask).\n     *\n     * If the style and class values are successfully applied to the element then\n     * the temporary state values for the element will be cleared. Otherwise, if\n     * this did not occur then the styling state is persisted (see `state.ts` for\n     * more information on how this works).\n     */\n    function flushStyling(renderer, data, classesContext, stylesContext, element, directiveIndex, styleSanitizer) {\n        ngDevMode && ngDevMode.flushStyling++;\n        var persistState = classesContext ? stateIsPersisted(classesContext) :\n            (stylesContext ? stateIsPersisted(stylesContext) : false);\n        var allowFlushClasses = allowStylingFlush(classesContext, directiveIndex);\n        var allowFlushStyles = allowStylingFlush(stylesContext, directiveIndex);\n        // deferred bindings are bindings which are scheduled to register with\n        // the context at a later point. These bindings can only registered when\n        // the context will be 100% flushed to the element.\n        if (deferredBindingQueue.length && (allowFlushClasses || allowFlushStyles)) {\n            flushDeferredBindings();\n        }\n        var state = getStylingState(element, persistState);\n        var classesFlushed = maybeApplyStyling(renderer, element, data, classesContext, allowFlushClasses, state.classesBitMask, setClass, null);\n        var stylesFlushed = maybeApplyStyling(renderer, element, data, stylesContext, allowFlushStyles, state.stylesBitMask, setStyle, styleSanitizer);\n        if (classesFlushed && stylesFlushed) {\n            resetStylingState();\n            if (persistState) {\n                deleteStylingStateFromStorage(element);\n            }\n        }\n        else if (persistState) {\n            storeStylingState(element, state);\n        }\n    }\n    function maybeApplyStyling(renderer, element, data, context, allowFlush, bitMask, styleSetter, styleSanitizer) {\n        if (allowFlush && context) {\n            lockAndFinalizeContext(context);\n            if (contextHasUpdates(context, bitMask)) {\n                ngDevMode && (styleSanitizer ? ngDevMode.stylesApplied++ : ngDevMode.classesApplied++);\n                applyStyling(context, renderer, element, data, bitMask, styleSetter, styleSanitizer);\n                return true;\n            }\n        }\n        return allowFlush;\n    }\n    function contextHasUpdates(context, bitMask) {\n        return context && bitMask > BIT_MASK_START_VALUE;\n    }\n    /**\n     * Locks the context (so no more bindings can be added) and also copies over initial class/style\n     * values into their binding areas.\n     *\n     * There are two main actions that take place in this function:\n     *\n     * - Locking the context:\n     *   Locking the context is required so that the style/class instructions know NOT to\n     *   register a binding again after the first update pass has run. If a locking bit was\n     *   not used then it would need to scan over the context each time an instruction is run\n     *   (which is expensive).\n     *\n     * - Patching initial values:\n     *   Directives and component host bindings may include static class/style values which are\n     *   bound to the host element. When this happens, the styling context will need to be informed\n     *   so it can use these static styling values as defaults when a matching binding is falsy.\n     *   These initial styling values are read from the initial styling values slot within the\n     *   provided `TStylingContext` (which is an instance of a `StylingMapArray`). This inner map will\n     *   be updated each time a host binding applies its static styling values (via `elementHostAttrs`)\n     *   so these values are only read at this point because this is the very last point before the\n     *   first style/class values are flushed to the element.\n     */\n    function lockAndFinalizeContext(context) {\n        if (!isContextLocked(context)) {\n            var initialValues = getStylingMapArray(context);\n            if (initialValues) {\n                updateInitialStylingOnContext(context, initialValues);\n            }\n            lockContext(context);\n        }\n    }\n    /**\n     * Runs through the provided styling context and applies each value to\n     * the provided element (via the renderer) if one or more values are present.\n     *\n     * This function will iterate over all entries present in the provided\n     * `TStylingContext` array (both prop-based and map-based bindings).-\n     *\n     * Each entry, within the `TStylingContext` array, is stored alphabetically\n     * and this means that each prop/value entry will be applied in order\n     * (so long as it is marked dirty in the provided `bitMask` value).\n     *\n     * If there are any map-based entries present (which are applied to the\n     * element via the `[style]` and `[class]` bindings) then those entries\n     * will be applied as well. However, the code for that is not a part of\n     * this function. Instead, each time a property is visited, then the\n     * code below will call an external function called `stylingMapsSyncFn`\n     * and, if present, it will keep the application of styling values in\n     * map-based bindings up to sync with the application of prop-based\n     * bindings.\n     *\n     * Visit `styling_next/map_based_bindings.ts` to learn more about how the\n     * algorithm works for map-based styling bindings.\n     *\n     * Note that this function is not designed to be called in isolation (use\n     * `applyClasses` and `applyStyles` to actually apply styling values).\n     */\n    function applyStyling(context, renderer, element, bindingData, bitMaskValue, applyStylingFn, sanitizer) {\n        var bitMask = normalizeBitMaskValue(bitMaskValue);\n        var stylingMapsSyncFn = getStylingMapsSyncFn();\n        var mapsGuardMask = getGuardMask(context, 3 /* MapBindingsPosition */);\n        var applyAllValues = (bitMask & mapsGuardMask) > 0;\n        var mapsMode = applyAllValues ? 1 /* ApplyAllValues */ : 0 /* TraverseValues */;\n        var i = getPropValuesStartPosition(context);\n        while (i < context.length) {\n            var valuesCount = getValuesCount(context, i);\n            var guardMask = getGuardMask(context, i);\n            if (bitMask & guardMask) {\n                var valueApplied = false;\n                var prop = getProp(context, i);\n                var valuesCountUpToDefault = valuesCount - 1;\n                var defaultValue = getBindingValue(context, i, valuesCountUpToDefault);\n                // case 1: apply prop-based values\n                // try to apply the binding values and see if a non-null\n                // value gets set for the styling binding\n                for (var j = 0; j < valuesCountUpToDefault; j++) {\n                    var bindingIndex = getBindingValue(context, i, j);\n                    var value = bindingData[bindingIndex];\n                    if (isStylingValueDefined(value)) {\n                        var finalValue = sanitizer && isSanitizationRequired(context, i) ?\n                            sanitizer(prop, value, 2 /* SanitizeOnly */) :\n                            value;\n                        applyStylingFn(renderer, element, prop, finalValue, bindingIndex);\n                        valueApplied = true;\n                        break;\n                    }\n                }\n                // case 2: apply map-based values\n                // traverse through each map-based styling binding and update all values up to\n                // the provided `prop` value. If the property was not applied in the loop above\n                // then it will be attempted to be applied in the maps sync code below.\n                if (stylingMapsSyncFn) {\n                    // determine whether or not to apply the target property or to skip it\n                    var mode = mapsMode | (valueApplied ? 4 /* SkipTargetProp */ :\n                        2 /* ApplyTargetProp */);\n                    var valueAppliedWithinMap = stylingMapsSyncFn(context, renderer, element, bindingData, applyStylingFn, sanitizer, mode, prop, defaultValue);\n                    valueApplied = valueApplied || valueAppliedWithinMap;\n                }\n                // case 3: apply the default value\n                // if the value has not yet been applied then a truthy value does not exist in the\n                // prop-based or map-based bindings code. If and when this happens, just apply the\n                // default value (even if the default value is `null`).\n                if (!valueApplied) {\n                    applyStylingFn(renderer, element, prop, defaultValue);\n                }\n            }\n            i += 3 /* BindingsStartOffset */ + valuesCount;\n        }\n        // the map-based styling entries may have not applied all their\n        // values. For this reason, one more call to the sync function\n        // needs to be issued at the end.\n        if (stylingMapsSyncFn) {\n            stylingMapsSyncFn(context, renderer, element, bindingData, applyStylingFn, sanitizer, mapsMode);\n        }\n    }\n    function normalizeBitMaskValue(value) {\n        // if pass => apply all values (-1 implies that all bits are flipped to true)\n        if (value === true)\n            return -1;\n        // if pass => skip all values\n        if (value === false)\n            return 0;\n        // return the bit mask value as is\n        return value;\n    }\n    var _activeStylingMapApplyFn = null;\n    function getStylingMapsSyncFn() {\n        return _activeStylingMapApplyFn;\n    }\n    function setStylingMapsSyncFn(fn) {\n        _activeStylingMapApplyFn = fn;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     */\n    var setStyle = function (renderer, native, prop, value) {\n        // the reason why this may be `null` is either because\n        // it's a container element or it's a part of a test\n        // environment that doesn't have styling. In either\n        // case it's safe not to apply styling to the element.\n        var nativeStyle = native.style;\n        if (value) {\n            // opacity, z-index and flexbox all have number values\n            // and these need to be converted into strings so that\n            // they can be assigned properly.\n            value = value.toString();\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            renderer && isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                (nativeStyle && nativeStyle.setProperty(prop, value));\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            renderer && isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                (nativeStyle && nativeStyle.removeProperty(prop));\n        }\n    };\n    var ɵ0$4 = setStyle;\n    /**\n     * Adds/removes the provided className value to the provided element.\n     */\n    var setClass = function (renderer, native, className, value) {\n        if (className !== '') {\n            // the reason why this may be `null` is either because\n            // it's a container element or it's a part of a test\n            // environment that doesn't have styling. In either\n            // case it's safe not to apply styling to the element.\n            var classList = native.classList;\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                renderer && isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    (classList && classList.add(className));\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                renderer && isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    (classList && classList.remove(className));\n            }\n        }\n    };\n    var ɵ1$1 = setClass;\n    /**\n     * Iterates over all provided styling entries and renders them on the element.\n     *\n     * This function is used alongside a `StylingMapArray` entry. This entry is not\n     * the same as the `TStylingContext` and is only really used when an element contains\n     * initial styling values (e.g. `<div style=\"width:200px\">`), but no style/class bindings\n     * are present. If and when that happens then this function will be called to render all\n     * initial styling values on an element.\n     */\n    function renderStylingMap(renderer, element, stylingValues, isClassBased) {\n        var stylingMapArr = getStylingMapArray(stylingValues);\n        if (stylingMapArr) {\n            for (var i = 1 /* ValuesStartPosition */; i < stylingMapArr.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(stylingMapArr, i);\n                var value = getMapValue(stylingMapArr, i);\n                if (isClassBased) {\n                    setClass(renderer, element, prop, value, null);\n                }\n                else {\n                    setStyle(renderer, element, prop, value, null);\n                }\n            }\n        }\n    }\n    /**\n     * Registers all initial styling entries into the provided context.\n     *\n     * This function will iterate over all entries in the provided `initialStyling` ar}ray and register\n     * them as default (initial) values in the provided context. Initial styling values in a context are\n     * the default values that are to be applied unless overwritten by a binding.\n     *\n     * The reason why this function exists and isn't a part of the context construction is because\n     * host binding is evaluated at a later stage after the element is created. This means that\n     * if a directive or component contains any initial styling code (i.e. `<div class=\"foo\">`)\n     * then that initial styling data can only be applied once the styling for that element\n     * is first applied (at the end of the update phase). Once that happens then the context will\n     * update itself with the complete initial styling for the element.\n     */\n    function updateInitialStylingOnContext(context, initialStyling) {\n        // `-1` is used here because all initial styling data is not a spart\n        // of a binding (since it's static)\n        var INITIAL_STYLING_COUNT_ID = -1;\n        for (var i = 1 /* ValuesStartPosition */; i < initialStyling.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(initialStyling, i);\n            if (value) {\n                var prop = getMapProp(initialStyling, i);\n                registerBinding(context, INITIAL_STYLING_COUNT_ID, prop, value, false);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$6 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the algorithm logic for applying map-based bindings\n     * such as `[style]` and `[class]`.\n     *\n     * --------\n     */\n    /**\n     * Used to apply styling values presently within any map-based bindings on an element.\n     *\n     * Angular supports map-based styling bindings which can be applied via the\n     * `[style]` and `[class]` bindings which can be placed on any HTML element.\n     * These bindings can work independently, together or alongside prop-based\n     * styling bindings (e.g. `<div [style]=\"x\" [style.width]=\"w\">`).\n     *\n     * If a map-based styling binding is detected by the compiler, the following\n     * AOT code is produced:\n     *\n     * ```typescript\n     * styleMap(ctx.styles); // styles = {key:value}\n     * classMap(ctx.classes); // classes = {key:value}|string\n     * ```\n     *\n     * If and when either of the instructions above are evaluated, then the code\n     * present in this file is included into the bundle. The mechanism used, to\n     * activate support for map-based bindings at runtime is possible via the\n     * `activeStylingMapFeature` function (which is also present in this file).\n     *\n     * # The Algorithm\n     * Whenever a map-based binding updates (which is when the identity of the\n     * map-value changes) then the map is iterated over and a `StylingMapArray` array\n     * is produced. The `StylingMapArray` instance is stored in the binding location\n     * where the `BINDING_INDEX` is situated when the `styleMap()` or `classMap()`\n     * instruction were called. Once the binding changes, then the internal `bitMask`\n     * value is marked as dirty.\n     *\n     * Styling values are applied once CD exits the element (which happens when\n     * the `select(n)` instruction is called or the template function exits). When\n     * this occurs, all prop-based bindings are applied. If a map-based binding is\n     * present then a special flushing function (called a sync function) is made\n     * available and it will be called each time a styling property is flushed.\n     *\n     * The flushing algorithm is designed to apply styling for a property (which is\n     * a CSS property or a className value) one by one. If map-based bindings\n     * are present, then the flushing algorithm will keep calling the maps styling\n     * sync function each time a property is visited. This way, the flushing\n     * behavior of map-based bindings will always be at the same property level\n     * as the current prop-based property being iterated over (because everything\n     * is alphabetically sorted).\n     *\n     * Let's imagine we have the following HTML template code:\n     *\n     * ```html\n     * <div [style]=\"{width:'100px', height:'200px', 'z-index':'10'}\"\n     *      [style.width.px]=\"200\">...</div>\n     * ```\n     *\n     * When CD occurs, both the `[style]` and `[style.width]` bindings\n     * are evaluated. Then when the styles are flushed on screen, the\n     * following operations happen:\n     *\n     * 1. `[style.width]` is attempted to be written to the element.\n     *\n     * 2.  Once that happens, the algorithm instructs the map-based\n     *     entries (`[style]` in this case) to \"catch up\" and apply\n     *     all values up to the `width` value. When this happens the\n     *     `height` value is applied to the element (since it is\n     *     alphabetically situated before the `width` property).\n     *\n     * 3. Since there are no more prop-based entries anymore, the\n     *    loop exits and then, just before the flushing ends, it\n     *    instructs all map-based bindings to \"finish up\" applying\n     *    their values.\n     *\n     * 4. The only remaining value within the map-based entries is\n     *    the `z-index` value (`width` got skipped because it was\n     *    successfully applied via the prop-based `[style.width]`\n     *    binding). Since all map-based entries are told to \"finish up\",\n     *    the `z-index` value is iterated over and it is then applied\n     *    to the element.\n     *\n     * The most important thing to take note of here is that prop-based\n     * bindings are evaluated in order alongside map-based bindings.\n     * This allows all styling across an element to be applied in O(n)\n     * time (a similar algorithm is that of the array merge algorithm\n     * in merge sort).\n     */\n    var syncStylingMap = function (context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, defaultValue) {\n        var targetPropValueWasApplied = false;\n        // once the map-based styling code is activate it is never deactivated. For this reason a\n        // check to see if the current styling context has any map based bindings is required.\n        var totalMaps = getValuesCount(context, 3 /* MapBindingsPosition */);\n        if (totalMaps) {\n            var runTheSyncAlgorithm = true;\n            var loopUntilEnd = !targetProp;\n            // If the code is told to finish up (run until the end), but the mode\n            // hasn't been flagged to apply values (it only traverses values) then\n            // there is no point in iterating over the array because nothing will\n            // be applied to the element.\n            if (loopUntilEnd && (mode & ~1 /* ApplyAllValues */)) {\n                runTheSyncAlgorithm = false;\n                targetPropValueWasApplied = true;\n            }\n            if (runTheSyncAlgorithm) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp || null, 0, defaultValue || null);\n            }\n            if (loopUntilEnd) {\n                resetSyncCursors();\n            }\n        }\n        return targetPropValueWasApplied;\n    };\n    /**\n     * Recursive function designed to apply map-based styling to an element one map at a time.\n     *\n     * This function is designed to be called from the `syncStylingMap` function and will\n     * apply map-based styling data one map at a time to the provided `element`.\n     *\n     * This function is recursive and it will call itself if a follow-up map value is to be\n     * processed. To learn more about how the algorithm works, see `syncStylingMap`.\n     */\n    function innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex, defaultValue) {\n        var targetPropValueWasApplied = false;\n        var totalMaps = getValuesCount(context, 3 /* MapBindingsPosition */);\n        if (currentMapIndex < totalMaps) {\n            var bindingIndex = getBindingValue(context, 3 /* MapBindingsPosition */, currentMapIndex);\n            var stylingMapArr = data[bindingIndex];\n            var cursor = getCurrentSyncCursor(currentMapIndex);\n            while (cursor < stylingMapArr.length) {\n                var prop = getMapProp(stylingMapArr, cursor);\n                var iteratedTooFar = targetProp && prop > targetProp;\n                var isTargetPropMatched = !iteratedTooFar && prop === targetProp;\n                var value = getMapValue(stylingMapArr, cursor);\n                var valueIsDefined = isStylingValueDefined(value);\n                // the recursive code is designed to keep applying until\n                // it reaches or goes past the target prop. If and when\n                // this happens then it will stop processing values, but\n                // all other map values must also catch up to the same\n                // point. This is why a recursive call is still issued\n                // even if the code has iterated too far.\n                var innerMode = iteratedTooFar ? mode : resolveInnerMapMode(mode, valueIsDefined, isTargetPropMatched);\n                var innerProp = iteratedTooFar ? targetProp : prop;\n                var valueApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, innerMode, innerProp, currentMapIndex + 1, defaultValue);\n                if (iteratedTooFar) {\n                    if (!targetPropValueWasApplied) {\n                        targetPropValueWasApplied = valueApplied;\n                    }\n                    break;\n                }\n                if (!valueApplied && isValueAllowedToBeApplied(mode, isTargetPropMatched)) {\n                    var useDefault = isTargetPropMatched && !valueIsDefined;\n                    var valueToApply = useDefault ? defaultValue : value;\n                    var bindingIndexToApply = useDefault ? bindingIndex : null;\n                    var finalValue = sanitizer ?\n                        sanitizer(prop, valueToApply, 3 /* ValidateAndSanitize */) :\n                        valueToApply;\n                    applyStylingFn(renderer, element, prop, finalValue, bindingIndexToApply);\n                    valueApplied = true;\n                }\n                targetPropValueWasApplied = valueApplied && isTargetPropMatched;\n                cursor += 2 /* TupleSize */;\n            }\n            setCurrentSyncCursor(currentMapIndex, cursor);\n            // this is a fallback case in the event that the styling map is `null` for this\n            // binding but there are other map-based bindings that need to be evaluated\n            // afterwards. If the `prop` value is falsy then the intention is to cycle\n            // through all of the properties in the remaining maps as well. If the current\n            // styling map is too short then there are no values to iterate over. In either\n            // case the follow-up maps need to be iterated over.\n            if (stylingMapArr.length === 1 /* ValuesStartPosition */ || !targetProp) {\n                return innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n            }\n        }\n        return targetPropValueWasApplied;\n    }\n    /**\n     * Enables support for map-based styling bindings (e.g. `[style]` and `[class]` bindings).\n     */\n    function activateStylingMapFeature() {\n        setStylingMapsSyncFn(syncStylingMap);\n    }\n    /**\n     * Used to determine the mode for the inner recursive call.\n     *\n     * If an inner map is iterated on then this is done so for one\n     * of two reasons:\n     *\n     * - value is being applied:\n     *   if the value is being applied from this current styling\n     *   map then there is no need to apply it in a deeper map.\n     *\n     * - value is being not applied:\n     *   apply the value if it is found in a deeper map.\n     *\n     * When these reasons are encountered the flags will for the\n     * inner map mode will be configured.\n     */\n    function resolveInnerMapMode(currentMode, valueIsDefined, isExactMatch) {\n        var innerMode = currentMode;\n        if (!valueIsDefined && !(currentMode & 4 /* SkipTargetProp */) &&\n            (isExactMatch || (currentMode & 1 /* ApplyAllValues */))) {\n            // case 1: set the mode to apply the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 2 /* ApplyTargetProp */;\n            innerMode &= ~4 /* SkipTargetProp */;\n        }\n        else {\n            // case 2: set the mode to skip the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 4 /* SkipTargetProp */;\n            innerMode &= ~2 /* ApplyTargetProp */;\n        }\n        return innerMode;\n    }\n    /**\n     * Decides whether or not a prop/value entry will be applied to an element.\n     *\n     * To determine whether or not a value is to be applied,\n     * the following procedure is evaluated:\n     *\n     * First check to see the current `mode` status:\n     *  1. If the mode value permits all props to be applied then allow.\n     *    - But do not allow if the current prop is set to be skipped.\n     *  2. Otherwise if the current prop is permitted then allow.\n     */\n    function isValueAllowedToBeApplied(mode, isTargetPropMatched) {\n        var doApplyValue = (mode & 1 /* ApplyAllValues */) > 0;\n        if (!doApplyValue) {\n            if (mode & 2 /* ApplyTargetProp */) {\n                doApplyValue = isTargetPropMatched;\n            }\n        }\n        else if ((mode & 4 /* SkipTargetProp */) && isTargetPropMatched) {\n            doApplyValue = false;\n        }\n        return doApplyValue;\n    }\n    /**\n     * Used to keep track of concurrent cursor values for multiple map-based styling bindings present on\n     * an element.\n     */\n    var MAP_CURSORS = [];\n    /**\n     * Used to reset the state of each cursor value being used to iterate over map-based styling\n     * bindings.\n     */\n    function resetSyncCursors() {\n        for (var i = 0; i < MAP_CURSORS.length; i++) {\n            MAP_CURSORS[i] = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Returns an active cursor value at a given mapIndex location.\n     */\n    function getCurrentSyncCursor(mapIndex) {\n        if (mapIndex >= MAP_CURSORS.length) {\n            MAP_CURSORS.push(1 /* ValuesStartPosition */);\n        }\n        return MAP_CURSORS[mapIndex];\n    }\n    /**\n     * Sets a cursor value at a given mapIndex location.\n     */\n    function setCurrentSyncCursor(mapIndex, indexValue) {\n        MAP_CURSORS[mapIndex] = indexValue;\n    }\n    /**\n     * Used to convert a {key:value} map into a `StylingMapArray` array.\n     *\n     * This function will either generate a new `StylingMapArray` instance\n     * or it will patch the provided `newValues` map value into an\n     * existing `StylingMapArray` value (this only happens if `bindingValue`\n     * is an instance of `StylingMapArray`).\n     *\n     * If a new key/value map is provided with an old `StylingMapArray`\n     * value then all properties will be overwritten with their new\n     * values or with `null`. This means that the array will never\n     * shrink in size (but it will also not be created and thrown\n     * away whenever the {key:value} map entries change).\n     */\n    function normalizeIntoStylingMap(bindingValue, newValues, normalizeProps) {\n        var stylingMapArr = Array.isArray(bindingValue) ? bindingValue : [null];\n        stylingMapArr[0 /* RawValuePosition */] = newValues || null;\n        // because the new values may not include all the properties\n        // that the old ones had, all values are set to `null` before\n        // the new values are applied. This way, when flushed, the\n        // styling algorithm knows exactly what style/class values\n        // to remove from the element (since they are `null`).\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            setMapValue(stylingMapArr, j, null);\n        }\n        var props = null;\n        var map;\n        var allValuesTrue = false;\n        if (typeof newValues === 'string') { // [class] bindings allow string values\n            if (newValues.length) {\n                props = newValues.split(/\\s+/);\n                allValuesTrue = true;\n            }\n        }\n        else {\n            props = newValues ? Object.keys(newValues) : null;\n            map = newValues;\n        }\n        if (props) {\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var newProp = normalizeProps ? hyphenate(prop) : prop;\n                var value = allValuesTrue ? true : map[prop];\n                addItemToStylingMap(stylingMapArr, newProp, value, true);\n            }\n        }\n        return stylingMapArr;\n    }\n    /**\n     * Inserts the provided item into the provided styling array at the right spot.\n     *\n     * The `StylingMapArray` type is a sorted key/value array of entries. This means\n     * that when a new entry is inserted it must be placed at the right spot in the\n     * array. This function figures out exactly where to place it.\n     */\n    function addItemToStylingMap(stylingMapArr, prop, value, allowOverwrite) {\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            var propAtIndex = getMapProp(stylingMapArr, j);\n            if (prop <= propAtIndex) {\n                var applied = false;\n                if (propAtIndex === prop) {\n                    var valueAtIndex = stylingMapArr[j];\n                    if (allowOverwrite || !isStylingValueDefined(valueAtIndex)) {\n                        applied = true;\n                        setMapValue(stylingMapArr, j, value);\n                    }\n                }\n                else {\n                    applied = true;\n                    stylingMapArr.splice(j, 0, prop, value);\n                }\n                return applied;\n            }\n        }\n        stylingMapArr.push(prop, value);\n        return true;\n    }\n    /**\n     * Converts the provided styling map array into a string.\n     *\n     * Classes => `one two three`\n     * Styles => `prop:value; prop2:value2`\n     */\n    function stylingMapToString(map, isClassBased) {\n        var str = '';\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var prop = getMapProp(map, i);\n            var value = getMapValue(map, i);\n            var attrValue = concatString(prop, isClassBased ? '' : value, ':');\n            str = concatString(str, attrValue, isClassBased ? ' ' : '; ');\n        }\n        return str;\n    }\n    /**\n     * Converts the provided styling map array into a key value map.\n     */\n    function stylingMapToStringMap(map) {\n        var stringMap = {};\n        if (map) {\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                stringMap[prop] = value;\n            }\n        }\n        return stringMap;\n    }\n\n    /**\n     * Instantiates and attaches an instance of `TStylingContextDebug` to the provided context.\n     */\n    function attachStylingDebugObject(context) {\n        var debug = new TStylingContextDebug(context);\n        attachDebugObject(context, debug);\n        return debug;\n    }\n    /**\n     * A human-readable debug summary of the styling data present within `TStylingContext`.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var TStylingContextDebug = /** @class */ (function () {\n        function TStylingContextDebug(context) {\n            this.context = context;\n        }\n        Object.defineProperty(TStylingContextDebug.prototype, \"isLocked\", {\n            get: function () { return isContextLocked(this.context); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TStylingContextDebug.prototype, \"entries\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context.\n             *\n             * See `TStylingTupleSummary`.\n             */\n            get: function () {\n                var context = this.context;\n                var entries = {};\n                var start = 3 /* MapBindingsPosition */;\n                var i = start;\n                while (i < context.length) {\n                    var valuesCount = getValuesCount(context, i);\n                    // the context may contain placeholder values which are populated ahead of time,\n                    // but contain no actual binding values. In this situation there is no point in\n                    // classifying this as an \"entry\" since no real data is stored here yet.\n                    if (valuesCount) {\n                        var prop = getProp(context, i);\n                        var guardMask = getGuardMask(context, i);\n                        var defaultValue = getDefaultValue(context, i);\n                        var sanitizationRequired = isSanitizationRequired(context, i);\n                        var bindingsStartPosition = i + 3 /* BindingsStartOffset */;\n                        var sources = [];\n                        for (var j = 0; j < valuesCount; j++) {\n                            sources.push(context[bindingsStartPosition + j]);\n                        }\n                        entries[prop] = { prop: prop, guardMask: guardMask, sanitizationRequired: sanitizationRequired, valuesCount: valuesCount, defaultValue: defaultValue, sources: sources };\n                    }\n                    i += 3 /* BindingsStartOffset */ + valuesCount;\n                }\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TStylingContextDebug;\n    }());\n    /**\n     * A human-readable debug summary of the styling data present for a `DebugNode` instance.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var NodeStylingDebug = /** @class */ (function () {\n        function NodeStylingDebug(context, _data, _isClassBased) {\n            this.context = context;\n            this._data = _data;\n            this._isClassBased = _isClassBased;\n            this._sanitizer = null;\n        }\n        /**\n         * Overrides the sanitizer used to process styles.\n         */\n        NodeStylingDebug.prototype.overrideSanitizer = function (sanitizer) { this._sanitizer = sanitizer; };\n        Object.defineProperty(NodeStylingDebug.prototype, \"summary\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context and\n             * what their runtime representation is.\n             *\n             * See `LStylingSummary`.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value, bindingIndex) {\n                    entries[prop] = { prop: prop, value: value, bindingIndex: bindingIndex };\n                });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"values\", {\n            /**\n             * Returns a key/value map of all the styles/classes that were last applied to the element.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value) { entries[prop] = value; });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NodeStylingDebug.prototype._mapValues = function (fn) {\n            // there is no need to store/track an element instance. The\n            // element is only used when the styling algorithm attempts to\n            // style the value (and we mock out the stylingApplyFn anyway).\n            var mockElement = {};\n            var hasMaps = getValuesCount(this.context, 3 /* MapBindingsPosition */) > 0;\n            if (hasMaps) {\n                activateStylingMapFeature();\n            }\n            var mapFn = function (renderer, element, prop, value, bindingIndex) { fn(prop, value, bindingIndex || null); };\n            var sanitizer = this._isClassBased ? null : (this._sanitizer || getCurrentStyleSanitizer());\n            applyStyling(this.context, null, mockElement, this._data, true, mapFn, sanitizer);\n        };\n        return NodeStylingDebug;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    var LViewArray = ngDevMode && createNamedArrayType('LView');\n    var LVIEW_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates LView.\n     *\n     * Simple slice will keep the same type, and we need it to be LView\n     */\n    function cloneToLView(list) {\n        if (LVIEW_EMPTY === undefined)\n            LVIEW_EMPTY = new LViewArray();\n        return LVIEW_EMPTY.concat(list);\n    }\n    /**\n     * This class is a debug version of Object literal so that we can have constructor name show up in\n     * debug tools in ngDevMode.\n     */\n    var TViewConstructor = /** @class */ (function () {\n        function TView(id, //\n        blueprint, //\n        template, //\n        queries, //\n        viewQuery, //\n        node, //\n        data, //\n        bindingStartIndex, //\n        expandoStartIndex, //\n        expandoInstructions, //\n        firstTemplatePass, //\n        staticViewQueries, //\n        staticContentQueries, //\n        preOrderHooks, //\n        preOrderCheckHooks, //\n        contentHooks, //\n        contentCheckHooks, //\n        viewHooks, //\n        viewCheckHooks, //\n        destroyHooks, //\n        cleanup, //\n        contentQueries, //\n        components, //\n        directiveRegistry, //\n        pipeRegistry, //\n        firstChild, //\n        schemas) {\n            this.id = id;\n            this.blueprint = blueprint;\n            this.template = template;\n            this.queries = queries;\n            this.viewQuery = viewQuery;\n            this.node = node;\n            this.data = data;\n            this.bindingStartIndex = bindingStartIndex;\n            this.expandoStartIndex = expandoStartIndex;\n            this.expandoInstructions = expandoInstructions;\n            this.firstTemplatePass = firstTemplatePass;\n            this.staticViewQueries = staticViewQueries;\n            this.staticContentQueries = staticContentQueries;\n            this.preOrderHooks = preOrderHooks;\n            this.preOrderCheckHooks = preOrderCheckHooks;\n            this.contentHooks = contentHooks;\n            this.contentCheckHooks = contentCheckHooks;\n            this.viewHooks = viewHooks;\n            this.viewCheckHooks = viewCheckHooks;\n            this.destroyHooks = destroyHooks;\n            this.cleanup = cleanup;\n            this.contentQueries = contentQueries;\n            this.components = components;\n            this.directiveRegistry = directiveRegistry;\n            this.pipeRegistry = pipeRegistry;\n            this.firstChild = firstChild;\n            this.schemas = schemas;\n        }\n        return TView;\n    }());\n    var TNodeConstructor = /** @class */ (function () {\n        function TNode(tView_, //\n        type, //\n        index, //\n        injectorIndex, //\n        directiveStart, //\n        directiveEnd, //\n        propertyMetadataStartIndex, //\n        propertyMetadataEndIndex, //\n        flags, //\n        providerIndexes, //\n        tagName, //\n        attrs, //\n        localNames, //\n        initialInputs, //\n        inputs, //\n        outputs, //\n        tViews, //\n        next, //\n        projectionNext, //\n        child, //\n        parent, //\n        projection, //\n        styles, //\n        classes) {\n            this.tView_ = tView_;\n            this.type = type;\n            this.index = index;\n            this.injectorIndex = injectorIndex;\n            this.directiveStart = directiveStart;\n            this.directiveEnd = directiveEnd;\n            this.propertyMetadataStartIndex = propertyMetadataStartIndex;\n            this.propertyMetadataEndIndex = propertyMetadataEndIndex;\n            this.flags = flags;\n            this.providerIndexes = providerIndexes;\n            this.tagName = tagName;\n            this.attrs = attrs;\n            this.localNames = localNames;\n            this.initialInputs = initialInputs;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.tViews = tViews;\n            this.next = next;\n            this.projectionNext = projectionNext;\n            this.child = child;\n            this.parent = parent;\n            this.projection = projection;\n            this.styles = styles;\n            this.classes = classes;\n        }\n        Object.defineProperty(TNode.prototype, \"type_\", {\n            get: function () {\n                switch (this.type) {\n                    case 0 /* Container */:\n                        return 'TNodeType.Container';\n                    case 3 /* Element */:\n                        return 'TNodeType.Element';\n                    case 4 /* ElementContainer */:\n                        return 'TNodeType.ElementContainer';\n                    case 5 /* IcuContainer */:\n                        return 'TNodeType.IcuContainer';\n                    case 1 /* Projection */:\n                        return 'TNodeType.Projection';\n                    case 2 /* View */:\n                        return 'TNodeType.View';\n                    default:\n                        return 'TNodeType.???';\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"flags_\", {\n            get: function () {\n                var flags = [];\n                if (this.flags & 8 /* hasClassInput */)\n                    flags.push('TNodeFlags.hasClassInput');\n                if (this.flags & 4 /* hasContentQuery */)\n                    flags.push('TNodeFlags.hasContentQuery');\n                if (this.flags & 16 /* hasStyleInput */)\n                    flags.push('TNodeFlags.hasStyleInput');\n                if (this.flags & 1 /* isComponent */)\n                    flags.push('TNodeFlags.isComponent');\n                if (this.flags & 32 /* isDetached */)\n                    flags.push('TNodeFlags.isDetached');\n                if (this.flags & 2 /* isProjected */)\n                    flags.push('TNodeFlags.isProjected');\n                return flags.join('|');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TNode;\n    }());\n    var TViewData = ngDevMode && createNamedArrayType('TViewData');\n    var TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates TData.\n     *\n     * Simple slice will keep the same type, and we need it to be TData\n     */\n    function cloneToTViewData(list) {\n        if (TVIEWDATA_EMPTY === undefined)\n            TVIEWDATA_EMPTY = new TViewData();\n        return TVIEWDATA_EMPTY.concat(list);\n    }\n    var LViewBlueprint = ngDevMode && createNamedArrayType('LViewBlueprint');\n    var MatchesArray = ngDevMode && createNamedArrayType('MatchesArray');\n    var TViewComponents = ngDevMode && createNamedArrayType('TViewComponents');\n    var TNodeLocalNames = ngDevMode && createNamedArrayType('TNodeLocalNames');\n    var TNodeInitialInputs = ngDevMode && createNamedArrayType('TNodeInitialInputs');\n    var TNodeInitialData = ngDevMode && createNamedArrayType('TNodeInitialData');\n    var LCleanup = ngDevMode && createNamedArrayType('LCleanup');\n    var TCleanup = ngDevMode && createNamedArrayType('TCleanup');\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = node.innerHTML;\n                return outerHTML.split(innerHTML)[0] || null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"__other__\", {\n            /**\n             * Additional information which is hidden behind a property. The extra level of indirection is\n             * done so that the debug view would not be cluttered with properties which are only rarely\n             * relevant to the developer.\n             */\n            get: function () {\n                return {\n                    tView: this._raw_lView[TVIEW],\n                    cleanup: this._raw_lView[CLEANUP],\n                    injector: this._raw_lView[INJECTOR$1],\n                    rendererFactory: this._raw_lView[RENDERER_FACTORY],\n                    renderer: this._raw_lView[RENDERER],\n                    sanitizer: this._raw_lView[SANITIZER],\n                    childHead: toDebug(this._raw_lView[CHILD_HEAD]),\n                    next: toDebug(this._raw_lView[NEXT]),\n                    childTail: toDebug(this._raw_lView[CHILD_TAIL]),\n                    declarationView: toDebug(this._raw_lView[DECLARATION_VIEW]),\n                    queries: null,\n                    tHost: this._raw_lView[T_HOST],\n                    bindingIndex: this._raw_lView[BINDING_INDEX],\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.__other__.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.__other__.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                var rawValue = lView[tNode.index];\n                var native = unwrapRNode(rawValue);\n                var componentLViewDebug = toDebug(readLViewValue(rawValue));\n                var styles = isStylingContext(tNode.styles) ?\n                    new NodeStylingDebug(tNode.styles, lView) :\n                    null;\n                var classes = isStylingContext(tNode.classes) ?\n                    new NodeStylingDebug(tNode.classes, lView, true) :\n                    null;\n                debugNodes.push({\n                    html: toHtml(native),\n                    native: native, styles: styles, classes: classes,\n                    nodes: toDebugNodes(tNode.child, lView),\n                    component: componentLViewDebug,\n                });\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"movedViews\", {\n            get: function () { return this._raw_lContainer[MOVED_VIEWS]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"__other__\", {\n            get: function () {\n                return {\n                    next: toDebug(this._raw_lContainer[NEXT]),\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Selects an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n     *   if (rf & 1) {\n     *     element(0, 'div');\n     *   }\n     *   if (rf & 2) {\n     *     select(0); // Select the <div/> created above.\n     *     property('title', 'test');\n     *   }\n     *  }\n     * ```\n     * @param index the index of the item to act on with the following instructions\n     *\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode &&\n            assertLessThan(index, getLView().length - HEADER_OFFSET, 'Should be within range for the view data');\n        var lView = getLView();\n        selectInternal(lView, index);\n    }\n    function selectInternal(lView, index) {\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        executePreOrderHooks(lView, lView[TVIEW], getCheckNoChangesMode(), index);\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵselect` instruction.\n        setSelectedIndex(index);\n    }\n\n    var ɵ0$5 = function () { return Promise.resolve(null); };\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (ɵ0$5)();\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        var selectedIndex = getSelectedIndex();\n        try {\n            if (tView.expandoInstructions !== null) {\n                var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n                setBindingRoot(bindingRootIndex);\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                    var instruction = tView.expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            currentElementIndex = -instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = tView.expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                        setBindingRoot(bindingRootIndex);\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            viewData[BINDING_INDEX] = bindingRootIndex;\n                            var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                            instruction(2 /* Update */, hostCtx, currentElementIndex);\n                            // Each directive gets a uniqueId value that is the same for both\n                            // create and update calls when the hostBindings function is called. The\n                            // directive uniqueId is not set anywhere--it is just incremented between\n                            // each hostBindings call and is useful for helping instruction code\n                            // uniquely determine which directive is currently active when executed.\n                            incrementActiveDirectiveId();\n                        }\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    /** Refreshes all content queries declared by directives in a given view */\n    function refreshContentQueries(tView, lView) {\n        var contentQueries = tView.contentQueries;\n        if (contentQueries !== null) {\n            for (var i = 0; i < contentQueries.length; i += 2) {\n                var queryStartIdx = contentQueries[i];\n                var directiveDefIdx = contentQueries[i + 1];\n                if (directiveDefIdx !== -1) {\n                    var directiveDef = tView.data[directiveDefIdx];\n                    ngDevMode &&\n                        assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                    setCurrentQueryIndex(queryStartIdx);\n                    directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n                }\n            }\n        }\n    }\n    /** Refreshes child components in the current view (update mode). */\n    function refreshChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            refreshComponent(hostLView, components[i]);\n        }\n    }\n    /** Renders child components in the current view (creation mode). */\n    function renderChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            renderComponent(hostLView, components[i]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param renderer A renderer to use\n     * @returns the element created\n     */\n    function elementCreate(name, renderer, namespace) {\n        if (isProceduralRenderer(renderer)) {\n            return renderer.createElement(name, namespace);\n        }\n        else {\n            return namespace === null ? renderer.createElement(name) :\n                renderer.createElementNS(namespace, name);\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = ngDevMode ? cloneToLView(tView.blueprint) : tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n        // Keep this function short, so that the VM will inline it.\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.data[adjustedIndex] ||\n            createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs, index);\n        setPreviousOrParentTNode(tNode, true);\n        return tNode;\n    }\n    function createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs, index) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && parent !== tHostNode;\n        var tParentNode = parentInSameView ? parent : null;\n        var tNode = tView.data[adjustedIndex] =\n            createTNode(tView, tParentNode, type, adjustedIndex, name, attrs);\n        // The first node is not always the one at index 0, in case of i18n, index 0 can be the\n        // instruction `i18nStart` and the first node has the index 1 or more\n        if (index === 0 || !tView.firstChild) {\n            tView.firstChild = tNode;\n        }\n        // Now link ourselves into the tree.\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tView, tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     *\n     * @param view The LView containing the blueprint to adjust\n     * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        ngDevMode && assertGreaterThan(numSlotsToAlloc, 0, 'The number of slots to alloc should be greater than 0');\n        if (numSlotsToAlloc > 0) {\n            var tView = view[TVIEW];\n            if (tView.firstTemplatePass) {\n                for (var i = 0; i < numSlotsToAlloc; i++) {\n                    tView.blueprint.push(null);\n                    tView.data.push(null);\n                    view.push(null);\n                }\n                // We should only increment the expando start index if there aren't already directives\n                // and injectors saved in the \"expando\" section\n                if (!tView.expandoInstructions) {\n                    tView.expandoStartIndex += numSlotsToAlloc;\n                }\n                else {\n                    // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                    // bindings know that they should skip x slots\n                    tView.expandoInstructions.push(numSlotsToAlloc);\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Used for creating the LView of a dynamic embedded view, either through\n     * ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, injectorIndex) {\n        var lView = createLView(declarationView, tView, context, 16 /* CheckAlways */, null, null);\n        lView[DECLARATION_VIEW] = declarationView;\n        assignTViewNodeToLView(tView, null, -1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        return lView;\n    }\n    /**\n     * Processes a view in the creation mode. This includes a number of steps in a specific order:\n     * - creating view query functions (if any);\n     * - executing a template function in the creation mode;\n     * - updating static queries (if any);\n     * - creating child components defined in a given view.\n     */\n    function renderView(lView, tView, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), true, 'Should be run in creation mode');\n        var oldView = enterView(lView, lView[T_HOST]);\n        try {\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(1 /* Create */, viewQuery, context);\n            }\n            // Execute a template associated with this view, if it exists. A template function might not be\n            // defined for the root component views.\n            var templateFn = tView.template;\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 1 /* Create */, context);\n            }\n            // This needs to be set before children are processed to support recursive components.\n            // This must be set to false immediately after the first creation run because in an\n            // ngFor loop, all the views will be created together before update mode runs and turns\n            // off firstTemplatePass. If we don't set it here, instances will perform directive\n            // matching, etc again and again.\n            if (tView.firstTemplatePass) {\n                tView.firstTemplatePass = false;\n            }\n            // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n            // content queries are resolved during change detection (i.e. update mode), after embedded\n            // views are refreshed (see block above).\n            if (tView.staticContentQueries) {\n                refreshContentQueries(tView, lView);\n            }\n            // We must materialize query results before child components are processed\n            // in case a child component has projected a container. The LContainer needs\n            // to exist so the embedded views are properly attached by the container.\n            if (tView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, tView.viewQuery, context);\n            }\n            // Render child component views.\n            var components = tView.components;\n            if (components !== null) {\n                renderChildComponents(lView, components);\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n            leaveView(oldView);\n        }\n    }\n    /**\n     * Processes a view in update mode. This includes a number of steps in a specific order:\n     * - executing a template function in update mode;\n     * - executing hooks;\n     * - refreshing queries;\n     * - setting host bindings;\n     * - refreshing child (embedded and component) views.\n     */\n    function refreshView(lView, tView, templateFn, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), false, 'Should be run in update mode');\n        var oldView = enterView(lView, lView[T_HOST]);\n        try {\n            resetPreOrderHookFlags(lView);\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 2 /* Update */, context);\n            }\n            // Resetting the bindingIndex of the current LView as the next steps may trigger change\n            // detection.\n            lView[BINDING_INDEX] = tView.bindingStartIndex;\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executePreOrderHooks(lView, tView, checkNoChangesMode, undefined);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            if (tView.contentQueries !== null) {\n                refreshContentQueries(tView, lView);\n            }\n            resetPreOrderHookFlags(lView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode, 1 /* AfterContentInitHooksToBeRun */, undefined);\n            setHostBindings(tView, lView);\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(2 /* Update */, viewQuery, context);\n            }\n            // Refresh child component views.\n            var components = tView.components;\n            if (components !== null) {\n                refreshChildComponents(lView, components);\n            }\n            resetPreOrderHookFlags(lView);\n            executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode, 2 /* AfterViewInitHooksToBeRun */, undefined);\n        }\n        finally {\n            lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n            lView[BINDING_INDEX] = tView.bindingStartIndex;\n            leaveView(oldView);\n        }\n    }\n    function renderComponentOrTemplate(hostView, templateFn, context) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            var tView = hostView[TVIEW];\n            if (creationModeIsActive) {\n                renderView(hostView, tView, context);\n            }\n            refreshView(hostView, tView, templateFn, context);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n        }\n    }\n    function executeTemplate(lView, templateFn, rf, context) {\n        namespaceHTMLInternal();\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(null);\n            if (rf & 2 /* Update */) {\n                // When we're updating, have an inherent ɵɵselect(0) so we don't have to generate that\n                // instruction for most update blocks\n                selectInternal(lView, 0);\n            }\n            templateFn(rf, context);\n        }\n        finally {\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, tNode, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        instantiateAllDirectives(tView, lView, tNode);\n        invokeDirectivesHostBindings(tView, lView, tNode);\n        saveResolvedLocalsInData(lView, tNode, localRefExtractor);\n        setActiveHostElement(null);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTView(def) {\n        return def.tView || (def.tView = createTView(-1, def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = ngDevMode ?\n            new TViewConstructor(viewIndex, // id: number,\n            blueprint, // blueprint: LView,\n            templateFn, // template: ComponentTemplate<{}>|null,\n            null, // queries: TQueries|null\n            viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n            null, // node: TViewNode|TElementNode|null,\n            cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n            bindingStartIndex, // bindingStartIndex: number,\n            initialViewLength, // expandoStartIndex: number,\n            null, // expandoInstructions: ExpandoInstructions|null,\n            true, // firstTemplatePass: boolean,\n            false, // staticViewQueries: boolean,\n            false, // staticContentQueries: boolean,\n            null, // preOrderHooks: HookData|null,\n            null, // preOrderCheckHooks: HookData|null,\n            null, // contentHooks: HookData|null,\n            null, // contentCheckHooks: HookData|null,\n            null, // viewHooks: HookData|null,\n            null, // viewCheckHooks: HookData|null,\n            null, // destroyHooks: HookData|null,\n            null, // cleanup: any[]|null,\n            null, // contentQueries: number[]|null,\n            null, // components: number[]|null,\n            typeof directives === 'function' ?\n                directives() :\n                directives, // directiveRegistry: DirectiveDefList|null,\n            typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n            null, // firstChild: TNode|null,\n            schemas) :\n            {\n                id: viewIndex,\n                blueprint: blueprint,\n                template: templateFn,\n                queries: null,\n                viewQuery: viewQuery,\n                node: null,\n                data: blueprint.slice().fill(null, bindingStartIndex),\n                bindingStartIndex: bindingStartIndex,\n                expandoStartIndex: initialViewLength,\n                expandoInstructions: null,\n                firstTemplatePass: true,\n                staticViewQueries: false,\n                staticContentQueries: false,\n                preOrderHooks: null,\n                preOrderCheckHooks: null,\n                contentHooks: null,\n                contentCheckHooks: null,\n                viewHooks: null,\n                viewCheckHooks: null,\n                destroyHooks: null,\n                cleanup: null,\n                contentQueries: null,\n                components: null,\n                directiveRegistry: typeof directives === 'function' ? directives() : directives,\n                pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n                firstChild: null,\n                schemas: schemas,\n            };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = ngDevMode ? new LViewBlueprint() : [];\n        for (var i = 0; i < initialViewLength; i++) {\n            blueprint.push(i < bindingStartIndex ? null : NO_CHANGE);\n        }\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tView, tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        var injectorIndex = tParent ? tParent.injectorIndex : -1;\n        return ngDevMode ? new TNodeConstructor(tView, // tView_: TView\n        type, // type: TNodeType\n        adjustedIndex, // index: number\n        injectorIndex, // injectorIndex: number\n        -1, // directiveStart: number\n        -1, // directiveEnd: number\n        -1, // propertyMetadataStartIndex: number\n        -1, // propertyMetadataEndIndex: number\n        0, // flags: TNodeFlags\n        0, // providerIndexes: TNodeProviderIndexes\n        tagName, // tagName: string|null\n        attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n        null, // localNames: (string|number)[]|null\n        undefined, // initialInputs: (string[]|null)[]|null|undefined\n        undefined, // inputs: PropertyAliases|null|undefined\n        undefined, // outputs: PropertyAliases|null|undefined\n        null, // tViews: ITView|ITView[]|null\n        null, // next: ITNode|null\n        null, // projectionNext: ITNode|null\n        null, // child: ITNode|null\n        tParent, // parent: TElementNode|TContainerNode|null\n        null, // projection: number|(ITNode|RNode[])[]|null\n        null, // styles: TStylingContext|null\n        null) :\n            {\n                type: type,\n                index: adjustedIndex,\n                injectorIndex: injectorIndex,\n                directiveStart: -1,\n                directiveEnd: -1,\n                propertyMetadataStartIndex: -1,\n                propertyMetadataEndIndex: -1,\n                flags: 0,\n                providerIndexes: 0,\n                tagName: tagName,\n                attrs: attrs,\n                localNames: null,\n                initialInputs: undefined,\n                inputs: undefined,\n                outputs: undefined,\n                tViews: null,\n                next: null,\n                projectionNext: null,\n                child: null,\n                parent: tParent,\n                projection: null,\n                styles: null,\n                classes: null,\n            };\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNode\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     * Note: this mapping has to be kept in sync with the equally named mapping in the template\n     * type-checking machinery of ngtsc.\n     */\n    var ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    /**\n                     * dataValue is an array containing runtime input or output names for the directives:\n                     * i+0: directive instance index\n                     * i+1: publicName\n                     * i+2: privateName\n                     *\n                     * e.g. [0, 'change', 'change-minified']\n                     * we want to set the reflected property with the privateName: dataValue[i+2]\n                     */\n                    for (var i = 0; i < dataValue.length; i += 3) {\n                        setNgReflectProperty(lView, element, tNode.type, dataValue[i + 2], value);\n                    }\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = ATTR_TO_PROP[propName] || propName;\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                validateAgainstUnknownProperties(lView, element, propName, tNode);\n                ngDevMode.rendererSetProperty++;\n            }\n            savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the\n            // property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                throw createUnknownPropertyError(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function validateAgainstUnknownProperties(hostView, element, propName, tNode) {\n        // If the tag matches any of the schemas we shouldn't throw.\n        if (matchingSchemas(hostView, tNode.tagName)) {\n            return;\n        }\n        // If prop is not a known property of the HTML element...\n        if (!(propName in element) &&\n            // and we are in a browser context... (web worker nodes should be skipped)\n            typeof Node === 'function' && element instanceof Node &&\n            // and isn't a synthetic animation property...\n            propName[0] !== ANIMATION_PROP_PREFIX) {\n            // ... it is probably a user error and we should throw.\n            throw createUnknownPropertyError(propName, tNode);\n        }\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n    * Stores debugging data for this property binding on first template pass.\n    * This enables features like DebugElement.properties.\n    */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n    * Creates an error that should be thrown when encountering an unknown property on an element.\n    * @param propName Name of the invalid property.\n    * @param tNode Node on which we encountered the error.\n    */\n    function createUnknownPropertyError(propName, tNode) {\n        return new Error(\"Template error: Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, lView, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n        // tsickle.\n        ngDevMode && assertFirstTemplatePass(tView);\n        if (!getBindingsEnabled())\n            return;\n        var directives = findDirectiveMatches(tView, lView, tNode);\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, lView, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                if (def.contentQueries) {\n                    tNode.flags |= 4 /* hasContentQuery */;\n                }\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, tNode, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        var selectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = viewData[i];\n                if (def.hostBindings) {\n                    invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n                    // Each directive gets a uniqueId value that is the same for both\n                    // create and update calls when the hostBindings function is called. The\n                    // directive uniqueId is not set anywhere--it is just incremented between\n                    // each hostBindings call and is useful for helping instruction code\n                    // uniquely determine which directive is currently active when executed.\n                    incrementActiveDirectiveId();\n                }\n                else if (firstTemplatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(lView, hostTNode, directive, def, directiveDefIdx) {\n        postProcessBaseDirective(lView, hostTNode, directive);\n        if (hostTNode.attrs !== null) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, hostTNode);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(hostTNode.index, lView);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, hostTNode, directive) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        attachPatchData(directive, lView);\n        var native = getNativeByTNode(hostTNode, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 4 /* ElementContainer */, 0 /* Container */);\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = ngDevMode ? new MatchesArray() : []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        markAsComponentHost(tView, tNode);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /**\n     * Marks a given TNode as a component's host. This consists of:\n     * - setting appropriate TNode flags;\n     * - storing index of component's host element so it will be queued for view refresh during CD.\n    */\n    function markAsComponentHost(tView, hostTNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        hostTNode.flags = 1 /* isComponent */;\n        (tView.components || (tView.components = ngDevMode ? new TViewComponents() : [])).push(hostTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames =\n                ngDevMode ? new TNodeLocalNames() : [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, hostTNode, def) {\n        var native = getNativeByTNode(hostTNode, lView);\n        var tView = getOrCreateTView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, lView[hostTNode.index], hostTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n        componentView[T_HOST] = hostTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[hostTNode.index] = componentView;\n    }\n    function elementAttributeInternal(index, name, value, lView, sanitizer, namespace) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && validateAgainstEventAttributes(name);\n        var element = getNativeByIndex(index, lView);\n        var renderer = lView[RENDERER];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                element.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var tNode = getTNode(index, lView);\n            var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(element, name, strValue, namespace);\n            }\n            else {\n                namespace ? element.setAttributeNS(namespace, name, strValue) :\n                    element.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var lView = getLView();\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = ngDevMode ? new TNodeInitialInputs() : []);\n        // Ensure that we don't create sparse arrays\n        for (var i_1 = initialInputData.length; i_1 <= directiveIndex; i_1++) {\n            initialInputData.push(null);\n        }\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] ||\n                    (initialInputData[directiveIndex] = ngDevMode ? new TNodeInitialData() : []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    // Not sure why I need to do `any` here but TS complains later.\n    var LContainerArray = ngDevMode && createNamedArrayType('LContainer');\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        // https://jsperf.com/array-literal-vs-new-array-really\n        var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n        true, // Boolean `true` in this position signifies that this is an `LContainer`\n        isForViewContainerRef ? -1 : 0, // active index\n        currentView, // parent\n        null, // next\n        null, // queries\n        tNode, // t_host\n        native, // native,\n        null);\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n     * them by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        var viewOrContainer = lView[CHILD_HEAD];\n        while (viewOrContainer !== null) {\n            // Note: viewOrContainer can be an LView or an LContainer instance, but here we are only\n            // interested in LContainer\n            if (isLContainer(viewOrContainer) && viewOrContainer[ACTIVE_INDEX] === -1) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < viewOrContainer.length; i++) {\n                    var embeddedLView = viewOrContainer[i];\n                    var embeddedTView = embeddedLView[TVIEW];\n                    ngDevMode && assertDefined(embeddedTView, 'TView must be allocated');\n                    refreshView(embeddedLView, embeddedTView, embeddedTView.template, embeddedLView[CONTEXT]);\n                }\n            }\n            viewOrContainer = viewOrContainer[NEXT];\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param componentHostIdx  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function refreshComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), false, 'Should be run in update mode');\n        var componentView = getComponentViewByIndex(componentHostIdx, hostLView);\n        // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n        if (viewAttachedToChangeDetector(componentView) &&\n            componentView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            var tView = componentView[TVIEW];\n            refreshView(componentView, tView, tView.template, componentView[CONTEXT]);\n        }\n    }\n    function renderComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), true, 'Should be run in creation mode');\n        var componentView = getComponentViewByIndex(componentHostIdx, hostLView);\n        syncViewWithBlueprint(componentView);\n        renderView(componentView, componentView[TVIEW], componentView[CONTEXT]);\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView.push(componentTView.blueprint[i]);\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n        // to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n        // of\n        // order, the change detection will run out of order, as the act of retrieving the the\n        // LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_1 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_1;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var lView = readPatchedLView(rootComponent);\n            var tView = lView[TVIEW];\n            renderComponentOrTemplate(lView, tView.template, rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            var tView = view[TVIEW];\n            refreshView(view, tView, tView.template, context);\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        var view = getComponentViewByInstance(component);\n        checkNoChangesInternal(view, component);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    function executeViewQueryFn(flags, viewQueryFn, component) {\n        ngDevMode && assertDefined(viewQueryFn, 'View queries function to execute must be defined.');\n        setCurrentQueryIndex(0);\n        viewQueryFn(flags, component);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n        }\n        return tNode.inputs;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = ngDevMode ? new TCleanup() : []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    /**\n     * Updates a text binding at a given index in a given LView.\n     */\n    function textBindingInternal(lView, index, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var element = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(element, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element, value) : element.textContent = value;\n    }\n    /**\n     * Renders all initial styling (class and style values) on to the element from the tNode.\n     *\n     * All initial styling data (i.e. any values extracted from the `style` or `class` attributes\n     * on an element) are collected into the `tNode.styles` and `tNode.classes` data structures.\n     * These values are populated during the creation phase of an element and are then later\n     * applied once the element is instantiated. This function applies each of the static\n     * style and class entries to the element.\n     */\n    function renderInitialStyling(renderer, native, tNode) {\n        renderStylingMap(renderer, native, tNode.classes, true);\n        renderStylingMap(renderer, native, tNode.styles, false);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$1 = unusedValueExportToPlacateAjd$1 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5 + unusedValueExportToPlacateAjd$3 + unusedValueExportToPlacateAjd;\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeActionOnElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {\n        // If this slot was allocated for a text node dynamically created by i18n, the text node itself\n        // won't be created until i18nApply() in the update block, so this node should be skipped.\n        // For more info, see \"ICU expressions should work inside an ngTemplateOutlet inside an ngFor\"\n        // in `i18n_spec.ts`.\n        if (lNodeToHandle != null) {\n            var lContainer = void 0;\n            var isComponent = false;\n            // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is\n            // wrapped\n            // in an array which needs to be unwrapped. We need to know if it is a component and if\n            // it has LContainer so that we can process all of those cases appropriately.\n            if (isLContainer(lNodeToHandle)) {\n                lContainer = lNodeToHandle;\n            }\n            else if (isLView(lNodeToHandle)) {\n                isComponent = true;\n                ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n                lNodeToHandle = lNodeToHandle[HOST];\n            }\n            var rNode = unwrapRNode(lNodeToHandle);\n            ngDevMode && assertDomNode(rNode);\n            if (action === 0 /* Insert */) {\n                nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n            }\n            else if (action === 1 /* Detach */) {\n                nativeRemoveNode(renderer, rNode, isComponent);\n            }\n            else if (action === 2 /* Destroy */) {\n                ngDevMode && ngDevMode.rendererDestroyNode++;\n                renderer.destroyNode(rNode);\n            }\n            if (lContainer != null) {\n                executeActionOnContainer(renderer, action, lContainer, parent, beforeNode);\n            }\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(lView, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(lView[TVIEW].node, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = lView[RENDERER];\n            var action = insertMode ? 0 /* Insert */ : 1 /* Detach */;\n            executeActionOnView(renderer, action, lView, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        executeActionOnView(lView[RENDERER], 1 /* Detach */, lView, null, null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // track views where declaration and insertion points are different\n        var declarationLContainer = lView[DECLARATION_LCONTAINER];\n        if (declarationLContainer !== null && lContainer !== declarationLContainer) {\n            trackMovedView(declarationLContainer, lView);\n        }\n        // notify query that a new view has been added\n        var lQueries = lView[QUERIES];\n        if (lQueries !== null) {\n            lQueries.insertView(lView[TVIEW]);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Track views created from the declaration container (TemplateRef) and inserted into a\n     * different LContainer.\n     */\n    function trackMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        var declaredViews = declarationContainer[MOVED_VIEWS];\n        if (declaredViews === null) {\n            declarationContainer[MOVED_VIEWS] = [lView];\n        }\n        else {\n            declaredViews.push(lView);\n        }\n    }\n    function detachMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        ngDevMode && assertDefined(declarationContainer[MOVED_VIEWS], 'A projected view should belong to a non-empty projected views collection');\n        var projectedViews = declarationContainer[MOVED_VIEWS];\n        var declaredViewIndex = projectedViews.indexOf(lView);\n        projectedViews.splice(declaredViewIndex, 1);\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method removes the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            var declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];\n            if (declarationLContainer !== null && declarationLContainer !== lContainer) {\n                detachMovedView(declarationLContainer, viewToDetach);\n            }\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            var removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);\n            addRemoveViewFromContainer(viewToDetach, false);\n            // notify query that a view has been removed\n            var lQueries = removedLView[QUERIES];\n            if (lQueries !== null) {\n                lQueries.detachView(removedLView[TVIEW]);\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param lView The view to be destroyed.\n     */\n    function destroyLView(lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = lView[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                executeActionOnView(renderer, 2 /* Destroy */, lView, null, null);\n            }\n            destroyViewTree(lView);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            var declarationContainer = view[DECLARATION_LCONTAINER];\n            // we are dealing with an embedded view that is still inserted into a container\n            if (declarationContainer !== null && isLContainer(view[PARENT])) {\n                // and this is a projected view\n                if (declarationContainer !== view[PARENT]) {\n                    detachMovedView(declarationContainer, view);\n                }\n                // For embedded views still attached to a container: remove query result from this view.\n                var lQueries = view[QUERIES];\n                if (lQueries !== null) {\n                    lQueries.detachView(view[TVIEW]);\n                }\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup !== null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode);\n        var renderParent = parent.parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (renderParent == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            var isIcuCase = parent && parent.type === 5 /* IcuContainer */;\n            // If the parent of this node is an ICU container, then it is represented by comment node and we\n            // need to use it as an anchor. If it is projected then its direct parent node is the renderer.\n            if (isIcuCase && parent.flags & 2 /* isProjected */) {\n                return getNativeByTNode(parent, currentView).parentNode;\n            }\n            ngDevMode && assertNodeType(renderParent, 3 /* Element */);\n            if (renderParent.flags & 1 /* isComponent */ && !isIcuCase) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[renderParent.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(renderParent, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode !== null) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var e_1, _a;\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                try {\n                    for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                        var nativeNode = childEl_1_1.value;\n                        nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(viewIndexInContainer, lContainer) {\n        var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n        if (nextViewIndex < lContainer.length) {\n            var lView = lContainer[nextViewIndex];\n            ngDevMode && assertDefined(lView[T_HOST], 'Missing Host TNode');\n            var tViewNodeChild = lView[T_HOST].child;\n            return tViewNodeChild !== null ? getNativeByTNodeOrNull(tViewNodeChild, lView) :\n                lContainer[NATIVE];\n        }\n        else {\n            return lContainer[NATIVE];\n        }\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Appends nodes to a target projection place. Nodes to insert were previously re-distribution and\n     * stored on a component host level.\n     * @param lView A LView where nodes are inserted (target LView)\n     * @param tProjectionNode A projection node where previously re-distribution should be appended\n     * (target insertion place)\n     * @param selectorIndex A bucket from where nodes to project should be taken\n     * @param componentView A where projectable nodes were initially created (source view)\n     */\n    function appendProjectedNodes(lView, tProjectionNode, selectorIndex, componentView) {\n        var projectedView = componentView[PARENT];\n        var componentNode = componentView[T_HOST];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        if (Array.isArray(nodeToProject)) {\n            appendChild(nodeToProject, tProjectionNode, lView);\n        }\n        else {\n            while (nodeToProject) {\n                if (!(nodeToProject.flags & 32 /* isDetached */)) {\n                    if (nodeToProject.type === 1 /* Projection */) {\n                        appendProjectedNodes(lView, tProjectionNode, nodeToProject.projection, findComponentView(projectedView));\n                    }\n                    else {\n                        // This flag must be set now or we won't know that this node is projected\n                        // if the nodes are inserted into a container later.\n                        nodeToProject.flags |= 2 /* isProjected */;\n                        appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                    }\n                }\n                nodeToProject = nodeToProject.projectionNext;\n            }\n        }\n    }\n    /**\n     * Loops over all children of a TNode container and appends them to the DOM\n     *\n     * @param ngContainerChildTNode The first child of the TNode container\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedChildren(ngContainerChildTNode, tProjectionNode, currentView, projectionView) {\n        while (ngContainerChildTNode) {\n            appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n            ngContainerChildTNode = ngContainerChildTNode.next;\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            for (var i = CONTAINER_HEADER_OFFSET; i < nodeOrContainer.length; i++) {\n                addRemoveViewFromContainer(nodeOrContainer[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else if (projectedTNode.type === 5 /* IcuContainer */) {\n            // The node we are adding is an ICU container which is why we also need to project all the\n            // children nodes that might have been created previously and are linked to this anchor\n            var ngContainerChildTNode = projectedTNode.child;\n            appendProjectedChildren(ngContainerChildTNode, ngContainerChildTNode, projectionView, projectionView);\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                appendProjectedChildren(projectedTNode.child, tProjectionNode, currentView, projectionView);\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n    /**\n     * `executeActionOnView` performs an operation on the view as specified in `action` (insert, detach,\n     * destroy)\n     *\n     * Inserting a view without projection or containers at top level is simple. Just iterate over the\n     * root nodes of the View, and for each node perform the `action`.\n     *\n     * Things get more complicated with containers and projections. That is because coming across:\n     * - Container: implies that we have to insert/remove/destroy the views of that container as well\n     *              which in turn can have their own Containers at the View roots.\n     * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n     *               complication is that the nodes we are projecting can themselves have Containers\n     *               or other Projections.\n     *\n     * As you can see this is a very recursive problem. While the recursive implementation is not the\n     * most efficient one, trying to unroll the nodes non-recursively results in very complex code that\n     * is very hard (to maintain). We are sacrificing a bit of performance for readability using a\n     * recursive implementation.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function executeActionOnView(renderer, action, lView, renderParent, beforeNode) {\n        var tView = lView[TVIEW];\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        var viewRootTNode = tView.node.child;\n        while (viewRootTNode !== null) {\n            executeActionOnNode(renderer, action, lView, viewRootTNode, renderParent, beforeNode);\n            viewRootTNode = viewRootTNode.next;\n        }\n    }\n    /**\n     * `executeActionOnProjection` performs an operation on the projection specified by `action`\n     * (insert, detach, destroy).\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode projection TNode to process\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function executeActionOnProjection(renderer, action, lView, tProjectionNode, renderParent, beforeNode) {\n        var componentLView = findComponentView(lView);\n        var componentNode = componentLView[T_HOST];\n        ngDevMode && assertDefined(componentNode.projection, 'Element nodes for which projection is processed must have projection defined.');\n        var nodeToProject = componentNode.projection[tProjectionNode.projection];\n        if (nodeToProject !== undefined) {\n            if (Array.isArray(nodeToProject)) {\n                for (var i = 0; i < nodeToProject.length; i++) {\n                    var rNode = nodeToProject[i];\n                    ngDevMode && assertDomNode(rNode);\n                    executeActionOnElementOrContainer(action, renderer, renderParent, rNode, beforeNode);\n                }\n            }\n            else {\n                var projectionTNode = nodeToProject;\n                var projectedComponentLView = componentLView[PARENT];\n                while (projectionTNode !== null) {\n                    executeActionOnNode(renderer, action, projectedComponentLView, projectionTNode, renderParent, beforeNode);\n                    projectionTNode = projectionTNode.projectionNext;\n                }\n            }\n        }\n    }\n    /**\n     * `executeActionOnContainer` performs an operation on the container and its views as specified by\n     * `action` (insert, detach, destroy)\n     *\n     * Inserting a Container is complicated by the fact that the container may have Views which\n     * themselves have containers or projections.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function executeActionOnContainer(renderer, action, lContainer, renderParent, beforeNode) {\n        ngDevMode && assertLContainer(lContainer);\n        var anchor = lContainer[NATIVE]; // LContainer has its own before node.\n        var native = unwrapRNode(lContainer);\n        // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n        // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node\n        // (comment in the DOM) that will be different from the LContainer's host node. In this particular\n        // case we need to execute action on 2 nodes:\n        // - container's host node (this is done in the executeNodeAction)\n        // - container's host node (this is done here)\n        if (anchor !== native) {\n            executeActionOnElementOrContainer(action, renderer, renderParent, anchor, beforeNode);\n        }\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var lView = lContainer[i];\n            executeActionOnView(renderer, action, lView, renderParent, anchor);\n        }\n    }\n    /**\n     * `executeActionOnElementContainerOrIcuContainer` performs an operation on the ng-container node\n     * and its child nodes as specified by the `action` (insert, detach, destroy).\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tNode The TNode associated with the `ElementContainer` or `IcuContainer`.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function executeActionOnElementContainerOrIcuContainer(renderer, action, lView, tNode, renderParent, beforeNode) {\n        var node = lView[tNode.index];\n        executeActionOnElementOrContainer(action, renderer, renderParent, node, beforeNode);\n        var childTNode = tNode.child;\n        while (childTNode) {\n            executeActionOnNode(renderer, action, lView, childTNode, renderParent, beforeNode);\n            childTNode = childTNode.next;\n        }\n    }\n    function executeActionOnNode(renderer, action, lView, tNode, renderParent, beforeNode) {\n        var nodeType = tNode.type;\n        if (!(tNode.flags & 32 /* isDetached */)) {\n            if (nodeType === 4 /* ElementContainer */ || nodeType === 5 /* IcuContainer */) {\n                executeActionOnElementContainerOrIcuContainer(renderer, action, lView, tNode, renderParent, beforeNode);\n            }\n            else if (nodeType === 1 /* Projection */) {\n                executeActionOnProjection(renderer, action, lView, tNode, renderParent, beforeNode);\n            }\n            else {\n                ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */);\n                executeActionOnElementOrContainer(action, renderer, renderParent, lView[tNode.index], beforeNode);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNodeOrNull(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node on which a TemplateRef is requested\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationView, _declarationTContainer, elementRef) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationView = _declarationView;\n                    _this._declarationTContainer = _declarationTContainer;\n                    _this.elementRef = elementRef;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context) {\n                    var embeddedTView = this._declarationTContainer.tViews;\n                    var lView = createEmbeddedViewAndNode(embeddedTView, context, this._declarationView, this._declarationTContainer.injectorIndex);\n                    var declarationLContainer = this._declarationView[this._declarationTContainer.index];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    lView[DECLARATION_LCONTAINER] = declarationLContainer;\n                    var declarationViewLQueries = this._declarationView[QUERIES];\n                    if (declarationViewLQueries !== null) {\n                        lView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);\n                    }\n                    renderView(lView, embeddedTView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, hostTNode, createElementRef(ElementRefToken, hostTNode, hostView));\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this.length > 0) {\n                        this.remove(this.length - 1);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) {\n                    return this._lContainer[VIEW_REFS] !== null && this._lContainer[VIEW_REFS][index] || null;\n                };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer.length - CONTAINER_HEADER_OFFSET; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var viewRef = templateRef.createEmbeddedView(context || {});\n                    this.insert(viewRef, index);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    this.allocateContainerIfNeeded();\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    addToArray(this._lContainer[VIEW_REFS], adjustedIdx, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) {\n                    return this._lContainer[VIEW_REFS] !== null ?\n                        this._lContainer[VIEW_REFS].indexOf(viewRef) :\n                        0;\n                };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx) != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                ViewContainerRef_.prototype.allocateContainerIfNeeded = function () {\n                    if (this._lContainer[VIEW_REFS] === null) {\n                        this._lContainer[VIEW_REFS] = [];\n                    }\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            }\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef(isPipe) {\n        if (isPipe === void 0) { isPipe = false; }\n        return createViewRef(getPreviousOrParentTNode(), getLView(), isPipe);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param isPipe Whether the view is being injected into a pipe.\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, isPipe) {\n        if (isComponent(hostTNode) && !isPipe) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, null, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */ ||\n            hostTNode.type === 4 /* ElementContainer */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Injects a Renderer2 for the current component. */\n    function injectRenderer2() {\n        // We need the Renderer to be based on the component that it's being injected into, however since\n        // DI happens before we've entered its view, `getLView` will return the parent view instead.\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var nodeAtIndex = getComponentViewByIndex(tNode.index, lView);\n        return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var ɵ0$6 = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] && paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else if (param === ChangeDetectorRef) {\n                    meta.token = param;\n                    meta.resolved = compiler.R3ResolvedDependencyType.ChangeDetectorRef;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var ɵ0$7 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$7 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$8 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$8 });\n    var EMPTY_ARRAY$1 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return ɵɵinject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$1))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$9 = function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); };\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, ɵ0$9);\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = ɵɵdefineInjectable({\n                token: injectableType,\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         *\n         * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n         * the function will return \"true\" to indicate that the providers of the type definition need\n         * to be processed. This allows us to process providers of injector types after all imports of\n         * an injector definition are processed. (following View Engine semantics: see FW-1349)\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return false;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return false;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                var importTypesWithProviders_1;\n                try {\n                    deepForEach(def.imports, function (imported) {\n                        if (_this.processInjectorType(imported, parents, dedupStack)) {\n                            if (importTypesWithProviders_1 === undefined)\n                                importTypesWithProviders_1 = [];\n                            // If the processed import is an injector type with providers, we store it in the\n                            // list of import types with providers, so that we can process those afterwards.\n                            importTypesWithProviders_1.push(imported);\n                        }\n                    });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n                // Imports which are declared with providers (TypeWithProviders) need to be processed\n                // after all imported modules are processed. This is similar to how View Engine\n                // processes/merges module imports in the metadata resolver. See: FW-1349.\n                if (importTypesWithProviders_1 !== undefined) {\n                    var _loop_1 = function (i) {\n                        var _a = importTypesWithProviders_1[i], ngModule_1 = _a.ngModule, providers = _a.providers;\n                        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModule_1, providers || EMPTY_ARRAY$2); });\n                    };\n                    for (var i = 0; i < importTypesWithProviders_1.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            return (ngModule !== undefined &&\n                defOrWrappedDef.providers !== undefined);\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an ngInjectableDef directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef !== null) {\n            return injectableDef.factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its ngInjectorDef.\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an ngInjectableDef and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = new Array(paramLength).fill('?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an ngInjectableDef\n        // from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return function () { return inheritedInjectableDef.factory(token); };\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n        return new StaticInjector(providers, parent, name);\n    }\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__PRE_R3__;\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = ɵɵdefineInjectable({\n            token: Injector,\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var ɵ0$a = IDENT;\n    var EMPTY = [];\n    var CIRCULAR$1 = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var ɵ1$2 = MULTI_PROVIDER_FN;\n    var NO_NEW_LINE$1 = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = Injector.NULL; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) {\n            // Just use IDENT\n        }\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR$1) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR$1) {\n                throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR$1;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? Injector.NULL : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    var ɵ0$b = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    };\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', ɵ0$b, Query);\n    var ɵ1$3 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    };\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', ɵ1$3, Query);\n    var ɵ2 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', ɵ2, Query);\n    var ɵ3 = function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', ɵ3, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ngComponentDef for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function isComponentDefPendingResolution(type) {\n        return componentDefPendingResolution.has(type);\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function restoreComponentResolutionQueue(queue) {\n        componentDefPendingResolution.clear();\n        queue.forEach(function (_, type) { return componentDefPendingResolution.add(type); });\n        componentResourceResolutionQueue = queue;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ɵɵallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (isDifferent(oldValue, value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer) {\n        var index = getSelectedIndex();\n        ngDevMode && assertNotEqual(index, -1, 'selected index cannot be -1');\n        var lView = getLView();\n        var bindReconciledValue = bind(lView, value);\n        if (bindReconciledValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bindReconciledValue, sanitizer);\n        }\n        return ɵɵproperty;\n    }\n    /**\n     * Creates a single value binding.\n     *\n     * @param lView Current view\n     * @param value Value to diff\n     */\n    function bind(lView, value) {\n        var bindingIndex = lView[BINDING_INDEX]++;\n        storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var bound = bind(lView, value);\n        if (bound !== NO_CHANGE) {\n            elementAttributeInternal(index, name, bound, lView, sanitizer, namespace);\n        }\n        return ɵɵattribute;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(lView, values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var isBindingUpdated = false;\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!isBindingUpdated) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(lView, prefix, v0, suffix) {\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     */\n    function interpolation2(lView, prefix, v0, i0, v1, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            lView[TVIEW].data[bindingIndex] = i0;\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     */\n    function interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     */\n    function interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     */\n    function interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     */\n    function interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     */\n    function interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     */\n    function interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n            tData[bindingIndex + 6] = i6;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolated, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    /**\n     * Used to perform change detection on the whole application.\n     *\n     * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n     * executes lifecycle hooks and conditionally checks components based on their\n     * `ChangeDetectionStrategy` and dirtiness.\n     *\n     * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n     * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n     * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n     * be changed when calling `renderComponent` and providing the `scheduler` option.\n     */\n    function tick(component) {\n        var rootView = getRootView(component);\n        var rootContext = rootView[CONTEXT];\n        tickRootContext(rootContext);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var lView = getLView();\n        var tNode = containerInternal(lView, index, null, null);\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        setIsNotParent();\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(lView, index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tContainerNode, localRefs || null);\n            var embeddedTView = tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, tView.schemas);\n            if (tView.queries !== null) {\n                tView.queries.template(tView, tContainerNode);\n                embeddedTView.queries = tView.queries.embeddedTView(tContainerNode);\n            }\n        }\n        createDirectivesAndLocals(tView, lView, tContainerNode, localRefExtractor);\n        attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n        registerPostOrderHooks(tView, tContainerNode);\n        setIsNotParent();\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = load(tView.data, index);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setPreviousOrParentTNode(previousOrParentTNode, true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executePreOrderHooks(lView, tView, getCheckNoChangesMode(), undefined);\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    function containerInternal(lView, nodeIndex, tagName, attrs) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = nodeIndex + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, nodeIndex + HEADER_OFFSET);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 0 /* Container */, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return load(contextLView, index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), lView, token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for how styling instructions are processed in Angular.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * Temporary function to bridge styling functionality between this new\n     * refactor (which is here inside of `styling_next/`) and the old\n     * implementation (which lives inside of `styling/`).\n     *\n     * This function is executed during the creation block of an element.\n     * Because the existing styling implementation issues a call to the\n     * `styling()` instruction, this instruction will also get run. The\n     * central idea here is that the directive index values are bound\n     * into the context. The directive index is temporary and is only\n     * required until the `select(n)` instruction is fully functional.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyling() {\n        var tView = getLView()[TVIEW];\n        if (tView.firstTemplatePass) {\n            updateLastDirectiveIndex$1(getPreviousOrParentTNode(), getActiveDirectiveStylingIndex());\n        }\n    }\n    /**\n     * Sets the current style sanitizer function which will then be used\n     * within all follow-up prop and map-based style binding instructions\n     * for the given element.\n     *\n     * Note that once styling has been applied to the element (i.e. once\n     * `select(n)` is executed or the hostBindings/template function exits)\n     * then the active `sanitizerFn` will be set to `null`. This means that\n     * once styling is applied to another element then a another call to\n     * `styleSanitizer` will need to be made.\n     *\n     * @param sanitizerFn The sanitization function that will be used to\n     *       process style prop/value entries.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleSanitizer(sanitizer) {\n        setCurrentStyleSanitizer(sanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param prop A valid CSS property.\n     * @param value New value to write (`null` or an empty string to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(prop, value, suffix) {\n        stylePropInternal(getSelectedIndex(), prop, value, suffix);\n    }\n    function stylePropInternal(elementIndex, prop, value, suffix) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = _stylingProp(elementIndex, bindingIndex, prop, resolveStylePropValue(value, suffix), false, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.styleProp++;\n            if (updated) {\n                ngDevMode.stylePropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param prop A valid CSS class (only one).\n     * @param value A true/false value which will turn the class on or off.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(className, value) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = _stylingProp(getSelectedIndex(), bindingIndex, className, value, true, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.classProp++;\n            if (updated) {\n                ngDevMode.classPropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a prop-based styling binding for an element.\n     */\n    function _stylingProp(elementIndex, bindingIndex, prop, value, isClassBased, defer) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var updated = false;\n        if (value !== NO_CHANGE) {\n            if (isClassBased) {\n                updated = updateClassBinding(getClassesContext(tNode), lView, native, prop, bindingIndex, value, defer, false);\n            }\n            else {\n                var sanitizer = getCurrentStyleSanitizer();\n                updated = updateStyleBinding(getStylesContext(tNode), lView, native, prop, bindingIndex, value, sanitizer, defer, false);\n            }\n        }\n        return updated;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var context = getStylesContext(tNode);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!directiveIndex && hasStyleInput(tNode) && styles !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, styles, false);\n            styles = NO_CHANGE;\n        }\n        var updated = _stylingMap(index, context, bindingIndex, styles, false, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.styleMap++;\n            if (updated) {\n                ngDevMode.styleMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        classMapInternal(getSelectedIndex(), classes);\n    }\n    function classMapInternal(elementIndex, classes) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var context = getClassesContext(tNode);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!directiveIndex && hasClassInput(tNode) && classes !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, classes, true);\n            classes = NO_CHANGE;\n        }\n        var updated = _stylingMap(elementIndex, context, bindingIndex, classes, true, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.classMap++;\n            if (updated) {\n                ngDevMode.classMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a map-based styling binding for an element.\n     *\n     * When this function is called it will activate support for `[style]` and\n     * `[class]` bindings in Angular.\n     */\n    function _stylingMap(elementIndex, context, bindingIndex, value, isClassBased, defer) {\n        activateStylingMapFeature();\n        var lView = getLView();\n        var valueHasChanged = false;\n        if (value !== NO_CHANGE) {\n            var tNode = getTNode(elementIndex, lView);\n            var native = getNativeByTNode(tNode, lView);\n            var oldValue = lView[bindingIndex];\n            valueHasChanged = hasValueChanged(oldValue, value);\n            var stylingMapArr = normalizeIntoStylingMap(oldValue, value, !isClassBased);\n            if (isClassBased) {\n                updateClassBinding(context, lView, native, null, bindingIndex, stylingMapArr, defer, valueHasChanged);\n            }\n            else {\n                var sanitizer = getCurrentStyleSanitizer();\n                updateStyleBinding(context, lView, native, null, bindingIndex, stylingMapArr, sanitizer, defer, valueHasChanged);\n            }\n        }\n        return valueHasChanged;\n    }\n    /**\n     * Writes a value to a directive's `style` or `class` input binding (if it has changed).\n     *\n     * If a directive has a `@Input` binding that is set on `style` or `class` then that value\n     * will take priority over the underlying style/class styling bindings. This value will\n     * be updated for the binding each time during change detection.\n     *\n     * When this occurs this function will attempt to write the value to the input binding\n     * depending on the following situations:\n     *\n     * - If `oldValue !== newValue`\n     * - If `newValue` is `null` (but this is skipped if it is during the first update pass--\n     *    which is when the context is not locked yet)\n     */\n    function updateDirectiveInputValue(context, lView, tNode, bindingIndex, newValue, isClassBased) {\n        var oldValue = lView[bindingIndex];\n        if (oldValue !== newValue) {\n            // even if the value has changed we may not want to emit it to the\n            // directive input(s) in the event that it is falsy during the\n            // first update pass.\n            if (newValue || isContextLocked(context)) {\n                var inputs = tNode.inputs[isClassBased ? 'class' : 'style'];\n                var initialValue = getInitialStylingValue(context);\n                var value = normalizeStylingDirectiveInputValue(initialValue, newValue, isClassBased);\n                setInputsForProperty(lView, inputs, value);\n            }\n            lView[bindingIndex] = newValue;\n        }\n    }\n    /**\n     * Returns the appropriate directive input value for `style` or `class`.\n     *\n     * Earlier versions of Angular expect a binding value to be passed into directive code\n     * exactly as it is unless there is a static value present (in which case both values\n     * will be stringified and concatenated).\n     */\n    function normalizeStylingDirectiveInputValue(initialValue, bindingValue, isClassBased) {\n        var value = bindingValue;\n        // we only concat values if there is an initial value, otherwise we return the value as is.\n        // Note that this is to satisfy backwards-compatibility in Angular.\n        if (initialValue.length > 0) {\n            if (isClassBased) {\n                value = concatString(initialValue, forceClassesAsString(bindingValue));\n            }\n            else {\n                value = concatString(initialValue, forceStylesAsString(bindingValue), ';');\n            }\n        }\n        return value;\n    }\n    /**\n     * Flushes all styling code to the element.\n     *\n     * This function is designed to be called from the template and hostBindings\n     * functions and may be called multiple times depending whether multiple\n     * sources of styling exist. If called multiple times, only the last call\n     * to `stlyingApply()` will render styling to the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstylingApply() {\n        var elementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var renderer = getRenderer(tNode, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        var sanitizer = getCurrentStyleSanitizer();\n        flushStyling(renderer, lView, getClassesContext(tNode), getStylesContext(tNode), native, directiveIndex, sanitizer);\n        setCurrentStyleSanitizer(null);\n    }\n    function getRenderer(tNode, lView) {\n        return tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n    }\n    /**\n     * Searches and assigns provided all static style/class entries (found in the `attrs` value)\n     * and registers them in their respective styling contexts.\n     */\n    function registerInitialStylingOnTNode(tNode, attrs, startIndex) {\n        var hasAdditionalInitialStyling = false;\n        var styles = getStylingMapArray(tNode.styles);\n        var classes = getStylingMapArray(tNode.classes);\n        var mode = -1;\n        for (var i = startIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                classes = classes || [''];\n                addItemToStylingMap(classes, attr, true);\n                hasAdditionalInitialStyling = true;\n            }\n            else if (mode == 2 /* Styles */) {\n                var value = attrs[++i];\n                styles = styles || [''];\n                addItemToStylingMap(styles, attr, value);\n                hasAdditionalInitialStyling = true;\n            }\n        }\n        if (classes && classes.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.classes) {\n                tNode.classes = classes;\n            }\n            updateRawValueOnContext(tNode.classes, stylingMapToString(classes, true));\n        }\n        if (styles && styles.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.styles) {\n                tNode.styles = styles;\n            }\n            updateRawValueOnContext(tNode.styles, stylingMapToString(styles, false));\n        }\n        return hasAdditionalInitialStyling;\n    }\n    function updateRawValueOnContext(context, value) {\n        var stylingMapArr = getStylingMapArray(context);\n        stylingMapArr[0 /* RawValuePosition */] = value;\n    }\n    function getActiveDirectiveStylingIndex() {\n        // whenever a directive's hostBindings function is called a uniqueId value\n        // is assigned. Normally this is enough to help distinguish one directive\n        // from another for the styling context, but there are situations where a\n        // sub-class directive could inherit and assign styling in concert with a\n        // parent directive. To help the styling code distinguish between a parent\n        // sub-classed directive the inheritance depth is taken into account as well.\n        return getActiveDirectiveId() + getActiveDirectiveSuperClassDepth();\n    }\n    /**\n     * Temporary function that will update the max directive index value in\n     * both the classes and styles contexts present on the provided `tNode`.\n     *\n     * This code is only used because the `select(n)` code functionality is not\n     * yet 100% functional. The `select(n)` instruction cannot yet evaluate host\n     * bindings function code in sync with the associated template function code.\n     * For this reason the styling algorithm needs to track the last directive index\n     * value so that it knows exactly when to render styling to the element since\n     * `stylingApply()` is called multiple times per CD (`stylingApply` will be\n     * removed once `select(n)` is fixed).\n     */\n    function updateLastDirectiveIndex$1(tNode, directiveIndex) {\n        updateLastDirectiveIndex(getClassesContext(tNode), directiveIndex);\n        updateLastDirectiveIndex(getStylesContext(tNode), directiveIndex);\n    }\n    function getStylesContext(tNode) {\n        return getContext(tNode, false);\n    }\n    function getClassesContext(tNode) {\n        return getContext(tNode, true);\n    }\n    /**\n     * Returns/instantiates a styling context from/to a `tNode` instance.\n     */\n    function getContext(tNode, isClassBased) {\n        var context = isClassBased ? tNode.classes : tNode.styles;\n        if (!isStylingContext(context)) {\n            context = allocTStylingContext(context);\n            if (ngDevMode) {\n                attachStylingDebugObject(context);\n            }\n            if (isClassBased) {\n                tNode.classes = context;\n            }\n            else {\n                tNode.styles = context;\n            }\n        }\n        return context;\n    }\n    function resolveStylePropValue(value, suffix) {\n        if (value === NO_CHANGE)\n            return value;\n        var resolvedValue = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                resolvedValue = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                resolvedValue = value;\n            }\n        }\n        return resolvedValue;\n    }\n    /**\n     * Whether or not a style/class binding update should be applied later.\n     *\n     * This function will decide whether a binding should be applied immediately\n     * or later (just before the styles/classes are flushed to the element). The\n     * reason why this feature exists is because of super/sub directive inheritance.\n     * Angular will evaluate host bindings on the super directive first and the sub\n     * directive, but the styling bindings on the sub directive are of higher priority\n     * than the super directive. For this reason all styling bindings that take place\n     * in this circumstance will need to be deferred until later so that they can be\n     * applied together and in a different order (the algorithm handles that part).\n     */\n    function deferStylingUpdate() {\n        return getActiveDirectiveSuperClassHeight() > 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var renderer = lView[RENDERER];\n        var native = lView[index + HEADER_OFFSET] = elementCreate(name, renderer, getNamespace());\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, attrs || null);\n        if (attrs != null) {\n            var lastAttrIndex = setUpAttributes(renderer, native, attrs);\n            if (tView.firstTemplatePass) {\n                registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n            }\n        }\n        renderInitialStyling(renderer, native, tNode);\n        appendChild(native, tNode, lView);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            if (inputData && inputData.hasOwnProperty('style')) {\n                tNode.flags |= 16 /* hasStyleInput */;\n            }\n            if (tView.queries !== null) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        createDirectivesAndLocals(tView, lView, tNode);\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeType(tNode, 3 /* Element */);\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        registerPostOrderHooks(tView, previousOrParentTNode);\n        decreaseElementDepthCount();\n        if (tView.firstTemplatePass && tView.queries !== null &&\n            isContentQueryHost(previousOrParentTNode)) {\n            tView.queries.elementEnd(previousOrParentTNode);\n        }\n        if (hasClassInput(tNode) && tNode.classes) {\n            setDirectiveStylingInput(tNode.classes, lView, tNode.inputs['class']);\n        }\n        if (hasStyleInput(tNode) && tNode.styles) {\n            setDirectiveStylingInput(tNode.styles, lView, tNode.inputs['style']);\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, attrs, localRefs) {\n        ɵɵelementStart(index, name, attrs, localRefs);\n        ɵɵelementEnd();\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(lView[RENDERER], native, attrs);\n            if (tView.firstTemplatePass) {\n                var stylingNeedsToBeRendered = registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n                // this is only called during the first template pass in the\n                // event that this current directive assigned initial style/class\n                // host attribute values to the element. Because initial styling\n                // values are applied before directives are first rendered (within\n                // `createElement`) this means that initial styling for any directives\n                // still needs to be applied. Note that this will only happen during\n                // the first template pass and not each time a directive applies its\n                // attribute values to the element.\n                if (stylingNeedsToBeRendered) {\n                    var renderer = lView[RENDERER];\n                    renderInitialStyling(renderer, native, tNode);\n                }\n            }\n        }\n    }\n    function setDirectiveStylingInput(context, lView, stylingInputs) {\n        // older versions of Angular treat the input as `null` in the\n        // event that the value does not exist at all. For this reason\n        // we can't have a styling value be an empty string.\n        var value = getInitialStylingValue(context) || null;\n        // Ivy does an extra `[class]` write with a falsy value since the value\n        // is applied during creation mode. This is a deviation from VE and should\n        // be (Jira Issue = FW-1467).\n        setInputsForProperty(lView, stylingInputs, value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var native = lView[index + HEADER_OFFSET] = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, tagName, attrs || null);\n        if (attrs && tView.firstTemplatePass) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            registerInitialStylingOnTNode(tNode, attrs, 0);\n        }\n        appendChild(native, tNode, lView);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            if (tView.queries) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        createDirectivesAndLocals(tView, lView, tNode);\n        attachPatchData(native, lView);\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        registerPostOrderHooks(tView, previousOrParentTNode);\n        if (tView.firstTemplatePass && tView.queries !== null &&\n            isContentQueryHost(previousOrParentTNode)) {\n            tView.queries.elementEnd(previousOrParentTNode);\n        }\n    }\n    /**\n     * Creates an empty logical container using {@link elementContainerStart}\n     * and {@link elementContainerEnd}\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainer(index, attrs, localRefs) {\n        ɵɵelementContainerStart(index, attrs, localRefs);\n        ɵɵelementContainerEnd();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent();\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var viewHost = lView[T_HOST];\n        var context = lView[CONTEXT];\n        if (isCreationMode(lView)) {\n            renderView(lView, tView, context); // creation mode pass\n        }\n        refreshView(lView, tView, tView.template, context); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveView(lContainer[PARENT]);\n        setPreviousOrParentTNode(viewHost, false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && hasDirectives(tNode)) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener at the head of the coalesced listeners list.\n                    listenerFn.__ngNextListenerFn__ = existingListener.__ngNextListenerFn__;\n                    existingListener.__ngNextListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // Ivy uses `Function` as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.\n            if (e === Function) {\n                return listenerFn;\n            }\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * Checks a given node against matching projection slots and returns the\n     * determined slot index. Returns \"null\" if no slot matched the given node.\n     *\n     * This function takes into account the parsed ngProjectAs selector from the\n     * node's attributes. If present, it will check whether the ngProjectAs selector\n     * matches any of the projection slot selectors.\n     */\n    function matchingProjectionSlotIndex(tNode, projectionSlots) {\n        var wildcardNgContentIndex = null;\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < projectionSlots.length; i++) {\n            var slotValue = projectionSlots[i];\n            // The last wildcard projection slot should match all nodes which aren't matching\n            // any selector. This is necessary to be backwards compatible with view engine.\n            if (slotValue === '*') {\n                wildcardNgContentIndex = i;\n                continue;\n            }\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n                return i; // first matching selector \"captures\" a given node\n            }\n        }\n        return wildcardNgContentIndex;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param projectionSlots? A collection of projection slots. A projection slot can be based\n     *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n     *        all nodes which do not match any selector. If not specified, a single wildcard\n     *        selector projection slot will be defined.\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(projectionSlots) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            // If no explicit projection slots are defined, fall back to a single\n            // projection slot with the wildcard selector.\n            var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n            var projectionHeads = componentNode.projection =\n                new Array(numProjectionSlots).fill(null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n                if (slotIndex !== null) {\n                    if (tails[slotIndex]) {\n                        tails[slotIndex].projectionNext = componentChild;\n                    }\n                    else {\n                        projectionHeads[slotIndex] = componentChild;\n                    }\n                    tails[slotIndex] = componentChild;\n                }\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    var delayProjection = false;\n    function setDelayProjection(value) {\n        delayProjection = value;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsNotParent();\n        // We might need to delay the projection of nodes if they are in the middle of an i18n block\n        if (!delayProjection) {\n            // re-distribution of projectable nodes is stored on a component's view level\n            appendProjectedNodes(lView, tProjectionNode, selectorIndex, findComponentView(lView));\n        }\n    }\n\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var interpolatedValue = interpolation1(getLView(), prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var interpolatedValue = interpolation2(getLView(), prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var interpolatedValue = interpolation3(getLView(), prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var interpolatedValue = interpolation4(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var interpolatedValue = interpolation5(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var interpolatedValue = interpolation6(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var interpolatedValue = interpolation7(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var interpolatedValue = interpolation8(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var interpolatedValue = interpolationV(getLView(), values);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var textNative = lView[index + HEADER_OFFSET] = createTextNode(value, lView[RENDERER]);\n        ngDevMode && ngDevMode.rendererSetText++;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, 3 /* Element */, null, null);\n        // Text nodes are self closing.\n        setIsNotParent();\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param value Stringified value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtextBinding(value) {\n        var lView = getLView();\n        var index = getSelectedIndex();\n        var bound = bind(lView, value);\n        if (bound !== NO_CHANGE) {\n            textBindingInternal(lView, index, renderStringify(bound));\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update text content with a lone bound value\n     *\n     * Used when a text node has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div>{{v0}}</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate(v0);\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate(v0) {\n        ɵɵtextInterpolate1('', v0, '');\n        return ɵɵtextInterpolate;\n    }\n    /**\n     *\n     * Update text content with single bound value surrounded by other text.\n     *\n     * Used when a text node has 1 interpolated value in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation1(lView, prefix, v0, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate1;\n    }\n    /**\n     *\n     * Update text content with 2 bound values surrounded by other text.\n     *\n     * Used when a text node has 2 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate2;\n    }\n    /**\n     *\n     * Update text content with 3 bound values surrounded by other text.\n     *\n     * Used when a text node has 3 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate3;\n    }\n    /**\n     *\n     * Update text content with 4 bound values surrounded by other text.\n     *\n     * Used when a text node has 4 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see ɵɵtextInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate4;\n    }\n    /**\n     *\n     * Update text content with 5 bound values surrounded by other text.\n     *\n     * Used when a text node has 5 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate5;\n    }\n    /**\n     *\n     * Update text content with 6 bound values surrounded by other text.\n     *\n     * Used when a text node has 6 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change. @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate6;\n    }\n    /**\n     *\n     * Update text content with 7 bound values surrounded by other text.\n     *\n     * Used when a text node has 7 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate7;\n    }\n    /**\n     *\n     * Update text content with 8 bound values surrounded by other text.\n     *\n     * Used when a text node has 8 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate8;\n    }\n    /**\n     * Update text content with 9 or more bound values other surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     *\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolateV(values) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated class on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     * Update an interpolated class on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate7(\n     *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n     * '-', v7, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate8;\n    }\n    /**\n     * Update an interpolated style property on an element with 8 or more bound values surrounded by\n     * text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n     * </div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolateV(\n     *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`..\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolateV(prop, values, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a host element. Only applies to native node properties, not inputs.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵhostProperty(propName, value, sanitizer) {\n        var index = getSelectedIndex();\n        ngDevMode && assertNotEqual(index, -1, 'selected index cannot be -1');\n        var lView = getLView();\n        var bindReconciledValue = bind(lView, value);\n        if (bindReconciledValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bindReconciledValue, sanitizer, true);\n        }\n        return ɵɵhostProperty;\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     *\n     * @codeGenApi\n     */\n    function ɵɵupdateSyntheticHostBinding(propName, value, sanitizer) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        // TODO(benlesh): remove bind call here.\n        var bound = bind(lView, value);\n        if (bound !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bound, sanitizer, true, loadComponentRenderer);\n        }\n        return ɵɵupdateSyntheticHostBinding;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext$1(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    /**\n     * Retrieves the rendered text for a given component.\n     *\n     * This function retrieves the host element of a component and\n     * and then returns the `textContent` for that element. This implies\n     * that the text returned will include re-projected content of\n     * the component as well.\n     *\n     * @param component The component to return the content text for.\n     */\n    function getRenderedText(component) {\n        var hostElement = getHostElement(component);\n        return hostElement.textContent || '';\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext$1);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$c = function (token, notFoundValue) {\n        throw new Error('NullInjector: Not found: ' + stringifyForError(token));\n    };\n    // TODO: A hack to not pull in the NullInjector from @angular/core.\n    var NULL_INJECTOR$1 = {\n        get: ɵ0$c\n    };\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent$1(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        // this is preemptively set to avoid having test and debug code accidentally\n        // read data from a previous application state...\n        setActiveHostElement(null);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootTView = createTView(-1, null, 1, 0, null, null, null, null);\n        var rootView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            // create mode pass\n            renderView(rootView, rootTView, null);\n            // update mode pass\n            refreshView(rootView, rootTView, null, null);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n        rootView[0 + HEADER_OFFSET] = rNode;\n        var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n            markAsComponentHost(tView, tNode);\n            initNodeFlags(tNode, rootView.length, 1);\n        }\n        addToViewTree(rootView, componentView);\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            setActiveHostElement(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var e_1, _a;\n        var superType = getSuperType(definition.type);\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                var baseViewQuery = baseDef.viewQuery;\n                var baseContentQueries = baseDef.contentQueries;\n                var baseHostBindings = baseDef.hostBindings;\n                baseHostBindings && inheritHostBindings(definition, baseHostBindings);\n                baseViewQuery && inheritViewQuery(definition, baseViewQuery);\n                baseContentQueries && inheritContentQueries(definition, baseContentQueries);\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var superHostBindings = superDef.hostBindings;\n                superHostBindings && inheritHostBindings(definition, superHostBindings);\n                // Merge queries\n                var superViewQuery = superDef.viewQuery;\n                var superContentQueries = superDef.contentQueries;\n                superViewQuery && inheritViewQuery(definition, superViewQuery);\n                superContentQueries && inheritContentQueries(definition, superContentQueries);\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = (e_1 = void 0, __values(features)), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        ɵɵNgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        // If the subclass does not have a host bindings function, we set the subclass host binding\n        // function to be the superclass's (in this feature). We should check if they're the same here\n        // to ensure we don't inherit it twice.\n        if (superHostBindings !== prevHostBindings) {\n            if (prevHostBindings) {\n                // because inheritance is unknown during compile time, the runtime code\n                // needs to be informed of the super-class depth so that instruction code\n                // can distinguish one host bindings function from another. The reason why\n                // relying on the directive uniqueId exclusively is not enough is because the\n                // uniqueId value and the directive instance stay the same between hostBindings\n                // calls throughout the directive inheritance chain. This means that without\n                // a super-class depth value, there is no way to know whether a parent or\n                // sub-class host bindings function is currently being executed.\n                definition.hostBindings = function (rf, ctx, elementIndex) {\n                    // The reason why we increment first and then decrement is so that parent\n                    // hostBindings calls have a higher id value compared to sub-class hostBindings\n                    // calls (this way the leaf directive is always at a super-class depth of 0).\n                    adjustActiveDirectiveSuperClassDepthPosition(1);\n                    try {\n                        superHostBindings(rf, ctx, elementIndex);\n                    }\n                    finally {\n                        adjustActiveDirectiveSuperClassDepthPosition(-1);\n                    }\n                    prevHostBindings(rf, ctx, elementIndex);\n                };\n            }\n            else {\n                definition.hostBindings = superHostBindings;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * ```ts\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        ɵɵtext(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        ɵɵselect(0);\n     *        ɵɵtextBinding(ctx.greeter.greet());\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     * ```\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * Base class for a factory that can create a component dynamically.\n     * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n     * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     *\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    function getComponent$1(error) {\n        return error[ERROR_COMPONENT];\n    }\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * A simple registry that maps `Components` to generated `ComponentFactory` classes\n     * that can be used to create instances of components.\n     * Use to obtain the factory for a given component type,\n     * then use the factory's `create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('9.0.0-next.2+21.sha-7a75f78.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    var ɵ0$d = trackByIdentity;\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            token: IterableDiffers,\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            token: KeyValueDiffers,\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Node instance data.\n     *\n     * We have a separate type per NodeType to save memory\n     * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n     *\n     * To keep our code monomorphic,\n     * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n     * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n     * purposes.\n     */\n    var NodeData = /** @class */ (function () {\n        function NodeData() {\n        }\n        return NodeData;\n    }());\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode, text) { this.delegate.setValue(renderNode, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            // default to 'div' in case this component has an attribute selector\n            _this.selector = componentDef.selectors[0][0] || 'div';\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            // Ensure that the namespace for the root node is correct,\n            // otherwise the browser might not render out the element properly.\n            namespaceHTMLInternal();\n            var hostRNode = rootSelectorOrNode ?\n                locateHostElement(rendererFactory, rootSelectorOrNode) :\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef), null);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootTView = createTView(-1, null, 1, 0, null, null, null, null);\n            var rootLView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                renderView(rootLView, rootTView, null);\n            }\n            finally {\n                leaveView(oldLView);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (!rootSelectorOrNode || isIsolated) {\n                // The host element of the internal or isolated root view is attached to the component's host\n                // view node.\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the\n     * ComponentFactoryResolver\n     * already exists, retrieves the existing ComponentFactoryResolver.\n     *\n     * @returns The ComponentFactoryResolver instance to use\n     */\n    function injectComponentFactoryResolver() {\n        return componentFactoryResolver;\n    }\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            if (this.destroyCbs) {\n                this.destroyCbs.forEach(function (fn) { return fn(); });\n                this.destroyCbs = null;\n                !this.hostView.destroyed && this.hostView.destroy();\n            }\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            if (this.destroyCbs) {\n                this.destroyCbs.push(callback);\n            }\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n        (function () {\n            // tslint:disable-next-line:no-toplevel-property-access\n            _global['ngI18nClosureMode'] =\n                // TODO(FW-1250): validate that this actually, you know, works.\n                // tslint:disable-next-line:no-toplevel-property-access\n                typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n        })();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This const is used to store the locale data registered with `registerLocaleData`\n     */\n    var LOCALE_DATA = {};\n    (function (LocaleDataIndex) {\n        LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n        LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n        LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n        LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 15] = \"CurrencySymbol\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 16] = \"CurrencyName\";\n        LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 17] = \"Currencies\";\n        LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 18] = \"PluralCase\";\n        LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 19] = \"ExtraData\";\n    })(exports.ɵLocaleDataIndex || (exports.ɵLocaleDataIndex = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // THIS CODE IS GENERATED - DO NOT MODIFY\n    // See angular/tools/gulp-tasks/cldr/extract.js\n    var u = undefined;\n    function plural(n) {\n        var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0)\n            return 1;\n        return 5;\n    }\n    var localeEn = [\n        'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n        [\n            ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n        ],\n        u,\n        [\n            ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n            ]\n        ],\n        u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n        ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n        ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves the plural function used by ICU expressions to determine the plural case to use\n     * for a given locale.\n     * @param locale A locale code for the locale format rules to use.\n     * @returns The plural function for the locale.\n     * @see `NgPlural`\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function getLocalePluralCase(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.PluralCase];\n    }\n    /**\n     * Finds the locale data for a given locale.\n     *\n     * @param locale The locale code.\n     * @returns The locale data.\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function findLocaleData(locale) {\n        var normalizedLocale = locale.toLowerCase().replace(/_/g, '-');\n        var match = LOCALE_DATA[normalizedLocale];\n        if (match) {\n            return match;\n        }\n        // let's try to find a parent locale\n        var parentLocale = normalizedLocale.split('-')[0];\n        match = LOCALE_DATA[parentLocale];\n        if (match) {\n            return match;\n        }\n        if (parentLocale === 'en') {\n            return localeEn;\n        }\n        throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the plural case based on the locale\n     */\n    function getPluralCase(value, locale) {\n        var plural = getLocalePluralCase(locale)(value);\n        switch (plural) {\n            case 0:\n                return 'zero';\n            case 1:\n                return 'one';\n            case 2:\n                return 'two';\n            case 3:\n                return 'few';\n            case 4:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * The locale id that the application is using by default (for translations and ICU expressions).\n     */\n    var DEFAULT_LOCALE_ID = 'en-US';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*!]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else {\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        results.push(substring);\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (cases.length > values.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the\n     *   beginning and end of <ng-content> that was embedded in the original translation block.\n     *   The placeholder `index` points to the element index in the template instructions set.\n     *   An optional `block` that matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        // We need to delay projections until `i18nEnd`\n        setDelayProjection(true);\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = replaceNgsp(templateTranslation).split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === \"#\" /* ELEMENT */) {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        if (i18nVarsCount > 0) {\n            allocExpando(viewData, i18nVarsCount);\n        }\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, viewData);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode, viewData) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        // If the placeholder to append is a projection, we need to move the projected nodes instead\n        if (tNode.type === 1 /* Projection */) {\n            var tProjectionNode = tNode;\n            appendProjectedNodes(viewData, tProjectionNode, tProjectionNode.projection, findComponentView(viewData));\n            return tNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n     * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                var placeholders = matches_1[content] || [];\n                if (!placeholders.length) {\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders;\n                }\n                if (!placeholders.length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n         */\n        result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, function (match, key) {\n            return replacements.hasOwnProperty(key) ? replacements[key] : match;\n        });\n        /**\n         * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n        // Stop delaying projections\n        setDelayProjection(false);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(lView, index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        lView[index + HEADER_OFFSET] = native;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, type, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode && previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createDynamicNodeAtIndex(viewData, textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsNotParent();\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode, viewData);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode, currentTNode.type === 3 /* Element */);\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode, false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        // This code is used for ICU expressions only, since we don't support\n                        // directives/components in ICUs, we don't need to worry about inputs here\n                        elementAttributeInternal(elementNodeIndex, attrName, attrValue, viewData);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(viewData, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsNotParent();\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(viewData, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsNotParent();\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var propName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementPropertyInternal(nodeIndex, propName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBindingInternal(viewData, nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(viewData, index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        // Define this node as detached so that we don't risk projecting it\n        removedPhTNode.flags |= 32 /* isDetached */;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nAttributesFirstPass(tView, index, values);\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // TODO(ocombe): support ICU expressions in attributes\n                    throw new Error('ICU expressions are not yet supported in attributes');\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                        }\n                    }\n                    else {\n                        var lView = getLView();\n                        elementAttributeInternal(previousElementIndex, attrName, value, lView);\n                        // Check if that attribute is a directive input\n                        var tNode = getTNode(previousElementIndex, lView);\n                        var dataValue = tNode.inputs && tNode.inputs[attrName];\n                        if (dataValue) {\n                            setInputsForProperty(lView, dataValue, value);\n                        }\n                    }\n                }\n            }\n        }\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            tView.data[index + HEADER_OFFSET] = updateOpCodes;\n        }\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param value The binding's value\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(value) {\n        var lView = getLView();\n        var expression = bind(lView, value);\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n        return ɵɵi18nExp;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    /**\n     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n     * and later on replaced by a space. We are re-implementing the same idea here, since translations\n     * might contain this special character.\n     */\n    var NGSP_UNICODE_REGEXP = /\\uE500/g;\n    function replaceNgsp(value) {\n        return value.replace(NGSP_UNICODE_REGEXP, ' ');\n    }\n    var TRANSLATIONS = {};\n    /**\n     * Set the configuration for `i18nLocalize`.\n     *\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function i18nConfigureLocalize(options) {\n        if (options === void 0) { options = {\n            translations: {}\n        }; }\n        TRANSLATIONS = options.translations;\n    }\n    var LOCALIZE_PH_REGEXP = /\\{\\$(.*?)\\}/g;\n    /**\n     * A goog.getMsg-like function for users that do not use Closure.\n     *\n     * This method is required as a *temporary* measure to prevent i18n tests from being blocked while\n     * running outside of Closure Compiler. This method will not be needed once runtime translation\n     * service support is introduced.\n     *\n     * @codeGenApi\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function ɵɵi18nLocalize(input, placeholders) {\n        if (typeof TRANSLATIONS[input] !== 'undefined') { // to account for empty string\n            input = TRANSLATIONS[input];\n        }\n        if (placeholders !== undefined && Object.keys(placeholders).length) {\n            return input.replace(LOCALIZE_PH_REGEXP, function (_, key) { return placeholders[key] || ''; });\n        }\n        return input;\n    }\n    /**\n     * The locale id that the application is currently using (for translations and ICU expressions).\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    var LOCALE_ID = DEFAULT_LOCALE_ID;\n    /**\n     * Sets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     *\n     * @param localeId\n     */\n    function setLocaleId(localeId) {\n        assertDefined(localeId, \"Expected localeId to be defined\");\n        if (typeof localeId === 'string') {\n            LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n        }\n    }\n    /**\n     * Gets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    function getLocaleId() {\n        return LOCALE_ID;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(ngModuleType) {\n        if (ngModuleType.ngModuleDef.id !== null) {\n            var id = ngModuleType.ngModuleDef.id;\n            var existing = modules.get(id);\n            assertSameOrNotExisting(id, existing, ngModuleType);\n            modules.set(id, ngModuleType);\n        }\n        var imports = ngModuleType.ngModuleDef.imports;\n        if (imports instanceof Function) {\n            imports = imports();\n        }\n        if (imports) {\n            imports.forEach(function (i) { return registerNgModuleType(i); });\n        }\n    }\n    function clearModulesForTest() {\n        modules.clear();\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n            if (ngLocaleIdDef) {\n                setLocaleId(ngLocaleIdDef);\n            }\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            var ngModuleDef = getNgModuleDef(moduleType);\n            if (ngModuleDef !== null) {\n                // Register the NgModule with Angular's module registry. The location (and hence timing) of\n                // this call is critical to ensure this works correctly (modules get registered when expected)\n                // without bloating bundles (modules are registered when otherwise not referenced).\n                //\n                // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n                // several practical consequences:\n                //\n                // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n                //   tree shaken).\n                // - If an .ngfactory file is imported from, the module will be registered even if an instance\n                //   is not actually created (via `create` below).\n                // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n                //   imports,\n                //\n                // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n                // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n                // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n                // the side effect of registration is added here, in the constructor of NgModuleFactory,\n                // ensuring no matter how a factory is created, the module is registered correctly.\n                //\n                // An alternative would be to include the registration side effect inline following the actual\n                // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n                // will be registered and retained even if they're otherwise never referenced.\n                registerNgModuleType(moduleType);\n            }\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode(lView) ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(getLView(), index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(getLView(), index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(getLView(), index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(getLView(), index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(getLView(), index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in components with the `@Output` directive to emit custom events\n     * synchronously or asynchronously, and register handlers for those events\n     * by subscribing to an instance.\n     *\n     * @usageNotes\n     *\n     * Extends\n     * [RxJS `Subject`](https://rxjs.dev/api/index/class/Subject)\n     * for Angular by adding the `emit()` method.\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```html\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```html\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * @see [Observables in Angular](guide/observables-in-angular)\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function symbolIterator() {\n        return this._results[getSymbolIterator()]();\n    }\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n            // This function should be declared on the prototype, but doing so there will cause the class\n            // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n            // the constructor.\n            // [getSymbolIterator()](): Iterator<T> { ... }\n            var symbol = getSymbolIterator();\n            var proto = QueryList.prototype;\n            if (!proto[symbol])\n                proto[symbol] = symbolIterator;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The query results to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$7 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$8 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$2 = unusedValueExportToPlacateAjd$7 + unusedValueExportToPlacateAjd$2 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$8;\n    var LQuery_ = /** @class */ (function () {\n        function LQuery_(queryList) {\n            this.queryList = queryList;\n            this.matches = null;\n        }\n        LQuery_.prototype.clone = function () { return new LQuery_(this.queryList); };\n        LQuery_.prototype.setDirty = function () { this.queryList.setDirty(); };\n        return LQuery_;\n    }());\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        LQueries_.prototype.createEmbeddedView = function (tView) {\n            var tQueries = tView.queries;\n            if (tQueries !== null) {\n                var noOfInheritedQueries = tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;\n                var viewLQueries = new Array(noOfInheritedQueries);\n                // An embedded view has queries propagated from a declaration view at the beginning of the\n                // TQueries collection and up until a first content query declared in the embedded view. Only\n                // propagated LQueries are created at this point (LQuery corresponding to declared content\n                // queries will be instantiated from the content query instructions for each directive).\n                for (var i = 0; i < noOfInheritedQueries; i++) {\n                    var tQuery = tQueries.getByIndex(i);\n                    var parentLQuery = this.queries[tQuery.indexInDeclarationView];\n                    viewLQueries[i] = parentLQuery.clone();\n                }\n                return new LQueries_(viewLQueries);\n            }\n            return null;\n        };\n        LQueries_.prototype.insertView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.detachView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.dirtyQueriesWithMatches = function (tView) {\n            for (var i = 0; i < this.queries.length; i++) {\n                if (getTQuery(tView, i).matches !== null) {\n                    this.queries[i].setDirty();\n                }\n            }\n        };\n        return LQueries_;\n    }());\n    var TQueryMetadata_ = /** @class */ (function () {\n        function TQueryMetadata_(predicate, descendants, isStatic, read) {\n            if (read === void 0) { read = null; }\n            this.predicate = predicate;\n            this.descendants = descendants;\n            this.isStatic = isStatic;\n            this.read = read;\n        }\n        return TQueryMetadata_;\n    }());\n    var TQueries_ = /** @class */ (function () {\n        function TQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        TQueries_.prototype.elementStart = function (tView, tNode) {\n            var e_1, _a;\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            try {\n                for (var _b = __values(this.queries), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var query = _c.value;\n                    query.elementStart(tView, tNode);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        };\n        TQueries_.prototype.elementEnd = function (tNode) {\n            var e_2, _a;\n            try {\n                for (var _b = __values(this.queries), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var query = _c.value;\n                    query.elementEnd(tNode);\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        };\n        TQueries_.prototype.embeddedTView = function (tNode) {\n            var queriesForTemplateRef = null;\n            for (var i = 0; i < this.length; i++) {\n                var childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;\n                var tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);\n                if (tqueryClone) {\n                    tqueryClone.indexInDeclarationView = i;\n                    if (queriesForTemplateRef !== null) {\n                        queriesForTemplateRef.push(tqueryClone);\n                    }\n                    else {\n                        queriesForTemplateRef = [tqueryClone];\n                    }\n                }\n            }\n            return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;\n        };\n        TQueries_.prototype.template = function (tView, tNode) {\n            var e_3, _a;\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            try {\n                for (var _b = __values(this.queries), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var query = _c.value;\n                    query.template(tView, tNode);\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n        };\n        TQueries_.prototype.getByIndex = function (index) {\n            ngDevMode && assertDataInRange(this.queries, index);\n            return this.queries[index];\n        };\n        Object.defineProperty(TQueries_.prototype, \"length\", {\n            get: function () { return this.queries.length; },\n            enumerable: true,\n            configurable: true\n        });\n        TQueries_.prototype.track = function (tquery) { this.queries.push(tquery); };\n        return TQueries_;\n    }());\n    var TQuery_ = /** @class */ (function () {\n        function TQuery_(metadata, nodeIndex) {\n            if (nodeIndex === void 0) { nodeIndex = -1; }\n            this.metadata = metadata;\n            this.matches = null;\n            this.indexInDeclarationView = -1;\n            this.crossesNgTemplate = false;\n            /**\n             * A flag indicating if a given query still applies to nodes it is crossing. We use this flag\n             * (alongside with _declarationNodeIndex) to know when to stop applying content queries to\n             * elements in a template.\n             */\n            this._appliesToNextNode = true;\n            this._declarationNodeIndex = nodeIndex;\n        }\n        TQuery_.prototype.elementStart = function (tView, tNode) {\n            if (this.isApplyingToNode(tNode)) {\n                this.matchTNode(tView, tNode);\n            }\n        };\n        TQuery_.prototype.elementEnd = function (tNode) {\n            if (this._declarationNodeIndex === tNode.index) {\n                this._appliesToNextNode = false;\n            }\n        };\n        TQuery_.prototype.template = function (tView, tNode) { this.elementStart(tView, tNode); };\n        TQuery_.prototype.embeddedTView = function (tNode, childQueryIndex) {\n            if (this.isApplyingToNode(tNode)) {\n                this.crossesNgTemplate = true;\n                // A marker indicating a `<ng-template>` element (a placeholder for query results from\n                // embedded views created based on this `<ng-template>`).\n                this.addMatch(-tNode.index, childQueryIndex);\n                return new TQuery_(this.metadata);\n            }\n            return null;\n        };\n        TQuery_.prototype.isApplyingToNode = function (tNode) {\n            if (this._appliesToNextNode && this.metadata.descendants === false) {\n                return this._declarationNodeIndex === (tNode.parent ? tNode.parent.index : -1);\n            }\n            return this._appliesToNextNode;\n        };\n        TQuery_.prototype.matchTNode = function (tView, tNode) {\n            if (Array.isArray(this.metadata.predicate)) {\n                var localNames = this.metadata.predicate;\n                for (var i = 0; i < localNames.length; i++) {\n                    this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, localNames[i]));\n                }\n            }\n            else {\n                var typePredicate = this.metadata.predicate;\n                if (typePredicate === TemplateRef) {\n                    if (tNode.type === 0 /* Container */) {\n                        this.matchTNodeWithReadOption(tView, tNode, -1);\n                    }\n                }\n                else {\n                    this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, typePredicate, false, false));\n                }\n            }\n        };\n        TQuery_.prototype.matchTNodeWithReadOption = function (tView, tNode, nodeMatchIdx) {\n            if (nodeMatchIdx !== null) {\n                var read = this.metadata.read;\n                if (read !== null) {\n                    if (read === ElementRef || read === ViewContainerRef ||\n                        read === TemplateRef && tNode.type === 0 /* Container */) {\n                        this.addMatch(tNode.index, -2);\n                    }\n                    else {\n                        var directiveOrProviderIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n                        if (directiveOrProviderIdx !== null) {\n                            this.addMatch(tNode.index, directiveOrProviderIdx);\n                        }\n                    }\n                }\n                else {\n                    this.addMatch(tNode.index, nodeMatchIdx);\n                }\n            }\n        };\n        TQuery_.prototype.addMatch = function (tNodeIdx, matchIdx) {\n            if (this.matches === null) {\n                this.matches = [tNodeIdx, matchIdx];\n            }\n            else {\n                this.matches.push(tNodeIdx, matchIdx);\n            }\n        };\n        return TQuery_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    function createResultByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        else if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function createResultForNode(lView, tNode, matchingIdx, read) {\n        if (matchingIdx === -1) {\n            // if read token and / or strategy is not specified, detect it using appropriate tNode type\n            return createResultByTNodeType(tNode, lView);\n        }\n        else if (matchingIdx === -2) {\n            // read a special token from a node injector\n            return createSpecialToken(lView, tNode, read);\n        }\n        else {\n            // read a token\n            return getNodeInjectable(lView[TVIEW].data, lView, matchingIdx, tNode);\n        }\n    }\n    function createSpecialToken(lView, tNode, read) {\n        if (read === ElementRef) {\n            return createElementRef(ElementRef, tNode, lView);\n        }\n        else if (read === TemplateRef) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, lView);\n        }\n        else if (read === ViewContainerRef) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n            return createContainerRef(ViewContainerRef, ElementRef, tNode, lView);\n        }\n        else {\n            ngDevMode &&\n                throwError(\"Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got \" + stringify(read) + \".\");\n        }\n    }\n    /**\n     * A helper function that creates query results for a given view. This function is meant to do the\n     * processing once and only once for a given view instance (a set of results for a given view\n     * doesn't change).\n     */\n    function materializeViewResults(lView, tQuery, queryIndex) {\n        var lQuery = lView[QUERIES].queries[queryIndex];\n        if (lQuery.matches === null) {\n            var tViewData = lView[TVIEW].data;\n            var tQueryMatches = tQuery.matches;\n            var result = new Array(tQueryMatches.length / 2);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var matchedNodeIdx = tQueryMatches[i];\n                if (matchedNodeIdx < 0) {\n                    // we at the <ng-template> marker which might have results in views created based on this\n                    // <ng-template> - those results will be in separate views though, so here we just leave\n                    // null as a placeholder\n                    result[i / 2] = null;\n                }\n                else {\n                    ngDevMode && assertDataInRange(tViewData, matchedNodeIdx);\n                    var tNode = tViewData[matchedNodeIdx];\n                    result[i / 2] =\n                        createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read);\n                }\n            }\n            lQuery.matches = result;\n        }\n        return lQuery.matches;\n    }\n    /**\n     * A helper function that collects (already materialized) query results from a tree of views,\n     * starting with a provided LView.\n     */\n    function collectQueryResults(lView, queryIndex, result) {\n        var e_4, _a;\n        var tQuery = lView[TVIEW].queries.getByIndex(queryIndex);\n        var tQueryMatches = tQuery.matches;\n        if (tQueryMatches !== null) {\n            var lViewResults = materializeViewResults(lView, tQuery, queryIndex);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var tNodeIdx = tQueryMatches[i];\n                if (tNodeIdx > 0) {\n                    var viewResult = lViewResults[i / 2];\n                    ngDevMode && assertDefined(viewResult, 'materialized query result should be defined');\n                    result.push(viewResult);\n                }\n                else {\n                    var childQueryIndex = tQueryMatches[i + 1];\n                    var declarationLContainer = lView[-tNodeIdx];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    // collect matches for views inserted in this container\n                    for (var i_1 = CONTAINER_HEADER_OFFSET; i_1 < declarationLContainer.length; i_1++) {\n                        var embeddedLView = declarationLContainer[i_1];\n                        if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {\n                            collectQueryResults(embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                    // collect matches for views created from this declaration container and inserted into\n                    // different containers\n                    if (declarationLContainer[MOVED_VIEWS] !== null) {\n                        try {\n                            for (var _b = (e_4 = void 0, __values(declarationLContainer[MOVED_VIEWS])), _c = _b.next(); !_c.done; _c = _b.next()) {\n                                var embeddedLView = _c.value;\n                                collectQueryResults(embeddedLView, childQueryIndex, result);\n                            }\n                        }\n                        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                        finally {\n                            try {\n                                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                            }\n                            finally { if (e_4) throw e_4.error; }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var lView = getLView();\n        var queryIndex = getCurrentQueryIndex();\n        setCurrentQueryIndex(queryIndex + 1);\n        var tQuery = getTQuery(lView[TVIEW], queryIndex);\n        if (queryList.dirty && (isCreationMode(lView) === tQuery.metadata.isStatic)) {\n            if (tQuery.matches === null) {\n                queryList.reset([]);\n            }\n            else {\n                var result = tQuery.crossesNgTemplate ? collectQueryResults(lView, queryIndex, []) :\n                    materializeViewResults(lView, tQuery, queryIndex);\n                queryList.reset(result);\n                queryList.notifyOnChanges();\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, true);\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, false);\n    }\n    function viewQueryInternal(lView, predicate, descend, read, isStatic) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), -1);\n            if (isStatic) {\n                tView.staticViewQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, false, getPreviousOrParentTNode(), directiveIndex);\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, true, getPreviousOrParentTNode(), directiveIndex);\n    }\n    function contentQueryInternal(lView, predicate, descend, read, isStatic, tNode, directiveIndex) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), tNode.index);\n            saveContentQueryAndDirectiveIndex(tView, directiveIndex);\n            if (isStatic) {\n                tView.staticContentQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Loads a QueryList corresponding to the current view or content query.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadQuery() {\n        return loadQueryInternal(getLView(), getCurrentQueryIndex());\n    }\n    function loadQueryInternal(lView, queryIndex) {\n        ngDevMode &&\n            assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');\n        ngDevMode && assertDataInRange(lView[QUERIES].queries, queryIndex);\n        return lView[QUERIES].queries[queryIndex].queryList;\n    }\n    function createLQuery(lView) {\n        var queryList = new QueryList();\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        if (lView[QUERIES] === null)\n            lView[QUERIES] = new LQueries_();\n        lView[QUERIES].queries.push(new LQuery_(queryList));\n    }\n    function createTQuery(tView, metadata, nodeIndex) {\n        if (tView.queries === null)\n            tView.queries = new TQueries_();\n        tView.queries.track(new TQuery_(metadata, nodeIndex));\n    }\n    function saveContentQueryAndDirectiveIndex(tView, directiveIndex) {\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;\n        if (directiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(tView.queries.length - 1, directiveIndex);\n        }\n    }\n    function getTQuery(tView, index) {\n        ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');\n        return tView.queries.getByIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    /**\n     * Returns the appropriate `ChangeDetectorRef` for a pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectPipeChangeDetectorRef(flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var value = injectChangeDetectorRef(true);\n        if (value == null && !(flags & exports.InjectFlags.Optional)) {\n            throw new Error(\"No provider for ChangeDetectorRef!\");\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$e = function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineBase': ɵɵdefineBase,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵinjectPipeChangeDetectorRef': ɵɵinjectPipeChangeDetectorRef,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵallocHostVars': ɵɵallocHostVars,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵelementContainer': ɵɵelementContainer,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵupdateSyntheticHostBinding': ɵɵupdateSyntheticHostBinding,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵhostProperty': ɵɵhostProperty,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadQuery': ɵɵloadQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵelementHostAttrs': ɵɵelementHostAttrs,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵclassMapInterpolate1': ɵɵclassMapInterpolate1,\n        'ɵɵclassMapInterpolate2': ɵɵclassMapInterpolate2,\n        'ɵɵclassMapInterpolate3': ɵɵclassMapInterpolate3,\n        'ɵɵclassMapInterpolate4': ɵɵclassMapInterpolate4,\n        'ɵɵclassMapInterpolate5': ɵɵclassMapInterpolate5,\n        'ɵɵclassMapInterpolate6': ɵɵclassMapInterpolate6,\n        'ɵɵclassMapInterpolate7': ɵɵclassMapInterpolate7,\n        'ɵɵclassMapInterpolate8': ɵɵclassMapInterpolate8,\n        'ɵɵclassMapInterpolateV': ɵɵclassMapInterpolateV,\n        'ɵɵstyling': ɵɵstyling,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylePropInterpolate1': ɵɵstylePropInterpolate1,\n        'ɵɵstylePropInterpolate2': ɵɵstylePropInterpolate2,\n        'ɵɵstylePropInterpolate3': ɵɵstylePropInterpolate3,\n        'ɵɵstylePropInterpolate4': ɵɵstylePropInterpolate4,\n        'ɵɵstylePropInterpolate5': ɵɵstylePropInterpolate5,\n        'ɵɵstylePropInterpolate6': ɵɵstylePropInterpolate6,\n        'ɵɵstylePropInterpolate7': ɵɵstylePropInterpolate7,\n        'ɵɵstylePropInterpolate8': ɵɵstylePropInterpolate8,\n        'ɵɵstylePropInterpolateV': ɵɵstylePropInterpolateV,\n        'ɵɵstyleSanitizer': ɵɵstyleSanitizer,\n        'ɵɵstylingApply': ɵɵstylingApply,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextBinding': ɵɵtextBinding,\n        'ɵɵtextInterpolate': ɵɵtextInterpolate,\n        'ɵɵtextInterpolate1': ɵɵtextInterpolate1,\n        'ɵɵtextInterpolate2': ɵɵtextInterpolate2,\n        'ɵɵtextInterpolate3': ɵɵtextInterpolate3,\n        'ɵɵtextInterpolate4': ɵɵtextInterpolate4,\n        'ɵɵtextInterpolate5': ɵɵtextInterpolate5,\n        'ɵɵtextInterpolate6': ɵɵtextInterpolate6,\n        'ɵɵtextInterpolate7': ɵɵtextInterpolate7,\n        'ɵɵtextInterpolate8': ɵɵtextInterpolate8,\n        'ɵɵtextInterpolateV': ɵɵtextInterpolateV,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵi18nLocalize': ɵɵi18nLocalize,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); };\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (ɵ0$e)();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     *\n     * It's possible to compile a module via this API which will allow duplicate declarations in its\n     * root.\n     */\n    function compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n        if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n                        // We need to assert this immediately, because allowing it to continue will cause it to\n                        // go into an infinite loop before we've reached the point where we throw all the errors.\n                        throw new Error(\"'\" + stringifyForError(moduleType) + \"' module can't import itself\");\n                    }\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef;\n        if (importingModule) {\n            ngModuleDef = getNgModuleDef(moduleType);\n            if (!ngModuleDef) {\n                throw new Error(\"Unexpected value '\" + moduleType.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n        else {\n            ngModuleDef = getNgModuleDef(moduleType, true);\n        }\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n            verifySemanticsOfNgModuleImport(mod, moduleType);\n            verifySemanticsOfNgModuleDef(mod, false, moduleType);\n        });\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n                    verifySemanticsOfNgModuleImport(mod, moduleType);\n                    verifySemanticsOfNgModuleDef(mod, false, moduleType);\n                });\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents &&\n                deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type, suppressErrors) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                if (!suppressErrors) {\n                    var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                    errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                        (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                        (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n                }\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n        function verifySemanticsOfNgModuleImport(type, importingModule) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type) || getDirectiveDef(type)) {\n                throw new Error(\"Unexpected directive '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n            if (getPipeDef(type)) {\n                throw new Error(\"Unexpected pipe '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + type.name + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + metadata.templateUrl);\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    if (meta.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so components are reachable through the module injector by default\n        // This is mostly to support injecting components in tests. In real application code,\n        // components should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng:///\" + name_1 + \"/ngDirectiveDef.js\";\n                    var compiler = getCompilerFacade();\n                    var facade = directiveMetadata(type, directive);\n                    facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name_1, sourceMapUrl);\n                    if (facade.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngDirectiveDef = compiler.compileDirective(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so directives are reachable through the module injector by default\n        // This is mostly to support injecting directives in tests. In real application code,\n        // directives should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery),\n        };\n    }\n    /**\n     * Adds an `ngBaseDef` to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addBaseDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type);\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the base def if there are no annotations and the base def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) && !getBaseDef(parent)) {\n                var facade = extractBaseDefMetadata(parent);\n                facade && compileBase(parent, facade);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    /** Compiles the base metadata into a base definition. */\n    function compileBase(type, facade) {\n        var ngBaseDef = null;\n        Object.defineProperty(type, NG_BASE_DEF, {\n            get: function () {\n                if (ngBaseDef === null) {\n                    var name_2 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_2 + \"/ngBaseDef.js\";\n                    var compiler = getCompilerFacade();\n                    ngBaseDef = compiler.compileBase(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngBaseDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /** Extracts the metadata necessary to construct an `ngBaseDef` from a class. */\n    function extractBaseDefMetadata(type) {\n        var propMetadata = getReflect().ownPropMetadata(type);\n        var viewQueries = extractQueriesMetadata(type, propMetadata, isViewQuery);\n        var queries = extractQueriesMetadata(type, propMetadata, isContentQuery);\n        var inputs;\n        var outputs;\n        // We only need to know whether there are any HostListener or HostBinding\n        // decorators present, the parsing logic is in the compiler already.\n        var hasHostDecorators = false;\n        var _loop_1 = function (field) {\n            propMetadata[field].forEach(function (ann) {\n                var metadataName = ann.ngMetadataName;\n                if (metadataName === 'Input') {\n                    inputs = inputs || {};\n                    inputs[field] = ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n                }\n                else if (metadataName === 'Output') {\n                    outputs = outputs || {};\n                    outputs[field] = ann.bindingPropertyName || field;\n                }\n                else if (metadataName === 'HostBinding' || metadataName === 'HostListener') {\n                    hasHostDecorators = true;\n                }\n            });\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        // Only generate the base def if there's any info inside it.\n        if (inputs || outputs || viewQueries.length || queries.length || hasHostDecorators) {\n            return { name: type.name, type: type, inputs: inputs, outputs: outputs, viewQueries: viewQueries, queries: queries, propMetadata: propMetadata };\n        }\n        return null;\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var typeName = type.name;\n                    ngPipeDef =\n                        getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + typeName + \"/ngPipeDef.js\", {\n                            type: type,\n                            typeArgumentCount: 0,\n                            name: typeName,\n                            deps: reflectDependencies(type),\n                            pipeName: meta.name,\n                            pure: meta.pure !== undefined ? meta.pure : true\n                        });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$f = function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, ɵ1$4 = function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); };\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', ɵ0$f, undefined, undefined, ɵ1$4);\n    var ɵ2$1 = function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, ɵ3$1 = function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); };\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', ɵ2$1, Directive, undefined, ɵ3$1);\n    var ɵ4 = function (p) { return (__assign({ pure: true }, p)); }, ɵ5 = function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', ɵ4, undefined, undefined, ɵ5);\n    var ɵ6 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', ɵ6);\n    var ɵ7 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', ɵ7);\n    var ɵ8 = function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', ɵ8);\n    var ɵ9 = function (eventName, args) { return ({ eventName: eventName, args: args }); };\n    /**\n     * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     *\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```ts\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', ɵ9);\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$g = function (ngModule) { return ngModule; }, ɵ1$5 = \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', ɵ0$g, undefined, undefined, ɵ1$5);\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = ɵɵdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID$1 = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS$1 = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    var isBoundToModule = isBoundToModule__PRE_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                // If the `LOCALE_ID` provider is defined at bootstrap we set the value for runtime i18n (ivy)\n                if (ivyEnabled) {\n                    var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n                    setLocaleId(localeId || DEFAULT_LOCALE_ID);\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var e_1, _a, e_2, _b;\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = getRegisteredNgModuleType(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__PRE_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _a;\n            var _this = this;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                return getComponent(this.nativeNode) || getContext$1(this.nativeNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                var output = __assign({}, properties, hostProperties);\n                if (className) {\n                    output['className'] = output['className'] ? output['className'] + (\" \" + className) : className;\n                }\n                return output;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (!element) {\n                    return attributes;\n                }\n                var context = loadLContext(element);\n                var lView = context.lView;\n                var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n                var lowercaseTNodeAttrs = [];\n                // For debug nodes we take the element's attribute directly from the DOM since it allows us\n                // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n                // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n                // however since we have the attributes already on the TNode, we can preserve the case by going\n                // through them once, adding them to the `attributes` map and putting their lower-cased name\n                // into an array. Afterwards when we're going through the native DOM attributes, we can check\n                // whether we haven't run into an attribute already through the TNode.\n                if (tNodeAttrs) {\n                    var i = 0;\n                    while (i < tNodeAttrs.length) {\n                        var attrName = tNodeAttrs[i];\n                        // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                        // else will be handled below when we read the final attributes off the DOM.\n                        if (typeof attrName !== 'string')\n                            break;\n                        var attrValue = tNodeAttrs[i + 1];\n                        attributes[attrName] = attrValue;\n                        lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                        i += 2;\n                    }\n                }\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    // Make sure that we don't assign the same attribute both in its\n                    // case-sensitive form and the lower-cased one from the browser.\n                    if (lowercaseTNodeAttrs.indexOf(attr.name) === -1) {\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                return _getStylingDebugInfo(this.nativeElement, false);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                return _getStylingDebugInfo(this.nativeElement, true);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            var node = this.nativeNode;\n            var invokedListeners = [];\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    var callback = listener.callback;\n                    callback(eventObj);\n                    invokedListeners.push(callback);\n                }\n            });\n            // We need to check whether `eventListeners` exists, because it's something\n            // that Zone.js only adds to `EventTarget` in browser environments.\n            if (typeof node.eventListeners === 'function') {\n                // Note that in Ivy we wrap event listeners with a call to `event.preventDefault` in some\n                // cases. We use `Function` as a special token that gives us access to the actual event\n                // listener.\n                node.eventListeners(eventName).forEach(function (listener) {\n                    var unwrappedListener = listener(Function);\n                    return invokedListeners.indexOf(unwrappedListener) === -1 && unwrappedListener(eventObj);\n                });\n            }\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _getStylingDebugInfo(element, isClassBased) {\n        if (element) {\n            var context = loadLContextFromNode(element);\n            var lView = context.lView;\n            var tData = lView[TVIEW].data;\n            var tNode = tData[context.nodeIndex];\n            if (isClassBased) {\n                return isStylingContext(tNode.classes) ?\n                    new NodeStylingDebug(tNode.classes, lView, true).values :\n                    stylingMapToStringMap(tNode.classes);\n            }\n            else {\n                return isStylingContext(tNode.styles) ?\n                    new NodeStylingDebug(tNode.styles, lView, false).values :\n                    stylingMapToStringMap(tNode.styles);\n            }\n        }\n        return {};\n    }\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        var nativeNode = getNativeByTNodeOrNull(tNode, lView);\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponent(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild) {\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n            else {\n                if (tNode.child) {\n                    // Otherwise, its children have to be processed.\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n                // We also have to query the DOM directly in order to catch elements inserted through\n                // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple\n                // times. ViewEngine could do it more efficiently, because all the insertions go through\n                // Renderer2, however that's not the case in Ivy. This approach is being used because:\n                // 1. Matching the ViewEngine behavior would mean potentially introducing a depedency\n                //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.\n                // 2. We would have to make `Renderer3` \"know\" about debug nodes.\n                // 3. It allows us to capture nodes that were inserted directly via the DOM.\n                nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode_1 = head_1_1.value;\n                        _addQueryMatchR3(nativeNode_1, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else if (head) {\n                var nextLView = componentView[PARENT];\n                var nextTNode = nextLView[TVIEW].data[head.index];\n                _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.child) {\n            // Case 4: the TNode is a view.\n            _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        // We don't want to go to the next sibling of the root node.\n        if (rootNativeNode !== nativeNode) {\n            // To determine the next node to be processed, we need to use the next or the projectionNext\n            // link, depending on whether the current node has been projected.\n            var nextTNode = (tNode.flags & 2 /* isProjected */) ? tNode.projectionNext : tNode.next;\n            if (nextTNode) {\n                _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode(nativeNode);\n            if (!debugNode) {\n                return;\n            }\n            // Type of the \"predicate and \"matches\" array are set based on the value of\n            // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n            // types with generics, so we manually cast the parameters accordingly.\n            if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            else if (!elementsOnly && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Match all the descendants of a DOM node against a predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryNativeNodeDescendants(parentNode, predicate, matches, elementsOnly) {\n        var nodes = parentNode.childNodes;\n        var length = nodes.length;\n        for (var i = 0; i < length; i++) {\n            var node = nodes[i];\n            var debugNode = getDebugNode(node);\n            if (debugNode) {\n                if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                else if (!elementsOnly && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = void 0;\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value = (value || '') + renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value = value === undefined ? lView[bindingIndex] : value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings), if they're defined.\n                // Avoid wrapping for normal bindings so that the value doesn't get cast to a string.\n                properties[propertyName] = (metadataParts[1] && metadataParts[2]) ?\n                    metadataParts[1] + value + metadataParts[2] :\n                    value;\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    var NG_DEBUG_PROPERTY = '__ng_debug__';\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n                nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                    new DebugElement__POST_R3__(nativeNode) :\n                    new DebugNode__POST_R3__(nativeNode);\n            }\n            return nativeNode[NG_DEBUG_PROPERTY];\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__PRE_R3__;\n    function getAllDebugNodes() {\n        return Array.from(_nativeNodeToDebugNode.values());\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        if (locale) {\n            if (ivyEnabled) {\n                setLocaleId(locale);\n            }\n            return locale;\n        }\n        // Use `goog.LOCALE` as default value for `LOCALE_ID` token for Closure Compiler.\n        // Note: default `goog.LOCALE` value is `en`, when Angular used `en-US`. In order to preserve\n        // backwards compatibility, we use Angular default value over Closure Compiler's one.\n        if (ngI18nClosureMode && typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n            if (ivyEnabled) {\n                setLocaleId(goog.LOCALE);\n            }\n            return goog.LOCALE;\n        }\n        return DEFAULT_LOCALE_ID;\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID$1,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            var debugNode = getDebugNode(node);\n            removeDebugNodeFromIndex(debugNode);\n            if (debugNode instanceof DebugNode__PRE_R3__) {\n                debugNode.listeners.length = 0;\n            }\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_r = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_o = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_p = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_q = _localeFactory;\n    exports.ɵangular_packages_core_core_s = zoneSchedulerFactory;\n    exports.ɵangular_packages_core_core_g = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_m = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_n = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_l = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_k = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_a = isForwardRef;\n    exports.ɵangular_packages_core_core_c = NullInjector;\n    exports.ɵangular_packages_core_core_b = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_d = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_e = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_f = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_j = getModuleFactory__PRE_R3__;\n    exports.ɵangular_packages_core_core_t = wtfEnabled;\n    exports.ɵangular_packages_core_core_v = createScope;\n    exports.ɵangular_packages_core_core_u = detectWTF;\n    exports.ɵangular_packages_core_core_y = endTimeRange;\n    exports.ɵangular_packages_core_core_w = leave;\n    exports.ɵangular_packages_core_core_x = startTimeRange;\n    exports.ɵangular_packages_core_core_bb = SCHEDULER;\n    exports.ɵangular_packages_core_core_bc = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_bd = getLView;\n    exports.ɵangular_packages_core_core_be = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_bf = nextContextImpl;\n    exports.ɵangular_packages_core_core_bn = getRootContext;\n    exports.ɵangular_packages_core_core_h = createElementRef;\n    exports.ɵangular_packages_core_core_i = createTemplateRef;\n    exports.ɵangular_packages_core_core_bh = getUrlSanitizer;\n    exports.ɵangular_packages_core_core_bm = noSideEffects;\n    exports.ɵangular_packages_core_core_bi = makeParamDecorator;\n    exports.ɵangular_packages_core_core_bj = makePropDecorator;\n    exports.ɵangular_packages_core_core_bk = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_z = _def;\n    exports.ɵangular_packages_core_core_ba = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS$1;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID$1;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.defineInjectable = defineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.Injector = Injector;\n    exports.ɵɵinject = ɵɵinject;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.ɵ0 = ɵ0;\n    exports.ɵ1 = ɵ1;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵDEFAULT_LOCALE_ID = DEFAULT_LOCALE_ID;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵgetLocalePluralCase = getLocalePluralCase;\n    exports.ɵfindLocaleData = findLocaleData;\n    exports.ɵLOCALE_DATA = LOCALE_DATA;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵdefineBase = ɵɵdefineBase;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent$1;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵinjectPipeChangeDetectorRef = ɵɵinjectPipeChangeDetectorRef;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵtextInterpolate = ɵɵtextInterpolate;\n    exports.ɵɵtextInterpolate1 = ɵɵtextInterpolate1;\n    exports.ɵɵtextInterpolate2 = ɵɵtextInterpolate2;\n    exports.ɵɵtextInterpolate3 = ɵɵtextInterpolate3;\n    exports.ɵɵtextInterpolate4 = ɵɵtextInterpolate4;\n    exports.ɵɵtextInterpolate5 = ɵɵtextInterpolate5;\n    exports.ɵɵtextInterpolate6 = ɵɵtextInterpolate6;\n    exports.ɵɵtextInterpolate7 = ɵɵtextInterpolate7;\n    exports.ɵɵtextInterpolate8 = ɵɵtextInterpolate8;\n    exports.ɵɵtextInterpolateV = ɵɵtextInterpolateV;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵloadQuery = ɵɵloadQuery;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵhostProperty = ɵɵhostProperty;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵupdateSyntheticHostBinding = ɵɵupdateSyntheticHostBinding;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵallocHostVars = ɵɵallocHostVars;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵelementContainer = ɵɵelementContainer;\n    exports.ɵɵstyling = ɵɵstyling;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵstyleSanitizer = ɵɵstyleSanitizer;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵclassMapInterpolate1 = ɵɵclassMapInterpolate1;\n    exports.ɵɵclassMapInterpolate2 = ɵɵclassMapInterpolate2;\n    exports.ɵɵclassMapInterpolate3 = ɵɵclassMapInterpolate3;\n    exports.ɵɵclassMapInterpolate4 = ɵɵclassMapInterpolate4;\n    exports.ɵɵclassMapInterpolate5 = ɵɵclassMapInterpolate5;\n    exports.ɵɵclassMapInterpolate6 = ɵɵclassMapInterpolate6;\n    exports.ɵɵclassMapInterpolate7 = ɵɵclassMapInterpolate7;\n    exports.ɵɵclassMapInterpolate8 = ɵɵclassMapInterpolate8;\n    exports.ɵɵclassMapInterpolateV = ɵɵclassMapInterpolateV;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylePropInterpolate1 = ɵɵstylePropInterpolate1;\n    exports.ɵɵstylePropInterpolate2 = ɵɵstylePropInterpolate2;\n    exports.ɵɵstylePropInterpolate3 = ɵɵstylePropInterpolate3;\n    exports.ɵɵstylePropInterpolate4 = ɵɵstylePropInterpolate4;\n    exports.ɵɵstylePropInterpolate5 = ɵɵstylePropInterpolate5;\n    exports.ɵɵstylePropInterpolate6 = ɵɵstylePropInterpolate6;\n    exports.ɵɵstylePropInterpolate7 = ɵɵstylePropInterpolate7;\n    exports.ɵɵstylePropInterpolate8 = ɵɵstylePropInterpolate8;\n    exports.ɵɵstylePropInterpolateV = ɵɵstylePropInterpolateV;\n    exports.ɵɵstylingApply = ɵɵstylingApply;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵelementHostAttrs = ɵɵelementHostAttrs;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵtextBinding = ɵɵtextBinding;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵi18nConfigureLocalize = i18nConfigureLocalize;\n    exports.ɵɵi18nLocalize = ɵɵi18nLocalize;\n    exports.ɵsetLocaleId = setLocaleId;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}