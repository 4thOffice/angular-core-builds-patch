{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","fn","R3ResolvedDependencyType","_global","getGlobal","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","angularCoreDiEnv","ɵgetFactoryOf","getFactoryOf","typeAny","def","Type","Function","isType","v","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","USE_VALUE","provide","String","useValue","isUseClassProvider","useClass","isUseValueProvider","isUseFactoryProvider","useFactory","isUseExistingProvider","useExisting","USE_VALUE$1","EMPTY_ARRAY","convertInjectableProviderToFactory","provider","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","InjectionToken","_desc","__NG_ELEMENT_ID__","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","Injector","parent","StaticInjector","NULL","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE$2","NG_TOKEN_PATH","NG_TEMP_TOKEN_PATH","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","Map","set","useNew","recursivelyProcessProviders","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","catchInjectorError","tokens","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","originalError","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","enumerable","configurable","KeyRegistry","_allKeys","has","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","ChangeDetectionStrategy","ChangeDetectorStatus","Query","UNDEFINED","ReflectiveInjector","resolve","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_this","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","selector","data","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","url","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","component","promises","templateUrl","template","styleUrls","styles","styleOffset","styleUrl","style","splice","fullyResolved","Promise","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","ViewEncapsulation","Set","componentNeedsResolution","old","response","EMPTY_OBJ","EMPTY_ARRAY$1","renderStringify","defaultScheduler","requestAnimationFrame","setTimeout","resolveWindow","element","ownerDocument","defaultView","resolveDocument","resolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","maybeUnwrapFn","throwError","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","_","setInput","schemas","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","setComponentScope","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","CONTENT_QUERIES","DECLARATION_VIEW","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","NATIVE","VIEWS","MONKEY_PATCH_KEY_NAME","unwrapRNode","isLView","isLContainer","getNativeByIndex","lView","getNativeByTNode","tNode","hostView","getTNode","view","loadInternal","getComponentViewByIndex","nodeIndex","slotValue","isComponent","isComponentDef","isRootView","readPatchedData","readPatchedLView","viewAttachedToContainer","resetPreOrderHookFlags","elementDepthCount","NodeInjectorFactory","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","registerPreOrderHooks","directiveIndex","directiveDef","tView","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","firstTemplatePass","directiveStart","end","directiveEnd","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executePreOrderHooks","currentView","checkNoChangesMode","currentNodeIndex","executeHooks","firstPassHooks","checkHooks","initPhaseState","hooksToCall","callHooks","arr","initPhase","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","bindingsEnabled","currentDirectiveDef","setCurrentDirectiveDef","enableBindings","disableBindings","getLView","previousOrParentTNode","isParent","activeHostContext","activeHostElementIndex","setActiveHost","getActiveHostContext","getActiveHostElementIndex","restoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","enterView","newView","hostTNode","oldView","bindingStartIndex","nextContextImpl","level","walkUpViews","nestingLevel","leaveView","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getLContext","mpValue","isComponentInstance","instance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","CorePlayerHandler","_players","flushPlayers","player","state","play","queuePlayer","ANIMATION_PROP_PREFIX","createEmptyStylingContext","wrappedElement","sanitizer","initialStyles","initialClasses","allocateDirectiveIntoContext","directiveRef","dirs","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","hasClassInput","hasStyleInput","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","destroy","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","setUpAttributes","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","setProperty","attrsStylingIndexOf","startIndex","val","isNameOnlyAttributeMarker","marker","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","getLViewParent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","attrsLength","accumulatedClasses","trim","accumulatedStyles","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","getFactoryOf$1","getInheritedFactory","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","_findOriginalError","_findContext","errorLogger","getErrorLogger","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","removeChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","item","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","match","warn","sanitizeSrcset","srcset","split","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","tagName","nodeName","toLowerCase","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","getSanitizer","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","sanitizeScript","unsafeScript","SCRIPT","getUrlSanitizer","tag","sanitizeUrlOrResourceUrl","defaultStyleSanitizer","isPromise","isObservable","subscribe","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","a","isNaN","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject","throwMultipleComponentError","NO_CHANGE","updateBinding","bindingIndex","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","toDebug","debug","assertDefined","actual","toHtml","includeChildren","isTextNode","textContent","readLViewValue","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","LViewDebug","_raw_lView","__raw__flags__","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","toDebugNodes","debugNodes","tNodeCursor","rawValue","componentLViewDebug","nodes","cleanup","rendererFactory","childHead","childTail","declarationView","queries","tHost","childViews","__other__","LContainerDebug","_raw_lContainer","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","head","projection","head_1","head_1_1","projectionNext","nativeInsertBefore","nativeRemoveNode","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","views","detachView","removeIndex","viewToDetach","removeView","destroyLView","destroyViewTree","rootView","lViewOrLContainer","cleanUpView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","cleanupFn","insertBefore","nativeAppendOrInsertBefore","nativeAppendChild","childEl","childTNode","getRenderParent","getHighestElementOrICUContainer","getHostNative","ShadowDom","Native","anchorNode","getNativeAnchorNode","parentTNode","getBeforeNodeForView","childEl_1","childEl_1_1","containerNative","viewTNode","rNode","isHostElement","nativeParent","nativeRemoveChild","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","BoundPlayerFactory","initializeStaticContext","stylingStartIndex","patchContextWithStaticAttrs","attrsStylingStartIndex","detectedIndex","getDirectiveRegistryValuesIndexOf","attr","patchInitialStylingValue","initialStyling","directiveOwnerIndex","allowValueChange","addOrUpdateStaticStyle","renderInitialClasses","setClass","renderInitialStyles","setStyle","getMatchingBindingIndex","bindingName","start","getProp","patchStylingMapIntoContext","playerBuilderIndex","ctxStart","ctxEnd","cacheValue","entryIsClassBased","cacheIndex","cachedValues","ownershipValuesStartIndex","existingCachedValueCount","valuesEntryShapeChange","totalUniqueValues","totalNewAllocatedSlots","applyAllProps","ctxIndex","totalRemainingProperties","currentProp","normalizedProp","mapProp","hyphenate","currentValue","getValue","currentDirectiveIndex","getDirectiveIndexFromEntry","currentFlag","getPointers","hasValueChanged","setValue","setPlayerBuilderIndex","hasInitialValueChanged","setDirty","getStyleSanitizer","propertiesLoop","isInsideOwnershipArea","distantCtxDirectiveIndex","distantCtxPlayerBuilderIndex","getPlayerBuilderIndex","distantCtxValue","distantCtxFlag","swapMultiContextEntries","insertNewMultiProperty","prepareInitialFlag","ctxValue","ctxFlag","updateCachedMapValue","startPosition","endPosition","totalValues","dirtyFutureValues","nextStartPosition","totalStylingEntries","classCache","diffInStartPosition","setContextDirty","setDirectiveDirty","updateSingleStylingValue","offset","input","isClassBased","forceOverride","getDirectiveIndexFromRegistry","singleIndex","getSinglePropIndexValue","singlePropOffsetRegistryIndex","offsets","currValue","currFlag","currDirective","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setSanitizeFlag","sanitizeYes","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setContextPlayersDirty","store","DashCase","removeStyle","removeProperty","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiClassesStartIndex","getMultiStylesStartIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","tmpDirectiveIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","initialIndex","getInitialStylingValuesIndexOf","newValue","initialValue","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","classesStartIndex","registerMultiMapEntry","keyValues","dirtyYes","currentDirectiveOwner","newDirectiveOwner","getInitialClassNameValue","initialClassValues","readCachedMapValue","isMultiValueCacheHit","count","limit","staticStyles","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","readClassValueFromTNode","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","matchingProjectionSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","applyOnCreateInstructions","fns","onElementCreationFns","setInputsForProperty","privateName","_CLEAN_PROMISE","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","setHostBindings","expandoInstructions","expandoStartIndex","currentElementIndex","instruction","providerCount","hostCtx","staticContentQueries","refreshChildComponents","viewAttachedToChangeDetector","syncViewWithBlueprint","componentTView","checkView","directiveDefIdx","createLView","tHostNode","createNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","getRenderFlags","nextContext","renderComponentOrTemplate","templateFn","normalExecutionPath","creationModeIsActive","begin","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","setNodeStylingTemplate","createDirectivesAndLocals","currentQueries","addNode","clone","executeContentQueries","attrsStartIndex","stylingAttrsStartIndex","isContentQueryHost","elementContainerEnd","elementCreate","initialStylesIndex","initialClassesIndex","getElementDepthCount","increaseElementDepthCount","inputData","initializeTNodeInputs","overriddenRenderer","rendererToUse","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","viewQueryStartIndex","staticViewQueries","pipeRegistry","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","listener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","componentHostSyntheticListener","loadComponentRenderer","loadRendererFn","lCleanupIndex","getCleanup","wrapListener","listen","generatePropertyAliases","propsLength","subscription","idx","decreaseElementDepthCount","getInitialStyleStringValue","initialStyleValues","styleString","select","elementAttribute","namespace","element_1","strValue","elementProperty","nativeOnly","elementPropertyInternal","componentHostSyntheticProperty","ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","dataValue","markDirtyIfOnPush","childComponentLView","savePropertyDebugData","lastBindingIndex","bindingMetadata","propertyMetadataStartIndex","propertyMetadataEndIndex","tParent","initialInputs","tViews","direction","propStore","isInput","defs","propertyAliasMap","internalName","elementHostAttrs","textNative","textBinding","element_2","previousExpandoLength","elementIndex","directiveCount","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","tContainerNode","containerInternal","addTContainerToQueries","comment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","projectionDef","componentNode","projectionHeads","tails","componentChild","bucketIndex","selectorIndex","appendProjectedNodes","projectedView","nodeToProject","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","markViewDirty","preventDefault","returnValue","parent_2","scheduleTick","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChangesInternal","detectChangesInRootView","hostTView","executeViewQueryFn","markDirty","storeBindingMetadata","allocHostVars","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","interpolationV","interpolation1","prefix","v0","suffix","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextLView","load","directiveInject","injectAttribute","CLEAN_PROMISE","getCurrentView","getTViewCleanup","errorHandler","elementStyling","classBindingNames","styleBindingNames","styleSanitizer","initElementStyling","elementHostStyling","updateContextWithBindings","findOrPatchDirectiveIntoRegistry","directiveRefs","nextOffsetInsertionIndex","hyphenateEntries","entries","newEntries","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","cachedClassMapValues","cachedStyleMapValues","stylesOffset","singleClassesStartIndex","multiStylesStartIndex","multiClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","i_1","name_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","totalNewEntries","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","newStylesSpaceAllocationSize","newClassesSpaceAllocationSize","cachedStyleMapIndex","i_7","cachedClassMapIndex","i_8","elementStyleProp","styleIndex","elementStylePropInternal","elementHostStyleProp","valueToAdd","updateStyleProp","elementClassProp","classIndex","elementClassPropInternal","elementHostClassProp","booleanOrNull","updateClassProp","elementStylingMap","classes","elementStylingMapInternal","elementHostStylingMap","classInputVal","forceClassesAsString","styleInputVal","forceStylesAsString","updateStylingMap","classesInput","stylesInput","ignoreAllClassUpdates","ignoreAllStyleUpdates","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","classNames","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","multiClassesEndIndex","elementStylingApply","elementStylingApplyInternal","elementHostStylingApply","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","targetDirectiveIndex","isContextDirty","isDirectiveDirty","flushPlayerBuilders","multiStartIndex","stillDirty","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","getListeners","listeners","firstParam","secondParam","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","firstChange","isFirstChange","NgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","InheritDefinitionFeature","superType","getSuperType","_loop_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","rf","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","features_1","features_1_1","superPrototype","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$2","NULL_INJECTOR$1","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","_destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multiRecord_1","hasOnDestroy","paramLength","isExistingProvider","isFactoryProvider","classRef_1","ngModuleDetail","hasDeps","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_hostLContainer","_injectorIndex","createEmbeddedView","createEmbeddedViewAndNode","viewRef","hostContainer","createViewRef","componentIndex","hostComponentView","noop","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","scope","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","pop","EMPTY_CONTEXT","getComponentViewDefinitionFactory","componentFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ViewContainerRef_","_data","templateRef","insert","createComponent","ngModuleRef","contextInjector","parentInjector","componentRef","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","array","nonMinified","ROOT_CONTEXT","SCHEDULER","isBoundToModule","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","_rootLView","destroyCbs","addAllToArray","items","ELEMENT_MARKER","COMMENT_MARKER","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","pos","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","i18nVarsCount","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","tIcuIndex","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","icus","appendI18nNode","previousTNode","cursor","i18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders_1","placeholder","templateId","isCloseTemplateTag","currentTemplateId","placeholders","_idx","list","shift","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","opCode","textRNode","destinationNodeIndex","elementNodeIndex","commentValue","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","max","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","_r3Injector","NgModuleFactory$1","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","unwrapValue$1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","QueryList","_results","filter","reduce","init","toArray","reset","resultsTree","flatten","last","notifyOnChanges","LQueries_","shallow","deep","track","queryList","predicate","descend","read","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","removeView$1","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","_static","storeCleanupWithContext","queryRefresh","queryListImpl","staticViewQuery","loadViewQuery","contentQuery","tViewContentQueries","staticContentQuery","loadContentQuery","templateRefExtractor","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵallocHostVars","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵcomponentHostSyntheticProperty","ɵcomponentHostSyntheticListener","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵqueryRefresh","ɵviewQuery","ɵstaticViewQuery","ɵstaticContentQuery","ɵloadViewQuery","ɵcontentQuery","ɵloadContentQuery","ɵreference","ɵelementHostAttrs","ɵelementStyling","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵelementClassProp","ɵelementHostStyling","ɵelementHostStylingMap","ɵelementHostStyleProp","ɵelementHostStylingApply","ɵelementHostClassProp","ɵselect","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵresolveWindow","ɵresolveDocument","ɵresolveBody","ɵsetComponentScope","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","ɵsanitizeUrl","ɵsanitizeUrlOrResourceUrl","NgModuleFactoryLoader","assertSameOrNotExisting","incoming","getModuleFactory__PRE_R3__","noModuleError","getModuleFactory","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","flatten$1","expandModuleWithProviders","emitInline","registerNgModuleType","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","mapFn","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","interpolation","hasSelectorScope","compileDirective","sourceMapUrl","facade","extendsDirectlyFromObject","typeArgumentCount","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","usesInheritance","part","viewQueries","isQueryAnn","queriesMeta","field","annotations_1","ann","isInputAnn","convertToR3QueryMetadata","splitByComma","piece","static","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","isBoundToModule__PRE_R3__","cf","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","collectClassNames","debugElement","eAttrs","lContext","eClasses","classList","eStyles","getPropertyValue","children","getDebugNode__POST_R3__","_queryAllR3","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNodeChildrenInContainerR3","nextLView","childView","debugNode","getDebugNode","_nativeNodeToDebugNode","getDebugNode__PRE_R3__","indexDebugNode","MissingTranslationStrategy","DebugNode","DebugElement","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","ViewAction","ApplicationModule","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","ɵangular_packages_core_core_r","ɵangular_packages_core_core_o","ɵangular_packages_core_core_p","ɵangular_packages_core_core_q","ɵangular_packages_core_core_s","ɵangular_packages_core_core_f","ɵangular_packages_core_core_m","ɵangular_packages_core_core_n","ɵangular_packages_core_core_l","ɵangular_packages_core_core_k","ɵangular_packages_core_core_a","ɵangular_packages_core_core_b","ɵangular_packages_core_core_c","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_j","ɵangular_packages_core_core_t","ɵangular_packages_core_core_v","ɵangular_packages_core_core_u","ɵangular_packages_core_core_y","ɵangular_packages_core_core_w","ɵangular_packages_core_core_x","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_be","ɵangular_packages_core_core_bf","ɵangular_packages_core_core_bj","ɵangular_packages_core_core_bo","ɵangular_packages_core_core_bn","ɵangular_packages_core_core_g","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_bl","ɵangular_packages_core_core_bp","ɵangular_packages_core_core_z","ɵangular_packages_core_core_ba","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵinject","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","ɵisBoundToModule__POST_R3__","isBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","compilerMeta","ctorDeps","userDeps","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","adjustedIdx","_adjustIndex","commentNode","nativeNextSibling","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ɵgetModuleFactory__POST_R3__","getModuleFactory__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v8.0.0-beta.10+66.sha-6759aa6.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getGlobal() {\n        var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n        var __window = typeof window !== 'undefined' && window;\n        var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n            self instanceof WorkerGlobalScope && self;\n        var __global = typeof global !== 'undefined' && global;\n        // Always use __globalThis if available, which is the spec-defined global variable across all\n        // environments, then fallback to __global first, because in Node tests both __global and\n        // __window may be defined and _global should be __global in that case.\n        return __globalThis || __global || __window || __self;\n    }\n    var _global = getGlobal();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'inject': inject,\n        'ɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var ɵ0 = getClosureSafeProperty;\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ0 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$1 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$1 });\n    var EMPTY_ARRAY = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE$2 in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE$2 in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ngComponentDef for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.template) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY$1 = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY_OBJ);\n        Object.freeze(EMPTY_ARRAY$1);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     */\n    function renderStringify(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        if (typeof value == 'object' && typeof value.type == 'function')\n            return value.type.name || value.type;\n        return '' + value;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    function resolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    function resolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    function resolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node.constructor.name === 'WebWorkerRenderNode'), true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY$1,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function setComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY$1,\n            declarations: def.declarations || EMPTY_ARRAY$1,\n            imports: def.imports || EMPTY_ARRAY$1,\n            exports: def.exports || EMPTY_ARRAY$1,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 20;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT, NEXT, QUERIES and T_HOST are indices 3, 4, 5 and 6.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 7;\n    var VIEWS = 8;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`,\n     * `StylingContext`) in same location in `LView`. This is because we don't want to pre-allocate\n     * space for it because the storage is sparse. This file contains utilities for dealing with such\n     * data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === 'number'` => `StylingContext`\n     *      - This happens when we have style/class binding at a given location.\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * True if `value` is `LView`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    /**\n     * True if `value` is `StylingContext`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isStylingContext(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'number';\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return unwrapRNode(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     * @param @param currentNodeIndex 2 cases depending the the value:\n     * - undefined: execute hooks only from the saved index until the end of the array (pre-order case,\n     * when flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executePreOrderHooks(currentView, tView, checkNoChangesMode, currentNodeIndex) {\n        if (!checkNoChangesMode) {\n            executeHooks(currentView, tView.preOrderHooks, tView.preOrderCheckHooks, checkNoChangesMode, 0 /* OnInitHooksToBeRun */, currentNodeIndex !== undefined ? currentNodeIndex : null);\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param currentView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode, initPhaseState, currentNodeIndex) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState ?\n            firstPassHooks :\n            checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall, initPhaseState, currentNodeIndex);\n        }\n        // The init phase state must be always checked here as it may have been recursively updated\n        if (currentNodeIndex == null &&\n            (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState &&\n            initPhaseState !== 3 /* InitPhaseCompleted */) {\n            currentView[FLAGS] &= 1023 /* IndexWithinInitPhaseReset */;\n            currentView[FLAGS] += 1 /* InitPhaseStateIncrementer */;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    var activeHostContext = null;\n    var activeHostElementIndex = null;\n    /**\n     * Sets the active host context (the directive/component instance) and its host element index.\n     *\n     * @param host the directive/component instance\n     * @param index the element index value for the host element where the directive/component instance\n     * lives\n     */\n    function setActiveHost(host, index) {\n        if (index === void 0) { index = null; }\n        activeHostContext = host;\n        activeHostElementIndex = index;\n    }\n    function getActiveHostContext() {\n        return activeHostContext;\n    }\n    function getActiveHostElementIndex() {\n        return activeHostElementIndex;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        else {\n            try {\n                resetPreOrderHookFlags(lView);\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode, 2 /* AfterViewInitHooksToBeRun */, undefined);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        enterView(newView, null);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY$1;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(wrappedElement, sanitizer, initialStyles, initialClasses) {\n        var context = [\n            wrappedElement || null,\n            0,\n            [],\n            initialStyles || [null, null],\n            initialClasses || [null, null],\n            [0, 0],\n            [0],\n            [0],\n            null,\n        ];\n        // whenever a context is created there is always a `null` directive\n        // that is registered (which is a placeholder for the \"template\").\n        allocateDirectiveIntoContext(context, null);\n        return context;\n    }\n    /**\n     * Allocates (registers) a directive into the directive registry within the provided styling\n     * context.\n     *\n     * For each and every `[style]`, `[style.prop]`, `[class]`, `[class.name]` binding\n     * (as well as static style and class attributes) a directive, component or template\n     * is marked as the owner. When an owner is determined (this happens when the template\n     * is first passed over) the directive owner is allocated into the styling context. When\n     * this happens, each owner gets its own index value. This then ensures that once any\n     * style and/or class binding are assigned into the context then they are marked to\n     * that directive's index value.\n     *\n     * @param context the target StylingContext\n     * @param directiveRef the directive that will be allocated into the context\n     * @returns the index where the directive was inserted into\n     */\n    function allocateDirectiveIntoContext(context, directiveRef) {\n        // this is a new directive which we have not seen yet.\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var i = dirs.length;\n        // we preemptively make space into the directives array and then\n        // assign values slot-by-slot to ensure that if the directive ordering\n        // changes then it will still function\n        dirs.push(null, null, null, null);\n        dirs[i + 0 /* DirectiveValueOffset */] = directiveRef;\n        dirs[i + 2 /* DirtyFlagOffset */] = false;\n        dirs[i + 3 /* StyleSanitizerOffset */] = null;\n        // -1 is used to signal that the directive has been allocated, but\n        // no actual style or class bindings have been registered yet...\n        dirs[i + 1 /* SinglePropValuesIndexOffset */] = -1;\n        return i;\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        // the HEADER values contain arrays which also need\n        // to be copied over into the new context\n        for (var i = 0; i < 9 /* SingleStylesStartPosition */; i++) {\n            var value = templateStyleContext[i];\n            if (Array.isArray(value)) {\n                context[i] = value.slice();\n            }\n        }\n        context[0 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[1 /* MasterFlagPosition */] |= 16 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 8 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 16 /* hasStyleInput */) !== 0;\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str += (i ? ';' : '') + (prop + \":\" + styles[prop]);\n            }\n        }\n        return str;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[8 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[8 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     *\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                /// attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n                    // Standard attributes\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    if (isAnimationProp(attrName)) {\n                        if (isProc) {\n                            renderer.setProperty(native, attrName, attrVal);\n                        }\n                    }\n                    else {\n                        isProc ?\n                            renderer\n                                .setAttribute(native, attrName, attrVal) :\n                            native.setAttribute(attrName, attrVal);\n                    }\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    function attrsStylingIndexOf(attrs, startIndex) {\n        for (var i = startIndex; i < attrs.length; i++) {\n            var val = attrs[i];\n            if (val === 1 /* Classes */ || val === 2 /* Styles */) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings` or `Template`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    if (value === 1 /* Classes */ && attrNameToInject === 'class') {\n                        var accumulatedClasses = '';\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            accumulatedClasses += ' ' + attrs[i++];\n                        }\n                        return accumulatedClasses.trim();\n                    }\n                    else if (value === 2 /* Styles */ && attrNameToInject === 'style') {\n                        var accumulatedStyles = '';\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            accumulatedStyles += attrs[i++] + \": \" + attrs[i++] + \"; \";\n                        }\n                        return accumulatedStyles.trim();\n                    }\n                    else {\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            i++;\n                        }\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + renderStringify(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + renderStringify(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + renderStringify(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf$1(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf$1(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return sanitizeResourceUrl;\n        }\n        return sanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     */\n    function sanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'list-style' || prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (isDifferent(oldValue, value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    function attachLViewDebug(lView) {\n        lView.debug = new LViewDebug(lView);\n    }\n    function attachLContainerDebug(lContainer) {\n        lContainer.debug = new LContainerDebug(lContainer);\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = node.innerHTML;\n                return outerHTML.split(innerHTML)[0] || null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"__other__\", {\n            /**\n             * Additional information which is hidden behind a property. The extra level of indirection is\n             * done so that the debug view would not be cluttered with properties which are only rarely\n             * relevant to the developer.\n             */\n            get: function () {\n                return {\n                    tView: this._raw_lView[TVIEW],\n                    cleanup: this._raw_lView[CLEANUP],\n                    injector: this._raw_lView[INJECTOR$1],\n                    rendererFactory: this._raw_lView[RENDERER_FACTORY],\n                    renderer: this._raw_lView[RENDERER],\n                    sanitizer: this._raw_lView[SANITIZER],\n                    childHead: toDebug(this._raw_lView[CHILD_HEAD]),\n                    next: toDebug(this._raw_lView[NEXT]),\n                    childTail: toDebug(this._raw_lView[CHILD_TAIL]),\n                    declarationView: toDebug(this._raw_lView[DECLARATION_VIEW]),\n                    contentQueries: this._raw_lView[CONTENT_QUERIES],\n                    queries: this._raw_lView[QUERIES],\n                    tHost: this._raw_lView[T_HOST],\n                    bindingIndex: this._raw_lView[BINDING_INDEX],\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.__other__.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.__other__.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                var rawValue = lView[tNode.index];\n                var native = unwrapRNode(rawValue);\n                var componentLViewDebug = toDebug(readLViewValue(rawValue));\n                debugNodes.push({\n                    html: toHtml(native),\n                    native: native,\n                    nodes: toDebugNodes(tNode.child, lView),\n                    component: componentLViewDebug\n                });\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer[VIEWS].map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lContainer[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"__other__\", {\n            get: function () {\n                return {\n                    next: toDebug(this._raw_lContainer[NEXT]),\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var e_1, _a;\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), tNode, beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], tNode, beforeNode);\n                    if (nodeOrContainer[VIEWS].length) {\n                        currentView = nodeOrContainer[VIEWS][0];\n                        nextTNode = currentView[TVIEW].node;\n                        // When the walker enters a container, then the beforeNode has to become the local native\n                        // comment node.\n                        beforeNode = nodeOrContainer[NATIVE];\n                    }\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], tNode, beforeNode);\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[T_HOST];\n                var head = componentHost.projection[tNode.projection];\n                if (Array.isArray(head)) {\n                    try {\n                        for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                            var nativeNode = head_1_1.value;\n                            executeNodeAction(action, renderer, renderParent, nativeNode, tNode, beforeNode);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    // Must store both the TNode and the view because this projection node could be nested\n                    // deeply inside embedded views, and we need to get back down to this particular nested\n                    // view.\n                    projectionNodeStack[++projectionNodeIndex] = tNode;\n                    projectionNodeStack[++projectionNodeIndex] = currentView;\n                    if (head) {\n                        currentView = componentView[PARENT];\n                        nextTNode = currentView[TVIEW].data[head.index];\n                    }\n                }\n            }\n            else {\n                // Otherwise, this is a View\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.projectionNext === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                if (tNode.flags & 2 /* isProjected */) {\n                    nextTNode = tNode.projectionNext;\n                }\n                else if (tNode.type === 4 /* ElementContainer */) {\n                    nextTNode = tNode.child || tNode.next;\n                }\n                else {\n                    nextTNode = tNode.next;\n                }\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[T_HOST];\n                    if (tNode === null || tNode === rootTNode)\n                        return;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = getLViewParent(currentView);\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */) {\n                        /**\n                         * If current lView doesn't have next pointer, we try to find it by going up parents\n                         * chain until:\n                         * - we find an lView with a next pointer\n                         * - or find a tNode with a parent that has a next pointer\n                         * - or find a lContainer\n                         * - or reach root TNode (in which case we exit, since we traversed all nodes)\n                         */\n                        while (!currentView[NEXT] && currentView[PARENT] &&\n                            !(tNode.parent && tNode.parent.next)) {\n                            if (tNode === rootTNode)\n                                return;\n                            currentView = currentView[PARENT];\n                            if (isLContainer(currentView)) {\n                                tNode = currentView[T_HOST];\n                                currentView = currentView[PARENT];\n                                beforeNode = currentView[tNode.index][NATIVE];\n                                break;\n                            }\n                            tNode = currentView[T_HOST];\n                        }\n                        if (currentView[NEXT]) {\n                            currentView = currentView[NEXT];\n                            nextTNode = currentView[T_HOST];\n                        }\n                        else {\n                            nextTNode = tNode.type === 4 /* ElementContainer */ && tNode.child || tNode.next;\n                        }\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, tNode, beforeNode) {\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, node, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveNode(renderer, node, isComponent(tNode));\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        walkTNodeTree(lView, 1 /* Detach */, lView[RENDERER], null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var views = lViewOrLContainer[VIEWS];\n                if (views.length > 0)\n                    next = views[0];\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var views = lContainer[VIEWS];\n        ngDevMode && assertDefined(views, 'Container must have views');\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        addRemoveViewFromContainer(viewToDetach, false);\n        if ((viewToDetach[FLAGS] & 128 /* Attached */) &&\n            !(viewToDetach[FLAGS] & 256 /* Destroyed */) && viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[PARENT] = null;\n        viewToDetach[NEXT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~128 /* Attached */;\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex);\n        destroyLView(view);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        if (!(view[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = view[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n            }\n            destroyViewTree(view);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            // For embedded views still attached to a container: remove query result from this view.\n            if (viewAttachedToContainer(view) && view[QUERIES]) {\n                view[QUERIES].removeView();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // DOM listener\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else if (typeof tCleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = lCleanup[tCleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode).parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (parent == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            ngDevMode && assertNodeType(parent, 3 /* Element */);\n            if (parent.flags & 1 /* isComponent */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parent.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parent, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            var views = lContainer[VIEWS];\n            var index = views.indexOf(lView);\n            return getBeforeNodeForView(index, views, lContainer[NATIVE]);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var e_2, _a;\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                try {\n                    for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                        var nativeNode = childEl_1_1.value;\n                        nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[T_HOST];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Appends nodes to a target projection place. Nodes to insert were previously re-distribution and\n     * stored on a component host level.\n     * @param lView A LView where nodes are inserted (target VLview)\n     * @param tProjectionNode A projection node where previously re-distribution should be appended\n     * (target insertion place)\n     * @param selectorIndex A bucket from where nodes to project should be taken\n     * @param componentView A where projectable nodes were initially created (source view)\n     */\n    function appendProjectedNodes(lView, tProjectionNode, selectorIndex, componentView) {\n        var projectedView = componentView[PARENT];\n        var componentNode = componentView[T_HOST];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        if (Array.isArray(nodeToProject)) {\n            appendChild(nodeToProject, tProjectionNode, lView);\n        }\n        else {\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    appendProjectedNodes(lView, tProjectionNode, nodeToProject.projection, findComponentView(projectedView));\n                }\n                else {\n                    // This flag must be set now or we won't know that this node is projected\n                    // if the nodes are inserted into a container later.\n                    nodeToProject.flags |= 2 /* isProjected */;\n                    appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                }\n                nodeToProject = nodeToProject.projectionNext;\n            }\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * It also includes code that will allow style binding code to operate within host\n     * bindings for components/directives.\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `render3/interfaces/styling.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs, stylingStartIndex, directiveRef) {\n        var context = createEmptyStylingContext();\n        patchContextWithStaticAttrs(context, attrs, stylingStartIndex, directiveRef);\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param attrsStylingStartIndex what index to start iterating within the\n     *              provided `attrs` array to start reading style and class values\n     * @param directiveRef the directive instance with which static data is associated with.\n     */\n    function patchContextWithStaticAttrs(context, attrs, attrsStylingStartIndex, directiveRef) {\n        // this means the context has already been set and instantiated\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        // If the styling context has already been patched with the given directive's bindings,\n        // then there is no point in doing it again. The reason why this may happen (the directive\n        // styling being patched twice) is because the `stylingBinding` function is called each time\n        // an element is created (both within a template function and within directive host bindings).\n        var directives = context[2 /* DirectiveRegistryPosition */];\n        var detectedIndex = getDirectiveRegistryValuesIndexOf(directives, directiveRef || null);\n        if (detectedIndex === -1) {\n            // this is a new directive which we have not seen yet.\n            detectedIndex = allocateDirectiveIntoContext(context, directiveRef);\n        }\n        var directiveIndex = detectedIndex / 4 /* Size */;\n        var initialClasses = null;\n        var initialStyles = null;\n        var mode = -1;\n        for (var i = attrsStylingStartIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                initialClasses = initialClasses || context[4 /* InitialClassValuesPosition */];\n                patchInitialStylingValue(initialClasses, attr, true, directiveIndex);\n            }\n            else if (mode == 2 /* Styles */) {\n                initialStyles = initialStyles || context[3 /* InitialStyleValuesPosition */];\n                patchInitialStylingValue(initialStyles, attr, attrs[++i], directiveIndex);\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is\n     * present (allocated) then the code below will set the new value depending on the\n     * following cases:\n     *\n     *  1) if the existing value is falsy (this happens because a `[class.prop]` or\n     *     `[style.prop]` binding was set, but there wasn't a matching static style\n     *     or class present on the context)\n     *  2) if the value was set already by the template, component or directive, but the\n     *     new value is set on a higher level (i.e. a sub component which extends a parent\n     *     component sets its value after the parent has already set the same one)\n     *  3) if the same directive provides a new set of styling values to set\n     *\n     * @param initialStyling the initial styling array where the new styling entry will be added to\n     * @param prop the property value of the new entry (e.g. `width` (styles) or `foo` (classes))\n     * @param value the styling value of the new entry (e.g. `absolute` (styles) or `true` (classes))\n     * @param directiveOwnerIndex the directive owner index value of the styling source responsible\n     *        for these styles (see `interfaces/styling.ts#directives` for more info)\n     */\n    function patchInitialStylingValue(initialStyling, prop, value, directiveOwnerIndex) {\n        for (var i = 2 /* KeyValueStartPosition */; i < initialStyling.length; i += 3 /* Size */) {\n            var key = initialStyling[i + 0 /* PropOffset */];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                var existingOwner = initialStyling[i + 2 /* DirectiveOwnerOffset */];\n                if (allowValueChange(existingValue, value, existingOwner, directiveOwnerIndex)) {\n                    addOrUpdateStaticStyle(i, initialStyling, prop, value, directiveOwnerIndex);\n                }\n                return;\n            }\n        }\n        // We did not find existing key, add a new one.\n        addOrUpdateStaticStyle(null, initialStyling, prop, value, directiveOwnerIndex);\n    }\n    /**\n     * Runs through the initial class values present in the provided\n     * context and renders them via the provided renderer on the element.\n     *\n     * @param element the element the styling will be applied to\n     * @param context the source styling context which contains the initial class values\n     * @param renderer the renderer instance that will be used to apply the class\n     * @returns the index that the classes were applied up until\n     */\n    function renderInitialClasses(element, context, renderer, startIndex) {\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        var i = startIndex || 2 /* KeyValueStartPosition */;\n        while (i < initialClasses.length) {\n            var value = initialClasses[i + 1 /* ValueOffset */];\n            if (value) {\n                setClass(element, initialClasses[i + 0 /* PropOffset */], true, renderer, null);\n            }\n            i += 3 /* Size */;\n        }\n        return i;\n    }\n    /**\n     * Runs through the initial styles values present in the provided\n     * context and renders them via the provided renderer on the element.\n     *\n     * @param element the element the styling will be applied to\n     * @param context the source styling context which contains the initial class values\n     * @param renderer the renderer instance that will be used to apply the class\n     * @returns the index that the styles were applied up until\n     */\n    function renderInitialStyles(element, context, renderer, startIndex) {\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        var i = startIndex || 2 /* KeyValueStartPosition */;\n        while (i < initialStyles.length) {\n            var value = initialStyles[i + 1 /* ValueOffset */];\n            if (value) {\n                setStyle(element, initialStyles[i + 0 /* PropOffset */], value, renderer, null);\n            }\n            i += 3 /* Size */;\n        }\n        return i;\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param directiveRef the directive that the new bindings will reference\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveRef, classBindingNames, styleBindingNames, styleSanitizer) {\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var directiveIndex = findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer);\n        if (directiveIndex === -1) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        if (styleBindingNames) {\n            styleBindingNames = hyphenateEntries(styleBindingNames);\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[5 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var cachedClassMapValues = context[6 /* CachedMultiClasses */];\n        var cachedStyleMapValues = context[7 /* CachedMultiStyles */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 9 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `elementStyleProp`\n        // and the `elementClassProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added in case a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = addOrUpdateStaticStyle(null, initialValuesToLookup, propName, entryIsClassBased ? false : null, directiveIndex) +\n                    1 /* ValueOffset */;\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // the map-based values also need to know how many entries got inserted\n        cachedClassMapValues[0 /* EntriesCountPosition */] +=\n            filteredClassBindingNames.length;\n        cachedStyleMapValues[0 /* EntriesCountPosition */] +=\n            filteredStyleBindingNames.length;\n        var newStylesSpaceAllocationSize = filteredStyleBindingNames.length * 4 /* Size */;\n        var newClassesSpaceAllocationSize = filteredClassBindingNames.length * 4 /* Size */;\n        // update the multi styles cache with a reference for the directive that was just inserted\n        var directiveMultiStylesStartIndex = multiStylesStartIndex + totalCurrentStyleBindings * 4 /* Size */;\n        var cachedStyleMapIndex = cachedStyleMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, false, directiveMultiStylesStartIndex, filteredStyleBindingNames.length);\n        for (var i_7 = 1 /* ValuesStartPosition */; i_7 < cachedStyleMapIndex; i_7 += 4 /* Size */) {\n            // multi values start after all the single values (which is also where classes are) in the\n            // context therefore the new class allocation size should be taken into account\n            cachedStyleMapValues[i_7 + 1 /* PositionStartOffset */] +=\n                newClassesSpaceAllocationSize + newStylesSpaceAllocationSize;\n        }\n        // update the multi classes cache with a reference for the directive that was just inserted\n        var directiveMultiClassesStartIndex = multiClassesStartIndex + totalCurrentClassBindings * 4 /* Size */;\n        var cachedClassMapIndex = cachedClassMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, true, directiveMultiClassesStartIndex, filteredClassBindingNames.length);\n        for (var i_8 = 1 /* ValuesStartPosition */; i_8 < cachedClassMapIndex; i_8 += 4 /* Size */) {\n            // the reason why both the styles + classes space is allocated to the existing offsets is\n            // because the styles show up before the classes in the context and any new inserted\n            // styles will offset any existing class entries in the context (even if there are no\n            // new class entries added) also the reason why it's *2 is because both single + multi\n            // entries for each new style have been added in the context before the multi class values\n            // actually start\n            cachedClassMapValues[i_8 + 1 /* PositionStartOffset */] +=\n                (newStylesSpaceAllocationSize * 2) + newClassesSpaceAllocationSize;\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex);\n        setFlag(context, 1 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer) {\n        var directiveRefs = context[2 /* DirectiveRegistryPosition */];\n        var nextOffsetInsertionIndex = context[5 /* SinglePropOffsetPositions */].length;\n        var directiveIndex;\n        var detectedIndex = getDirectiveRegistryValuesIndexOf(directiveRefs, directiveRef);\n        if (detectedIndex === -1) {\n            detectedIndex = directiveRefs.length;\n            directiveIndex = directiveRefs.length / 4 /* Size */;\n            allocateDirectiveIntoContext(context, directiveRef);\n            directiveRefs[detectedIndex + 1 /* SinglePropValuesIndexOffset */] =\n                nextOffsetInsertionIndex;\n            directiveRefs[detectedIndex + 3 /* StyleSanitizerOffset */] =\n                styleSanitizer || null;\n        }\n        else {\n            var singlePropStartPosition = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            if (directiveRefs[singlePropStartPosition] >= 0) {\n                // the directive has already been patched into the context\n                return -1;\n            }\n            directiveIndex = detectedIndex / 4 /* Size */;\n            // because the directive already existed this means that it was set during elementHostAttrs or\n            // elementStart which means that the binding values were not here. Therefore, the values below\n            // need to be applied so that single class and style properties can be assigned later.\n            var singlePropPositionIndex = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            directiveRefs[singlePropPositionIndex] = nextOffsetInsertionIndex;\n            // the sanitizer is also apart of the binding process and will be used when bindings are\n            // applied.\n            var styleSanitizerIndex = detectedIndex + 3 /* StyleSanitizerOffset */;\n            directiveRefs[styleSanitizerIndex] = styleSanitizer || null;\n        }\n        return directiveIndex;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Registers the provided multi styling (`[style]` and `[class]`) values to the context.\n     *\n     * This function will iterate over the provided `classesInput` and `stylesInput` map\n     * values and insert/update or remove them from the context at exactly the right\n     * spot.\n     *\n     * This function also takes in a directive which implies that the styling values will\n     * be evaluated for that directive with respect to any other styling that already exists\n     * on the context. When there are styles that conflict (e.g. say `ngStyle` and `[style]`\n     * both update the `width` property at the same time) then the styling algorithm code below\n     * will decide which one wins based on the directive styling prioritization mechanism. This\n     * mechanism is better explained in render3/interfaces/styling.ts#directives).\n     *\n     * This function will not render any styling values on screen, but is rather designed to\n     * prepare the context for that. `renderStyling` must be called afterwards to render any\n     * styling data that was set in this function (note that `updateClassProp` and\n     * `updateStyleProp` are designed to be run after this function is run).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     */\n    function updateStylingMap(context, classesInput, stylesInput, directiveRef) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        classesInput = classesInput || null;\n        stylesInput = stylesInput || null;\n        var ignoreAllClassUpdates = isMultiValueCacheHit(context, true, directiveIndex, classesInput);\n        var ignoreAllStyleUpdates = isMultiValueCacheHit(context, false, directiveIndex, stylesInput);\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        classesInput =\n            classesInput === NO_CHANGE ? readCachedMapValue(context, true, directiveIndex) : classesInput;\n        stylesInput =\n            stylesInput === NO_CHANGE ? readCachedMapValue(context, false, directiveIndex) : stylesInput;\n        var element = context[0 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput['value'] : stylesInput;\n        var classNames = EMPTY_ARRAY$1;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARRAY$1;\n            }\n        }\n        var multiStylesStartIndex = getMultiStylesStartIndex(context);\n        var multiClassesStartIndex = getMultiClassesStartIndex(context);\n        var multiClassesEndIndex = context.length;\n        if (!ignoreAllStyleUpdates) {\n            var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARRAY$1;\n            var styles = stylesValue || EMPTY_OBJ;\n            var totalNewEntries = patchStylingMapIntoContext(context, directiveIndex, stylesPlayerBuilderIndex, multiStylesStartIndex, multiClassesStartIndex, styleProps, styles, stylesInput, false);\n            if (totalNewEntries) {\n                multiClassesStartIndex += totalNewEntries * 4 /* Size */;\n                multiClassesEndIndex += totalNewEntries * 4 /* Size */;\n            }\n        }\n        if (!ignoreAllClassUpdates) {\n            var classes = (classesValue || EMPTY_OBJ);\n            patchStylingMapIntoContext(context, directiveIndex, classesPlayerBuilderIndex, multiClassesStartIndex, multiClassesEndIndex, classNames, applyAllClasses || classes, classesInput, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * Applies the given multi styling (styles or classes) values to the context.\n     *\n     * The styling algorithm code that applies multi-level styling (things like `[style]` and `[class]`\n     * values) resides here.\n     *\n     * Because this function understands that multiple directives may all write to the `[style]` and\n     * `[class]` bindings (through host bindings), it relies of each directive applying its binding\n     * value in order. This means that a directive like `classADirective` will always fire before\n     * `classBDirective` and therefore its styling values (classes and styles) will always be evaluated\n     * in the same order. Because of this consistent ordering, the first directive has a higher priority\n     * than the second one. It is with this prioritzation mechanism that the styling algorithm knows how\n     * to merge and apply redudant styling properties.\n     *\n     * The function itself applies the key/value entries (or an array of keys) to\n     * the context in the following steps.\n     *\n     * STEP 1:\n     *    First check to see what properties are already set and in use by another directive in the\n     *    context (e.g. `ngClass` set the `width` value and `[style.width]=\"w\"` in a directive is\n     *    attempting to set it as well).\n     *\n     * STEP 2:\n     *    All remaining properties (that were not set prior to this directive) are now updated in\n     *    the context. Any new properties are inserted exactly at their spot in the context and any\n     *    previously set properties are shifted to exactly where the cursor sits while iterating over\n     *    the context. The end result is a balanced context that includes the exact ordering of the\n     *    styling properties/values for the provided input from the directive.\n     *\n     * STEP 3:\n     *    Any unmatched properties in the context that belong to the directive are set to null\n     *\n     * Once the updating phase is done, then the algorithm will decide whether or not to flag the\n     * follow-up directives (the directives that will pass in their styling values) depending on if\n     * the \"shape\" of the multi-value map has changed (either if any keys are removed or added or\n     * if there are any new `null` values). If any follow-up directives are flagged as dirty then the\n     * algorithm will run again for them. Otherwise if the shape did not change then any follow-up\n     * directives will not run (so long as their binding values stay the same).\n     *\n     * @returns the total amount of new slots that were allocated into the context due to new styling\n     *          properties that were detected.\n     */\n    function patchStylingMapIntoContext(context, directiveIndex, playerBuilderIndex, ctxStart, ctxEnd, props, values, cacheValue, entryIsClassBased) {\n        var dirty = false;\n        var cacheIndex = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // the cachedValues array is the registry of all multi style values (map values). Each\n        // value is stored (cached) each time is updated.\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        // this is the index in which this directive has ownership access to write to this\n        // value (anything before is owned by a previous directive that is more important)\n        var ownershipValuesStartIndex = cachedValues[cacheIndex + 1 /* PositionStartOffset */];\n        var existingCachedValue = cachedValues[cacheIndex + 2 /* ValueOffset */];\n        var existingCachedValueCount = cachedValues[cacheIndex + 3 /* ValueCountOffset */];\n        var existingCachedValueIsDirty = cachedValues[cacheIndex + 0 /* DirtyFlagOffset */] === 1;\n        // A shape change means the provided map value has either removed or added new properties\n        // compared to what were in the last time. If a shape change occurs then it means that all\n        // follow-up multi-styling entries are obsolete and will be examined again when CD runs\n        // them. If a shape change has not occurred then there is no reason to check any other\n        // directive values if their identity has not changed. If a previous directive set this\n        // value as dirty (because its own shape changed) then this means that the object has been\n        // offset to a different area in the context. Because its value has been offset then it\n        // can't write to a region that it wrote to before (which may have been apart of another\n        // directive) and therefore its shape changes too.\n        var valuesEntryShapeChange = existingCachedValueIsDirty || ((!existingCachedValue && cacheValue) ? true : false);\n        var totalUniqueValues = 0;\n        var totalNewAllocatedSlots = 0;\n        // this is a trick to avoid building {key:value} map where all the values\n        // are `true` (this happens when a className string is provided instead of a\n        // map as an input value to this styling algorithm)\n        var applyAllProps = values === true;\n        // STEP 1:\n        // loop through the earlier directives and figure out if any properties here will be placed\n        // in their area (this happens when the value is null because the earlier directive erased it).\n        var ctxIndex = ctxStart;\n        var totalRemainingProperties = props.length;\n        while (ctxIndex < ownershipValuesStartIndex) {\n            var currentProp = getProp(context, ctxIndex);\n            if (totalRemainingProperties) {\n                for (var i = 0; i < props.length; i++) {\n                    var mapProp = props[i];\n                    var normalizedProp = mapProp ? (entryIsClassBased ? mapProp : hyphenate(mapProp)) : null;\n                    if (normalizedProp && currentProp === normalizedProp) {\n                        var currentValue = getValue(context, ctxIndex);\n                        var currentDirectiveIndex = getDirectiveIndexFromEntry(context, ctxIndex);\n                        var value = applyAllProps ? true : values[normalizedProp];\n                        var currentFlag = getPointers(context, ctxIndex);\n                        if (hasValueChanged(currentFlag, currentValue, value) &&\n                            allowValueChange(currentValue, value, currentDirectiveIndex, directiveIndex)) {\n                            setValue(context, ctxIndex, value);\n                            setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            if (hasInitialValueChanged(context, currentFlag, value)) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                        props[i] = null;\n                        totalRemainingProperties--;\n                        break;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // STEP 2:\n        // apply the left over properties to the context in the correct order.\n        if (totalRemainingProperties) {\n            var sanitizer = entryIsClassBased ? null : getStyleSanitizer(context, directiveIndex);\n            propertiesLoop: for (var i = 0; i < props.length; i++) {\n                var mapProp = props[i];\n                if (!mapProp) {\n                    // this is an early exit in case a value was already encountered above in the\n                    // previous loop (which means that the property was applied or rejected)\n                    continue;\n                }\n                var value = applyAllProps ? true : values[mapProp];\n                var normalizedProp = entryIsClassBased ? mapProp : hyphenate(mapProp);\n                var isInsideOwnershipArea = ctxIndex >= ownershipValuesStartIndex;\n                for (var j = ctxIndex; j < ctxEnd; j += 4 /* Size */) {\n                    var distantCtxProp = getProp(context, j);\n                    if (distantCtxProp === normalizedProp) {\n                        var distantCtxDirectiveIndex = getDirectiveIndexFromEntry(context, j);\n                        var distantCtxPlayerBuilderIndex = getPlayerBuilderIndex(context, j);\n                        var distantCtxValue = getValue(context, j);\n                        var distantCtxFlag = getPointers(context, j);\n                        if (allowValueChange(distantCtxValue, value, distantCtxDirectiveIndex, directiveIndex)) {\n                            // even if the entry isn't updated (by value or directiveIndex) then\n                            // it should still be moved over to the correct spot in the array so\n                            // the iteration loop is tighter.\n                            if (isInsideOwnershipArea) {\n                                swapMultiContextEntries(context, ctxIndex, j);\n                                totalUniqueValues++;\n                            }\n                            if (hasValueChanged(distantCtxFlag, distantCtxValue, value)) {\n                                if (value === null || value === undefined && value !== distantCtxValue) {\n                                    valuesEntryShapeChange = true;\n                                }\n                                setValue(context, ctxIndex, value);\n                                // SKIP IF INITIAL CHECK\n                                // If the former `value` is `null` then it means that an initial value\n                                // could be being rendered on screen. If that is the case then there is\n                                // no point in updating the value in case it matches. In other words if the\n                                // new value is the exact same as the previously rendered value (which\n                                // happens to be the initial value) then do nothing.\n                                if (distantCtxValue !== null ||\n                                    hasInitialValueChanged(context, distantCtxFlag, value)) {\n                                    setDirty(context, ctxIndex, true);\n                                    dirty = true;\n                                }\n                            }\n                            if (distantCtxDirectiveIndex !== directiveIndex ||\n                                playerBuilderIndex !== distantCtxPlayerBuilderIndex) {\n                                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            }\n                        }\n                        ctxIndex += 4 /* Size */;\n                        continue propertiesLoop;\n                    }\n                }\n                // fallback case ... value not found at all in the context\n                if (value != null) {\n                    valuesEntryShapeChange = true;\n                    totalUniqueValues++;\n                    var flag = prepareInitialFlag(context, normalizedProp, entryIsClassBased, sanitizer) |\n                        1 /* Dirty */;\n                    var insertionIndex = isInsideOwnershipArea ?\n                        ctxIndex :\n                        (ownershipValuesStartIndex + totalNewAllocatedSlots * 4 /* Size */);\n                    insertNewMultiProperty(context, insertionIndex, entryIsClassBased, normalizedProp, flag, value, directiveIndex, playerBuilderIndex);\n                    totalNewAllocatedSlots++;\n                    ctxEnd += 4 /* Size */;\n                    ctxIndex += 4 /* Size */;\n                    dirty = true;\n                }\n            }\n        }\n        // STEP 3:\n        // Remove (nullify) any existing entries in the context that were not apart of the\n        // map input value that was passed into this algorithm for this directive.\n        while (ctxIndex < ctxEnd) {\n            valuesEntryShapeChange = true; // some values are missing\n            var ctxValue = getValue(context, ctxIndex);\n            var ctxFlag = getPointers(context, ctxIndex);\n            var ctxDirective = getDirectiveIndexFromEntry(context, ctxIndex);\n            if (ctxValue != null) {\n                valuesEntryShapeChange = true;\n            }\n            if (hasValueChanged(ctxFlag, ctxValue, null)) {\n                setValue(context, ctxIndex, null);\n                // only if the initial value is falsy then\n                if (hasInitialValueChanged(context, ctxFlag, ctxValue)) {\n                    setDirty(context, ctxIndex, true);\n                    dirty = true;\n                }\n                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // Because the object shape has changed, this means that all follow-up directives will need to\n        // reapply their values into the object. For this to happen, the cached array needs to be updated\n        // with dirty flags so that follow-up calls to `updateStylingMap` will reapply their styling code.\n        // the reapplication of styling code within the context will reshape it and update the offset\n        // values (also follow-up directives can write new values in case earlier directives set anything\n        // to null due to removals or falsy values).\n        valuesEntryShapeChange = valuesEntryShapeChange || existingCachedValueCount !== totalUniqueValues;\n        updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, ownershipValuesStartIndex, ctxEnd, totalUniqueValues, valuesEntryShapeChange);\n        if (dirty) {\n            setContextDirty(context, true);\n            setDirectiveDirty(context, directiveIndex, true);\n        }\n        return totalNewAllocatedSlots;\n    }\n    /**\n     * Sets and resolves a single class value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateClassProp(context, offset, input, directiveRef, forceOverride) {\n        updateSingleStylingValue(context, offset, input, true, directiveRef, forceOverride);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateStyleProp(context, offset, input, directiveRef, forceOverride) {\n        updateSingleStylingValue(context, offset, input, false, directiveRef, forceOverride);\n    }\n    function updateSingleStylingValue(context, offset, input, isClassBased, directiveRef, forceOverride) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            (forceOverride || allowValueChange(currValue, value, currDirective, directiveIndex))) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[0 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setDirectiveDirty(context, directiveIndex, true);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param directiveRef an optional directive that will be used to target which\n     *    styling values are rendered. If left empty, only the bindings that are\n     *    registered on the template will be rendered.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveRef) {\n        var totalPlayersQueued = 0;\n        var targetDirectiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        if (isContextDirty(context) && isDirectiveDirty(context, targetDirectiveIndex)) {\n            var flushPlayerBuilders = context[1 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[0 /* ElementPosition */];\n            var multiStartIndex = getMultiStylesStartIndex(context);\n            var stillDirty = false;\n            for (var i = 9 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var flag = getPointers(context, i);\n                    var directiveIndex = getDirectiveIndexFromEntry(context, i);\n                    if (targetDirectiveIndex !== directiveIndex) {\n                        stillDirty = true;\n                        continue;\n                    }\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex) : null;\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it in case there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    // Note that we ignore class-based deferals because otherwise a class can never\n                    // be removed in the case that it exists as true in the initial classes list...\n                    if (!valueExists(valueToApply, isClassBased)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setDirectiveDirty(context, targetDirectiveIndex, false);\n            setContextDirty(context, stillDirty);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     *\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native.style.setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native.style.removeProperty(prop);\n        }\n    }\n    /**\n     * Adds/removes the provided className value to the provided element.\n     *\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n            // DOMTokenList will throw if we try to add or remove an empty string.\n        }\n        else if (className !== '') {\n            if (add) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    native['classList'].add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    native['classList'].remove(className);\n            }\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[4 /* InitialClassValuesPosition */] :\n            context[3 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 9 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiClassesStartIndex(context) {\n        var classCache = context[6 /* CachedMultiClasses */];\n        return classCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function getMultiStylesStartIndex(context) {\n        var stylesCache = context[7 /* CachedMultiStyles */];\n        return stylesCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[8 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[8 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[8 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 1 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 1 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[1 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[1 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        if (indexA === indexB)\n            return;\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var tmpDirectiveIndex = getDirectiveIndexFromEntry(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = getDirectiveIndexFromEntry(context, indexB);\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, tmpDirectiveIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[4 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasInitialValueChanged(context, flag, newValue) {\n        var initialValue = getInitialValue(context, flag);\n        return !initialValue || hasValueChanged(flag, initialValue, newValue);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getDirectiveIndexFromRegistry(context, directiveRef) {\n        var directiveIndex;\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var index = getDirectiveRegistryValuesIndexOf(dirs, directiveRef);\n        if (index === -1) {\n            // if the directive was not allocated then this means that styling is\n            // being applied in a dynamic way AFTER the element was already instantiated\n            index = dirs.length;\n            directiveIndex = index > 0 ? index / 4 /* Size */ : 0;\n            dirs.push(null, null, null, null);\n            dirs[index + 0 /* DirectiveValueOffset */] = directiveRef;\n            dirs[index + 2 /* DirtyFlagOffset */] = false;\n            dirs[index + 1 /* SinglePropValuesIndexOffset */] = -1;\n            var classesStartIndex = getMultiClassesStartIndex(context) || 9 /* SingleStylesStartPosition */;\n            registerMultiMapEntry(context, directiveIndex, true, context.length);\n            registerMultiMapEntry(context, directiveIndex, false, classesStartIndex);\n        }\n        else {\n            directiveIndex = index > 0 ? index / 4 /* Size */ : 0;\n        }\n        return directiveIndex;\n    }\n    function getDirectiveRegistryValuesIndexOf(directives, directive) {\n        for (var i = 0; i < directives.length; i += 4 /* Size */) {\n            if (directives[i] === directive) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 2 /* KeyValueStartPosition */; i < keyValues.length; i += 3 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[2 /* DirectiveRegistryPosition */][(directiveIndex * 4 /* Size */) +\n            1 /* SinglePropValuesIndexOffset */];\n        var offsets = context[5 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 4 /* Size */ +\n            3 /* StyleSanitizerOffset */] ||\n            dirs[3 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function isDirectiveDirty(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        return dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */];\n    }\n    function setDirectiveDirty(context, directiveIndex, dirtyYes) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */] = dirtyYes;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced in case an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // this decides what to do if and when there is a collision.\n        if (currentValue != null) {\n            if (newValue != null) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value in case it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * Returns the className string of all the initial classes for the element.\n     *\n     * This function is designed to populate and cache all the static class\n     * values into a className string. The caching mechanism works by placing\n     * the completed className string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the className string (e.g. `on active red`)\n     */\n    function getInitialClassNameValue(context) {\n        var initialClassValues = context[4 /* InitialClassValuesPosition */];\n        var className = initialClassValues[1 /* CachedStringValuePosition */];\n        if (className === null) {\n            className = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialClassValues.length; i += 3 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            initialClassValues[1 /* CachedStringValuePosition */] = className;\n        }\n        return className;\n    }\n    /**\n     * Returns the style string of all the initial styles for the element.\n     *\n     * This function is designed to populate and cache all the static style\n     * values into a style string. The caching mechanism works by placing\n     * the completed style string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the style string (e.g. `width:100px;height:200px`)\n     */\n    function getInitialStyleStringValue(context) {\n        var initialStyleValues = context[3 /* InitialStyleValuesPosition */];\n        var styleString = initialStyleValues[1 /* CachedStringValuePosition */];\n        if (styleString === null) {\n            styleString = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialStyleValues.length; i += 3 /* Size */) {\n                var value = initialStyleValues[i + 1];\n                if (value !== null) {\n                    styleString += (styleString.length ? ';' : '') + (initialStyleValues[i] + \":\" + value);\n                }\n            }\n            initialStyleValues[1 /* CachedStringValuePosition */] = styleString;\n        }\n        return styleString;\n    }\n    /**\n     * Returns the current cached mutli-value for a given directiveIndex within the provided context.\n     */\n    function readCachedMapValue(context, entryIsClassBased, directiveIndex) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        return values[index + 2 /* ValueOffset */] || null;\n    }\n    /**\n     * Determines whether the provided multi styling value should be updated or not.\n     *\n     * Because `[style]` and `[class]` bindings rely on an identity change to occur before\n     * applying new values, the styling algorithm may not update an existing entry into\n     * the context if a previous directive's entry changed shape.\n     *\n     * This function will decide whether or not a value should be applied (if there is a\n     * cache miss) to the context based on the following rules:\n     *\n     * - If there is an identity change between the existing value and new value\n     * - If there is no existing value cached (first write)\n     * - If a previous directive flagged the existing cached value as dirty\n     */\n    function isMultiValueCacheHit(context, entryIsClassBased, directiveIndex, newValue) {\n        var indexOfCachedValues = entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */;\n        var cachedValues = context[indexOfCachedValues];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        if (cachedValues[index + 0 /* DirtyFlagOffset */])\n            return false;\n        return newValue === NO_CHANGE ||\n            readCachedMapValue(context, entryIsClassBased, directiveIndex) === newValue;\n    }\n    /**\n     * Updates the cached status of a multi-styling value in the context.\n     *\n     * The cached map array (which exists in the context) contains a manifest of\n     * each multi-styling entry (`[style]` and `[class]` entries) for the template\n     * as well as all directives.\n     *\n     * This function will update the cached status of the provided multi-style\n     * entry within the cache.\n     *\n     * When called, this function will update the following information:\n     * - The actual cached value (the raw value that was passed into `[style]` or `[class]`)\n     * - The total amount of unique styling entries that this value has written into the context\n     * - The exact position of where the multi styling entries start in the context for this binding\n     * - The dirty flag will be set to true\n     *\n     * If the `dirtyFutureValues` param is provided then it will update all future entries (binding\n     * entries that exist as apart of other directives) to be dirty as well. This will force the\n     * styling algorithm to reapply those values once change detection checks them (which will in\n     * turn cause the styling context to update itself and the correct styling values will be\n     * rendered on screen).\n     */\n    function updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, startPosition, endPosition, totalValues, dirtyFutureValues) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // in the event that this is true we assume that future values are dirty and therefore\n        // will be checked again in the next CD cycle\n        if (dirtyFutureValues) {\n            var nextStartPosition = startPosition + totalValues * 4 /* Size */;\n            for (var i = index + 4 /* Size */; i < values.length; i += 4 /* Size */) {\n                values[i + 1 /* PositionStartOffset */] = nextStartPosition;\n                values[i + 0 /* DirtyFlagOffset */] = 1;\n            }\n        }\n        values[index + 0 /* DirtyFlagOffset */] = 0;\n        values[index + 1 /* PositionStartOffset */] = startPosition;\n        values[index + 2 /* ValueOffset */] = cacheValue;\n        values[index + 3 /* ValueCountOffset */] = totalValues;\n        // the code below counts the total amount of styling values that exist in\n        // the context up until this directive. This value will be later used to\n        // update the cached value map's total counter value.\n        var totalStylingEntries = totalValues;\n        for (var i = 1 /* ValuesStartPosition */; i < index; i += 4 /* Size */) {\n            totalStylingEntries += values[i + 3 /* ValueCountOffset */];\n        }\n        // because style values come before class values in the context this means\n        // that if any new values were inserted then the cache values array for\n        // classes is out of sync. The code below will update the offsets to point\n        // to their new values.\n        if (!entryIsClassBased) {\n            var classCache = context[6 /* CachedMultiClasses */];\n            var classesStartPosition = classCache[1 /* ValuesStartPosition */ +\n                1 /* PositionStartOffset */];\n            var diffInStartPosition = endPosition - classesStartPosition;\n            for (var i = 1 /* ValuesStartPosition */; i < classCache.length; i += 4 /* Size */) {\n                classCache[i + 1 /* PositionStartOffset */] += diffInStartPosition;\n            }\n        }\n        values[0 /* EntriesCountPosition */] = totalStylingEntries;\n    }\n    function hyphenateEntries(entries) {\n        var newEntries = [];\n        for (var i = 0; i < entries.length; i++) {\n            newEntries.push(hyphenate(entries[i]));\n        }\n        return newEntries;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (match) { return match.charAt(0) + \"-\" + match.charAt(1).toLowerCase(); });\n    }\n    function registerMultiMapEntry(context, directiveIndex, entryIsClassBased, startPosition, count) {\n        if (count === void 0) { count = 0; }\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        if (directiveIndex > 0) {\n            var limit = 1 /* ValuesStartPosition */ +\n                (directiveIndex * 4 /* Size */);\n            while (cachedValues.length < limit) {\n                // this means that ONLY directive class styling (like ngClass) was used\n                // therefore the root directive will still need to be filled in as well\n                // as any other directive spaces in case they only used static values\n                cachedValues.push(0, startPosition, null, 0);\n            }\n        }\n        cachedValues.push(0, startPosition, null, count);\n    }\n    /**\n     * Inserts or updates an existing entry in the provided `staticStyles` collection.\n     *\n     * @param index the index representing an existing styling entry in the collection:\n     *  if provided (numeric): then it will update the existing entry at the given position\n     *  if null: then it will insert a new entry within the collection\n     * @param staticStyles a collection of style or class entries where the value will\n     *  be inserted or patched\n     * @param prop the property value of the entry (e.g. `width` (styles) or `foo` (classes))\n     * @param value the styling value of the entry (e.g. `absolute` (styles) or `true` (classes))\n     * @param directiveOwnerIndex the directive owner index value of the styling source responsible\n     *        for these styles (see `interfaces/styling.ts#directives` for more info)\n     * @returns the index of the updated or new entry within the collection\n     */\n    function addOrUpdateStaticStyle(index, staticStyles, prop, value, directiveOwnerIndex) {\n        if (index === null) {\n            index = staticStyles.length;\n            staticStyles.push(null, null, null);\n            staticStyles[index + 0 /* PropOffset */] = prop;\n        }\n        staticStyles[index + 1 /* ValueOffset */] = value;\n        staticStyles[index + 2 /* DirectiveOwnerOffset */] = directiveOwnerIndex;\n        return index;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.stylingTemplate) {\n                    if (!isCssClassMatching(readClassValueFromTNode(tNode), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    function readClassValueFromTNode(tNode) {\n        // comparing against CSS class values is complex because the compiler doesn't place them as\n        // regular attributes when an element is created. Instead, the classes (and styles for\n        // that matter) are placed in a special styling context that is used for resolving all\n        // class/style values across static attributes, [style]/[class] and [style.prop]/[class.name]\n        // bindings. Therefore if and when the styling context exists then the class values are to be\n        // extracted by the context helper code below...\n        return tNode.stylingTemplate ? getInitialClassNameValue(tNode.stylingTemplate) : '';\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * =========================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes\n     * =========================================================================================\n     * Inline + Projection     | YES               | YES                 | NO\n     * -----------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES\n     * -----------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO\n     * -----------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO\n     * =========================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching projection selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be\n     * compared to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingProjectionSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null &&\n                    isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true)) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function applyOnCreateInstructions(tNode) {\n        // there may be some instructions that need to run in a specific\n        // order because the CREATE block in a directive runs before the\n        // CREATE block in a template. To work around this instructions\n        // can get access to the function array below and defer any code\n        // to run after the element is created.\n        var fns;\n        if (fns = tNode.onElementCreationFns) {\n            for (var i = 0; i < fns.length; i++) {\n                fns[i]();\n            }\n            tNode.onElementCreationFns = null;\n        }\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputAliases mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        var creationMode = isCreationMode(lView);\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        // Resetting the bindingIndex of the current LView as the next steps may trigger change detection.\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!creationMode) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executePreOrderHooks(lView, tView, checkNoChangesMode, undefined);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView, lView);\n            resetPreOrderHookFlags(lView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode, 1 /* AfterContentInitHooksToBeRun */, undefined);\n            setHostBindings(tView, lView);\n        }\n        // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n        // content queries are resolved during change detection (i.e. update mode), after embedded\n        // views are refreshed (see block above).\n        if (creationMode && tView.staticContentQueries) {\n            refreshContentQueries(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                        setActiveHost(hostCtx, currentElementIndex);\n                        instruction(2 /* Update */, hostCtx, currentElementIndex);\n                        setActiveHost(null);\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView, lView) {\n        if (tView.contentQueries != null) {\n            setCurrentQueryIndex(0);\n            for (var i = 0; i < tView.contentQueries.length; i++) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                ngDevMode &&\n                    assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var parent_1 = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n            // Parents cannot cross component boundaries because components will be used in multiple places,\n            // so it's only set if the view is the same.\n            var parentInSameView = parent_1 && parent_1 !== lView[T_HOST];\n            var tParentNode = parentInSameView ? parent_1 : null;\n            tNode = tView.data[adjustedIndex] = createTNode(tParentNode, type, adjustedIndex, name, attrs);\n        }\n        // Now link ourselves into the tree.\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            for (var i = 0; i < numSlotsToAlloc; i++) {\n                tView.blueprint.push(null);\n                tView.data.push(null);\n                view.push(null);\n            }\n            // We should only increment the expando start index if there aren't already directives\n            // and injectors saved in the \"expando\" section\n            if (!tView.expandoInstructions) {\n                tView.expandoStartIndex += numSlotsToAlloc;\n            }\n            else {\n                // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                // bindings know that they should skip x slots\n                tView.expandoInstructions.push(numSlotsToAlloc);\n            }\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 16 /* CheckAlways */, null, null);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        assignTViewNodeToLView(tView, null, -1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        var oldView;\n        if (viewToRender[FLAGS] & 512 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[T_HOST]);\n                resetPreOrderHookFlags(viewToRender);\n                namespaceHTML();\n                tView.template(getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                // creation mode pass\n                if (templateFn) {\n                    namespaceHTML();\n                    templateFn(1 /* Create */, context);\n                }\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~4 /* CreationMode */;\n            }\n            // update mode pass\n            resetPreOrderHookFlags(hostView);\n            templateFn && templateFn(2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        if (attrs) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            setNodeStylingTemplate(tView, tNode, attrs, 0);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Appropriately sets `stylingTemplate` on a TNode\n     *\n     * Does not apply styles to DOM nodes\n     *\n     * @param tNode The node whose `stylingTemplate` to set\n     * @param attrs The attribute array source to set the attributes from\n     * @param attrsStartIndex Optional start index to start processing the `attrs` from\n     */\n    function setNodeStylingTemplate(tView, tNode, attrs, attrsStartIndex) {\n        if (tView.firstTemplatePass && !tNode.stylingTemplate) {\n            var stylingAttrsStartIndex = attrsStylingIndexOf(attrs, attrsStartIndex);\n            if (stylingAttrsStartIndex >= 0) {\n                tNode.stylingTemplate = initializeStaticContext(attrs, stylingAttrsStartIndex);\n            }\n        }\n    }\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        registerPostOrderHooks(tView, previousOrParentTNode);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        var renderer = lView[RENDERER];\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        var initialStylesIndex = 0;\n        var initialClassesIndex = 0;\n        if (attrs) {\n            var lastAttrIndex = setUpAttributes(native, attrs);\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the styling\n            // template is first allocated (which happens when the very first style/class binding\n            // value is evaluated). When the template is allocated (when it turns into a context)\n            // then the styling template is locked and cannot be further extended (it can only be\n            // instantiated into a context per element)\n            setNodeStylingTemplate(tView, tNode, attrs, lastAttrIndex);\n            if (tNode.stylingTemplate) {\n                // the initial style/class values are rendered immediately after having been\n                // initialized into the context so the element styling is ready when directives\n                // are initialized (since they may read style/class values in their constructor)\n                initialStylesIndex = renderInitialStyles(native, tNode.stylingTemplate, renderer);\n                initialClassesIndex = renderInitialClasses(native, tNode.stylingTemplate, renderer);\n            }\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            if (inputData && inputData.hasOwnProperty('style')) {\n                tNode.flags |= 16 /* hasStyleInput */;\n            }\n        }\n        // we render the styling again below in case any directives have set any `style` and/or\n        // `class` host attribute values...\n        if (tNode.stylingTemplate) {\n            renderInitialClasses(native, tNode.stylingTemplate, renderer, initialClassesIndex);\n            renderInitialStyles(native, tNode.stylingTemplate, renderer, initialStylesIndex);\n        }\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, findDirectiveMatches(tView, lView, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, lView, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, lView, previousOrParentTNode);\n        saveResolvedLocalsInData(lView, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @param viewQuery View query that should be saved on TView\n     * @param schemas Schemas that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData = createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery, schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice().fill(null, bindingStartIndex),\n            bindingStartIndex: bindingStartIndex,\n            viewQueryStartIndex: initialViewLength,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            staticViewQueries: false,\n            staticContentQueries: false,\n            preOrderHooks: null,\n            preOrderCheckHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n            schemas: schemas,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + renderStringify(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function listener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n     * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n     * in the component's renderer. Normally all host listeners are evaluated with the\n     * parent component's renderer, but, in the case of animation @triggers, they need\n     * to be evaluated with the sub component's renderer (because that's where the\n     * animation triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `listener`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function componentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : {};\n            var target = resolved.target || native;\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var useCaptureOrSubIdx = useCapture;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // The first argument of `listen` function in Procedural Renderer is:\n                // - either a target name (as a string) in case of global target (window, document, body)\n                // - or element reference (in all other cases)\n                listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                lCleanup.push(listenerFn, cleanupFn);\n                useCaptureOrSubIdx = lCleanupIndex + 1;\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                lCleanup.push(listenerFn);\n            }\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCaptureOrSubIdx);\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        previousOrParentTNode.onElementCreationFns && applyOnCreateInstructions(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        registerPostOrderHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        if (hasClassInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n        }\n        if (hasStyleInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['style'], getInitialStyleStringValue(stylingContext));\n        }\n    }\n    /**\n     * Selects an index of an item to act on and flushes lifecycle hooks up to this point\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n      *  if (rf & 1) {\n      *    element(0, 'div');\n      *  }\n      *  if (rf & 2) {\n      *    select(0); // Select the <div/> created above.\n      *    property('title', 'test');\n      *  }\n      * }\n      * ```\n      * @param index the index of the item to act on with the following instructions\n      */\n    function select(index) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode &&\n            assertLessThan(index, getLView().length - HEADER_OFFSET, 'Should be within range for the view data');\n        var lView = getLView();\n        executePreOrderHooks(lView, lView[TVIEW], getCheckNoChangesMode(), index);\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     */\n    function elementAttribute(index, name, value, sanitizer, namespace) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && validateAgainstEventAttributes(name);\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element_1 = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name, namespace) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var tNode = getTNode(index, lView);\n                var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setAttribute(element_1, name, strValue, namespace);\n                }\n                else {\n                    namespace ? element_1.setAttributeNS(namespace, name, strValue) :\n                        element_1.setAttribute(name, strValue);\n                }\n            }\n        }\n    }\n    /**\n     * **TODO: Remove this function after `property` is in use**\n     * Update a property on an element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function elementProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function componentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     */\n    var ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = ATTR_TO_PROP[propName] || propName;\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                validateAgainstUnknownProperties(lView, element, propName, tNode);\n                ngDevMode.rendererSetProperty++;\n            }\n            savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n    }\n    function validateAgainstUnknownProperties(hostView, element, propName, tNode) {\n        // If the tag matches any of the schemas we shouldn't throw.\n        if (matchingSchemas(hostView, tNode.tagName)) {\n            return;\n        }\n        // If prop is not a known property of the HTML element...\n        if (!(propName in element) &&\n            // and we are in a browser context... (web worker nodes should be skipped)\n            typeof Node === 'function' && element instanceof Node &&\n            // and isn't a synthetic animation property...\n            propName[0] !== ANIMATION_PROP_PREFIX) {\n            // ... it is probably a user error and we should throw.\n            throw new Error(\"Template error: Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n        }\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Stores debugging data for this property binding on first template pass.\n     * This enables features like DebugElement.properties.\n     */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            propertyMetadataStartIndex: -1,\n            propertyMetadataEndIndex: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: null,\n            next: null,\n            projectionNext: null,\n            child: null,\n            parent: tParent,\n            stylingTemplate: null,\n            projection: null,\n            onElementCreationFns: null,\n        };\n    }\n    function setNgReflectProperties(lView, element, type, inputs, value) {\n        var _a;\n        for (var i = 0; i < inputs.length; i += 3) {\n            var renderer = lView[RENDERER];\n            var attrName = normalizeDebugBindingName(inputs[i + 2]);\n            var debugValue = normalizeDebugBindingValue(value);\n            if (type === 3 /* Element */) {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n            else if (value !== undefined) {\n                var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setValue(element, value_1);\n                }\n                else {\n                    element.textContent = value_1;\n                }\n            }\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNodeFlags node flags\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @publicApi\n     */\n    function elementHostAttrs(attrs) {\n        var tNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var native = getNativeByTNode(tNode, lView);\n        var lastAttrIndex = setUpAttributes(native, attrs);\n        var stylingAttrsStartIndex = attrsStylingIndexOf(attrs, lastAttrIndex);\n        if (stylingAttrsStartIndex >= 0) {\n            var directive = getActiveHostContext();\n            if (tNode.stylingTemplate) {\n                patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, stylingAttrsStartIndex, directive);\n            }\n            else {\n                tNode.stylingTemplate =\n                    initializeStaticContext(attrs, stylingAttrsStartIndex, directive);\n            }\n        }\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, renderStringify(value)) :\n                element_2.textContent = renderStringify(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = viewData[i];\n            if (def.hostBindings) {\n                invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        setActiveHost(directive, elementIndex);\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setActiveHost(null);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, previousOrParentTNode);\n        }\n        if (viewData[TVIEW].firstTemplatePass && def.contentQueries) {\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        var tView = getLView()[TVIEW];\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n    */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, lView[previousOrParentTNode.index], previousOrParentTNode, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[T_HOST] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[previousOrParentTNode.index] = componentView;\n        if (lView[TVIEW].firstTemplatePass) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        var lContainer = [\n            hostNative,\n            true,\n            isForViewContainerRef ? -1 : 0,\n            currentView,\n            null,\n            null,\n            tNode,\n            native,\n            [],\n        ];\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        addTContainerToQueries(lView, tContainerNode);\n        attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n        registerPostOrderHooks(tView, tContainerNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        var lView = getLView();\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        addTContainerToQueries(lView, tNode);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] =\n            createLContainer(lView[adjustedIndex], lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Reporting a TContainer node queries is a 2-step process as we need to:\n     * - check if the container node itself is matching (query might match a <ng-template> node);\n     * - prepare room for nodes from views that might be created based on the TemplateRef linked to this\n     * container.\n     *\n     * Those 2 operations need to happen in the specific order (match the container node itself, then\n     * prepare space for nodes from views).\n     */\n    function addTContainerToQueries(lView, tContainerNode) {\n        var queries = lView[QUERIES];\n        if (queries) {\n            queries.addNode(tContainerNode);\n            var lContainer = lView[tContainerNode.index];\n            lContainer[QUERIES] = queries.container();\n        }\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executePreOrderHooks(lView, tView, getCheckNoChangesMode(), undefined);\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = lView[CHILD_HEAD]; current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[T_HOST];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        resetPreOrderHookFlags(lView);\n        refreshDescendantViews(lView); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveView(lContainer[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttachedToChangeDetector(hostView) &&\n            hostView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var projectionHeads = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ?\n                    matchingProjectionSelectorIndex(componentChild, selectors, textSelectors) :\n                    0;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].projectionNext = componentChild;\n                }\n                else {\n                    projectionHeads[bucketIndex] = componentChild;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        appendProjectedNodes(lView, tProjectionNode, selectorIndex, findComponentView(lView));\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out of\n        // order, the change detection will run out of order, as the act of retrieving the the LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            try {\n                var result = listenerFn(e);\n                if (wrapWithPreventDefault && result === false) {\n                    e.preventDefault();\n                    // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                    e.returnValue = false;\n                }\n                return result;\n            }\n            catch (error) {\n                handleError(lView, error);\n            }\n        };\n    }\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_2 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_2) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_2;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            if (isCreationMode(view)) {\n                checkView(view, context); // creation mode pass\n            }\n            checkView(view, context); // update mode pass\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var templateFn = hostTView.template;\n        var creationMode = isCreationMode(hostView);\n        try {\n            resetPreOrderHookFlags(hostView);\n            namespaceHTML();\n            creationMode && executeViewQueryFn(1 /* Create */, hostTView, component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            // Only check view queries again in creation mode if there are static view queries\n            if (!creationMode || hostTView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, hostTView, component);\n            }\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function executeViewQueryFn(flags, tView, component) {\n        var viewQuery = tView.viewQuery;\n        if (viewQuery) {\n            setCurrentQueryIndex(tView.viewQueryStartIndex);\n            viewQuery(flags, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     */\n    function allocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            lView[TVIEW].data[bindingIndex] = i0;\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n            tData[bindingIndex + 6] = i6;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(getLView(), index);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return getLView();\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n\n    /*\n     * The contents of this file include the instructions for all styling-related\n     * operations in Angular.\n     *\n     * The instructions present in this file are:\n     *\n     * Template level styling instructions:\n     * - elementStyling\n     * - elementStylingMap\n     * - elementStyleProp\n     * - elementClassProp\n     * - elementStylingApply\n     *\n     * Host bindings level styling instructions:\n     * - elementHostStyling\n     * - elementHostStylingMap\n     * - elementHostStyleProp\n     * - elementHostClassProp\n     * - elementHostStylingApply\n     */\n    /**\n     * Allocates style and class binding properties on the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note that this is only used\n     * for binding values (see `elementStart` to learn how to assign static styling\n     * values to an element).\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementClassProp` instruction refers to the class name by index in\n     *        this array (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementStyleProp` instruction refers to the class name by index in\n     *        this array (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        style values that are applied to the element (during rendering).\n     *\n     * @publicApi\n     */\n    function elementStyling(classBindingNames, styleBindingNames, styleSanitizer) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        // calling the function below ensures that the template's binding values\n        // are applied as the first set of bindings into the context. If any other\n        // styling bindings are set on the same element (by directives and/or\n        // components) then they will be applied at the end of the `elementEnd`\n        // instruction (because directives are created first before styling is\n        // executed for a new element).\n        initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, null);\n    }\n    /**\n     * Allocates style and class binding properties on the host element during creation mode\n     * within the host bindings function of a directive or component.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class host bindings on the host element of a directive or\n     * component. Note that this is only used for binding values (see `elementHostAttrs`\n     * to learn how to assign static styling values to the host element).\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementHostClassProp` instruction refers to the class name by index in\n     *        this array (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementHostStyleProp` instruction refers to the class name by index in\n     *        this array (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        style values that are applied to the element (during rendering).\n     *        Note that the sanitizer instance itself is tied to the provided `directive` and\n     *        will not be used if the same property is assigned in another directive or\n     *        on the element directly.\n     *\n     * @publicApi\n     */\n    function elementHostStyling(classBindingNames, styleBindingNames, styleSanitizer) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        var directive = getActiveHostContext();\n        // despite the binding being applied in a queue (below), the allocation\n        // of the directive into the context happens right away. The reason for\n        // this is to retain the ordering of the directives (which is important\n        // for the prioritization of bindings).\n        allocateDirectiveIntoContext(tNode.stylingTemplate, directive);\n        var fns = tNode.onElementCreationFns = tNode.onElementCreationFns || [];\n        fns.push(function () { return initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directive); });\n    }\n    function initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directive) {\n        updateContextWithBindings(tNode.stylingTemplate, directive || null, classBindingNames, styleBindingNames, styleSanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStylingMap` or any static styles that are\n     * present from when the element was created with `elementStyling`).\n     *\n     * Note that the styling element is updated as part of `elementStylingApply`.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementStyling`.\n     * @param value New value to write (falsy to remove). Note that if a directive also\n     *        attempts to write to the same binding value (via `elementHostStyleProp`)\n     *        then it will only be able to do so if the binding value assigned via\n     *        `elementStyleProp` is falsy (or doesn't exist at all).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param forceOverride Whether or not to update the styling value immediately\n     *        (despite the other bindings possibly having priority)\n     *\n     * @publicApi\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, forceOverride) {\n        elementStylePropInternal(null, index, styleIndex, value, suffix, forceOverride);\n    }\n    /**\n     * Update a host style binding value on the host element within a component/directive.\n     *\n     * If the style value is falsy then it will be removed from the host element\n     * (or assigned a different value depending if there are any styles placed\n     * on the same element with `elementHostStylingMap` or any static styles that\n     * are present from when the element was patched with `elementHostStyling`).\n     *\n     * Note that the styling applied to the host element once\n     * `elementHostStylingApply` is called.\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementHostStyling`.\n     * @param value New value to write (falsy to remove). The value may or may not\n     *        be applied to the element depending on the template/component/directive\n     *        prioritization (see `interfaces/styling.ts`)\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param forceOverride Whether or not to update the styling value immediately\n     *        (despite the other bindings possibly having priority)\n     *\n     * @publicApi\n     */\n    function elementHostStyleProp(styleIndex, value, suffix, forceOverride) {\n        elementStylePropInternal(getActiveHostContext(), getActiveHostElementIndex(), styleIndex, value, suffix, forceOverride);\n    }\n    function elementStylePropInternal(directive, index, styleIndex, value, suffix, forceOverride) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd, directive, forceOverride);\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `elementStyling` within the creation block.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementStyling` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param forceOverride Whether or not this value will be applied regardless\n     *        of where it is being set within the styling priority structure.\n     *\n     * @publicApi\n     */\n    function elementClassProp(index, classIndex, value, forceOverride) {\n        elementClassPropInternal(null, index, classIndex, value, forceOverride);\n    }\n    /**\n     * Update a class host binding for a directive's/component's host element within\n     * the host bindings function.\n     *\n     * This instruction is meant to handle the `@HostBinding('class.foo')` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `elementHostStyling` within the creation block.\n     *\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementHostStlying` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param forceOverride Whether or not this value will be applied regardless\n     *        of where it is being set within the stylings priority structure.\n     *\n     * @publicApi\n     */\n    function elementHostClassProp(classIndex, value, forceOverride) {\n        elementClassPropInternal(getActiveHostContext(), getActiveHostElementIndex(), classIndex, value, forceOverride);\n    }\n    function elementClassPropInternal(directive, index, classIndex, value, forceOverride) {\n        var input = (value instanceof BoundPlayerFactory) ?\n            value :\n            booleanOrNull(value);\n        updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, input, directive, forceOverride);\n    }\n    function booleanOrNull(value) {\n        if (typeof value === 'boolean')\n            return value;\n        return value ? true : null;\n    }\n    /**\n     * Update style and/or class bindings using object literals on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` and `[class]=\"exp\"` template\n     * bindings. When styles/classes are applied to the element they will then be updated with\n     * respect to any styles/classes set with `elementStyleProp` or `elementClassProp`. If any\n     * styles or classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `elementStylingApply` is called.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * @publicApi\n     */\n    function elementStylingMap(index, classes, styles) {\n        elementStylingMapInternal(null, index, classes, styles);\n    }\n    /**\n     * Update style and/or class host bindings using object literals on an element within the host\n     * bindings function for a directive/component.\n     *\n     * This instruction is meant to apply styling via the `@HostBinding('style')` and\n     * `@HostBinding('class')` bindings for a component's or directive's host element.\n     * When styles/classes are applied to the host element they will then be updated\n     * with respect to any styles/classes set with `elementHostStyleProp` or\n     * `elementHostClassProp`. If any styles or classes are set to falsy then they\n     * will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until\n     * `elementHostStylingApply` is called.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * @publicApi\n     */\n    function elementHostStylingMap(classes, styles) {\n        elementStylingMapInternal(getActiveHostContext(), getActiveHostElementIndex(), classes, styles);\n    }\n    function elementStylingMapInternal(directive, index, classes, styles) {\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!directive) {\n            if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n                var initialClasses = getInitialClassNameValue(stylingContext);\n                var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + forceClassesAsString(classes);\n                setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n                classes = NO_CHANGE;\n            }\n            if (hasStyleInput(tNode) && styles !== NO_CHANGE) {\n                var initialStyles = getInitialClassNameValue(stylingContext);\n                var styleInputVal = (initialStyles.length ? (initialStyles + ' ') : '') + forceStylesAsString(styles);\n                setInputsForProperty(lView, tNode.inputs['style'], styleInputVal);\n                styles = NO_CHANGE;\n            }\n        }\n        updateStylingMap(stylingContext, classes, styles, directive);\n    }\n    /**\n     * Apply all style and class binding values to the element.\n     *\n     * This instruction is meant to be run after `elementStylingMap`, `elementStyleProp`\n     * or `elementClassProp` instructions have been run and will only apply styling to\n     * the element if any styling bindings have been updated.\n     *\n     * @param index Index of the element's with which styling is associated.\n     *\n     * @publicApi\n     */\n    function elementStylingApply(index) {\n        elementStylingApplyInternal(null, index);\n    }\n    /**\n     * Apply all style and class host binding values to the element.\n     *\n     * This instruction is meant to be run after `elementHostStylingMap`,\n     * `elementHostStyleProp` or `elementHostClassProp` instructions have\n     * been run and will only apply styling to the host element if any\n     * styling bindings have been updated.\n     *\n     * @publicApi\n     */\n    function elementHostStylingApply() {\n        elementStylingApplyInternal(getActiveHostContext(), getActiveHostElementIndex());\n    }\n    function elementStylingApplyInternal(directive, index) {\n        var lView = getLView();\n        var isFirstRender = (lView[FLAGS] & 8 /* FirstLViewPass */) !== 0;\n        var totalPlayersQueued = renderStyling(getStylingContext(index + HEADER_OFFSET, lView), lView[RENDERER], lView, isFirstRender, null, null, directive);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element, context);\n        var rootContext = getRootContext(lView);\n        addPlayerInternal(playerContext, rootContext, element, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + renderStringify(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            addToViewTree(rootView, componentView);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~4 /* CreationMode */;\n            resetPreOrderHookFlags(rootView);\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            rootTNode.onElementCreationFns && applyOnCreateInstructions(rootTNode);\n        }\n        if (rootTNode.stylingTemplate) {\n            var native = componentView[HOST];\n            renderInitialClasses(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n            renderInitialStyles(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            superHostBindings_1(rf, ctx, elementIndex);\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                var prevViewQuery_1 = definition.viewQuery;\n                var superViewQuery_1 = superDef.viewQuery;\n                if (superViewQuery_1) {\n                    if (prevViewQuery_1) {\n                        definition.viewQuery = function (rf, ctx) {\n                            superViewQuery_1(rf, ctx);\n                            prevViewQuery_1(rf, ctx);\n                        };\n                    }\n                    else {\n                        definition.viewQuery = superViewQuery_1;\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (rf, ctx, directiveIndex) {\n                            superContentQueries_1(rf, ctx, directiveIndex);\n                            prevContentQueries_1(rf, ctx, directiveIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        NgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            _loop_1();\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY$1) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$1 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$1 === undefined) {\n            NULL_INJECTOR$1 = new NullInjector();\n        }\n        return NULL_INJECTOR$1;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            if (source === void 0) { source = null; }\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (def instanceof Array ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$2;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Cannot instantiate cyclic dependency! \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            else if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            else if (token instanceof Function) {\n                var paramLength = token.length;\n                if (paramLength > 0) {\n                    var args = new Array(paramLength).fill('?');\n                    throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n                }\n                return function () { return new token(); };\n            }\n            throw new Error('unreachable');\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    var ngModuleDetail = '';\n                    if (ngModuleType && providers) {\n                        var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n                        ngModuleDetail =\n                            \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n                    }\n                    throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE$2 in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    var tView = lView[TVIEW];\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNode(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _hostLContainer, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._hostLContainer = _hostLContainer;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._hostLContainer[QUERIES], this._injectorIndex);\n                    if (container) {\n                        insertView(lView, container, index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, hostContainer, hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */ ||\n            hostTNode.type === 4 /* ElementContainer */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('8.0.0-beta.10+66.sha-6759aa6.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode, text) { this.delegate.setValue(renderNode, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            // The component definition does not include the wildcard ('*') selector in its list.\n            // It is implicitly expected as the first item in the projectable nodes array.\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? __spread(['*'], componentDef.ngContentSelectors) : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            !this.hostView.destroyed && this.hostView.destroy();\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        allocExpando(viewData, i18nVarsCount);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                if (!matches_1[content]) {\n                    var placeholders_1 = [];\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders_1.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders_1;\n                }\n                if (!matches_1[content].length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var placeholders = matches_1[content];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n            // verify that we injected all values\n            var hasUnmatchedValues = Object.keys(matches_1).some(function (key) { return !!matches_1[key].length; });\n            if (hasUnmatchedValues) {\n                throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches_1));\n            }\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var tNode = createNodeAtIndex(index, type, native, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode = createDynamicNodeAtIndex(textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        // We determine whether a class has its own metadata by taking the metadata from the parent\n        // constructor and checking whether it's the same as the subclass metadata below. We can't use\n        // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n        // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n        var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n        var parentConstructor = parentPrototype && parentPrototype.constructor;\n        if (decorators !== null) {\n            if (clazz.decorators !== undefined &&\n                (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined &&\n                (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The results tree to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            add(this.shallow, tNode);\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            query.containerValues.splice(index, 0, query.values);\n            // mark a query as dirty only when inserted view had matching modes\n            if (query.values.length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function assertViewQueryhasPointerToDeclarationContainer(query) {\n        assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var lView = getLView();\n        var queryList = new QueryList();\n        var queries = lView[QUERIES] || (lView[QUERIES] = new LQueries_(null, null, null));\n        queryList._valuesTree = [];\n        queryList._static = false;\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        var creationMode = isCreationMode();\n        // if creation mode and static or update mode and not static\n        if (queryList.dirty && creationMode === queryListImpl._static) {\n            queryList.reset(queryListImpl._valuesTree || []);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     */\n    function staticViewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var queryList = viewQuery(predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticViewQueries) {\n            tView.staticViewQueries = true;\n        }\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function viewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n        }\n        var index = getCurrentQueryIndex();\n        var viewQuery = query(predicate, descend, read);\n        store(index - HEADER_OFFSET, viewQuery);\n        setCurrentQueryIndex(index + 1);\n        return viewQuery;\n    }\n    /**\n    * Loads current View Query and moves the pointer/index to the next View Query in LView.\n    */\n    function loadViewQuery() {\n        var index = getCurrentQueryIndex();\n        setCurrentQueryIndex(index + 1);\n        return load(index - HEADER_OFFSET);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function contentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var contentQuery = query(predicate, descend, read);\n        (lView[CONTENT_QUERIES] || (lView[CONTENT_QUERIES] = [])).push(contentQuery);\n        if (tView.firstTemplatePass) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 1] : -1;\n            if (directiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(directiveIndex);\n            }\n        }\n        return contentQuery;\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function staticContentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var queryList = contentQuery(directiveIndex, predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticContentQueries) {\n            tView.staticContentQueries = true;\n        }\n    }\n    function loadContentQuery() {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        var index = getCurrentQueryIndex();\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], index);\n        setCurrentQueryIndex(index + 1);\n        return lView[CONTENT_QUERIES][index];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf$1,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵallocHostVars': allocHostVars,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵcomponentHostSyntheticProperty': componentHostSyntheticProperty,\n        'ɵcomponentHostSyntheticListener': componentHostSyntheticListener,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵviewQuery': viewQuery,\n        'ɵstaticViewQuery': staticViewQuery,\n        'ɵstaticContentQuery': staticContentQuery,\n        'ɵloadViewQuery': loadViewQuery,\n        'ɵcontentQuery': contentQuery,\n        'ɵloadContentQuery': loadContentQuery,\n        'ɵreference': reference,\n        'ɵelementHostAttrs': elementHostAttrs,\n        'ɵelementStyling': elementStyling,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵelementClassProp': elementClassProp,\n        'ɵelementHostStyling': elementHostStyling,\n        'ɵelementHostStylingMap': elementHostStylingMap,\n        'ɵelementHostStyleProp': elementHostStyleProp,\n        'ɵelementHostStylingApply': elementHostStylingApply,\n        'ɵelementHostClassProp': elementHostClassProp,\n        'ɵselect': select,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵresolveWindow': resolveWindow,\n        'ɵresolveDocument': resolveDocument,\n        'ɵresolveBody': resolveBody,\n        'ɵsetComponentScope': setComponentScope,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl,\n        'ɵsanitizeUrlOrResourceUrl': sanitizeUrlOrResourceUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing, ngModuleType);\n        modules.set(id, ngModuleType);\n    }\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = modules.get(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = modules.get(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__PRE_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$4, resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$4, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$4, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten$1(ngModule.schemas) : null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        if (ngModule.id) {\n            registerNgModuleType(ngModule.id, moduleType);\n        }\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten$1(imports.map(computeCombinedExports), resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(verifyDeclarationIsUnique);\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten$1(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyCorrectBootstrapType);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + renderStringify(type) + \"' declared by the module '\" + renderStringify(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + renderStringify(type) + \" from \" + renderStringify(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(renderStringify).sort();\n                errors.push(\"Type \" + renderStringify(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + renderStringify(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + renderStringify(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + renderStringify(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(renderStringify(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten$1(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.template.ngPrivateData = undefined;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values, mapFn) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value, mapFn)));\n            }\n            else {\n                out.push(mapFn ? mapFn(value) : value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + renderStringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + renderStringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + renderStringify(type) + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', renderStringify(type), templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY$1, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_1 + \"/ngDirectiveDef.js\";\n                    var compiler = getCompilerFacade();\n                    var facade = directiveMetadata(type, directive);\n                    facade.typeSourceSpan =\n                        compiler.createParseSourceSpan('Directive', renderStringify(type), sourceMapUrl);\n                    ngDirectiveDef = compiler.compileDirective(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY$1,\n            outputs: metadata.outputs || EMPTY_ARRAY$1,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery),\n        };\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + renderStringify(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + renderStringify(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        typeArgumentCount: 0,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the `Input` and `Output` decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0] || name;\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = Promise.resolve(0);\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    var isBoundToModule = isBoundToModule__PRE_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            var e_1, _a, e_2, _b;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                var output = __assign({}, properties, hostProperties);\n                if (className) {\n                    output['className'] = output['className'] ? output['className'] + (\" \" + className) : className;\n                }\n                return output;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(stylingContext, i)) {\n                                var className = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(stylingContext, i)) {\n                                var styleName = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    /**\n     * Walk the TNode tree to find matches for the predicate.\n     *\n     * @param parentElement the element from which the walk is started\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(getNativeByTNode(tNode, lView), predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponent(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild)\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n            else {\n                // Otherwise, its children have to be processed.\n                if (tNode.child)\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode = head_1_1.value;\n                        _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else {\n                if (head) {\n                    var nextLView = componentView[PARENT];\n                    var nextTNode_1 = nextLView[TVIEW].data[head.index];\n                    _queryNodeChildrenR3(nextTNode_1, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n        }\n        else {\n            // Case 4: the TNode is a view.\n            if (tNode.child) {\n                _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        // To determine the next node to be processed, we need to use the next or the projectionNext link,\n        // depending on whether the current node has been projected.\n        var nextTNode = (tNode.flags & 2 /* isProjected */) ? tNode.projectionNext : tNode.next;\n        if (nextTNode) {\n            _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = 0; i < lContainer[VIEWS].length; i++) {\n            var childView = lContainer[VIEWS][i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode(nativeNode);\n            if (debugNode && (elementsOnly ? debugNode instanceof DebugElement__POST_R3__ : true) &&\n                predicate(debugNode)) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = '';\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value += renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings)\n                properties[propertyName] = metadataParts[1] + value + metadataParts[2];\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__PRE_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_r = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_o = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_p = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_q = _localeFactory;\n    exports.ɵangular_packages_core_core_s = zoneSchedulerFactory;\n    exports.ɵangular_packages_core_core_f = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_m = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_n = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_l = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_k = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_a = NullInjector;\n    exports.ɵangular_packages_core_core_b = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_c = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_d = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_e = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_j = getModuleFactory__PRE_R3__;\n    exports.ɵangular_packages_core_core_t = wtfEnabled;\n    exports.ɵangular_packages_core_core_v = createScope;\n    exports.ɵangular_packages_core_core_u = detectWTF;\n    exports.ɵangular_packages_core_core_y = endTimeRange;\n    exports.ɵangular_packages_core_core_w = leave;\n    exports.ɵangular_packages_core_core_x = startTimeRange;\n    exports.ɵangular_packages_core_core_bb = SCHEDULER;\n    exports.ɵangular_packages_core_core_bc = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_bd = getLView;\n    exports.ɵangular_packages_core_core_be = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_bf = nextContextImpl;\n    exports.ɵangular_packages_core_core_bj = BoundPlayerFactory;\n    exports.ɵangular_packages_core_core_bo = getRootContext;\n    exports.ɵangular_packages_core_core_bn = loadInternal;\n    exports.ɵangular_packages_core_core_g = createElementRef;\n    exports.ɵangular_packages_core_core_h = createTemplateRef;\n    exports.ɵangular_packages_core_core_i = createViewRef;\n    exports.ɵangular_packages_core_core_bh = getUrlSanitizer;\n    exports.ɵangular_packages_core_core_bk = makeParamDecorator;\n    exports.ɵangular_packages_core_core_bl = makePropDecorator;\n    exports.ɵangular_packages_core_core_bp = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_z = _def;\n    exports.ɵangular_packages_core_core_ba = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ɵinject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf$1;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵsetComponentScope = setComponentScope;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵviewQuery = viewQuery;\n    exports.ɵstaticViewQuery = staticViewQuery;\n    exports.ɵstaticContentQuery = staticContentQuery;\n    exports.ɵloadViewQuery = loadViewQuery;\n    exports.ɵcontentQuery = contentQuery;\n    exports.ɵloadContentQuery = loadContentQuery;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵcomponentHostSyntheticProperty = componentHostSyntheticProperty;\n    exports.ɵcomponentHostSyntheticListener = componentHostSyntheticListener;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵallocHostVars = allocHostVars;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵelementHostAttrs = elementHostAttrs;\n    exports.ɵelementHostStyling = elementHostStyling;\n    exports.ɵelementHostStylingMap = elementHostStylingMap;\n    exports.ɵelementHostStyleProp = elementHostStyleProp;\n    exports.ɵelementHostClassProp = elementHostClassProp;\n    exports.ɵelementHostStylingApply = elementHostStylingApply;\n    exports.ɵselect = select;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵresolveWindow = resolveWindow;\n    exports.ɵresolveDocument = resolveDocument;\n    exports.ɵresolveBody = resolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵdefaultStyleSanitizer = defaultStyleSanitizer;\n    exports.ɵsanitizeScript = sanitizeScript;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵsanitizeUrlOrResourceUrl = sanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}