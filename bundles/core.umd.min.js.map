{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","target","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","EMPTY","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","def","providersResolver","consts","vars","hostVars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","id","styles","_","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","forEach","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","obj","secondary","newLookup","minifiedKey","publicName","declaredName","isArray","defineBase","baseDefinition","R3ResolvedDependencyType","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","Inject","Optional","Self","SkipSelf","Host","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","inject","flags","injectInjectorOnly","injectRootLimpMode","get","notFoundValue","injectableDef","injectArgs","types","arg","j","MONKEY_PATCH_KEY_NAME","HEADER_OFFSET","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","renderer","rendererFactory","elementDepthCount","bindingsEnabled","previousOrParentTNode","isParent","tView","currentQueries","creationMode","viewData","NodeInjectorFactory","ACTIVE_INDEX","VIEWS","NATIVE","RENDER_PARENT","TNODE","PARENT_INJECTOR","INJECTOR_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","stringify$1","loadInternal","arr","readElementValue","getNativeByIndex","getNativeByTNode","tNode","hostView","getTNode","view","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","isComponent","isComponentDef","isLContainer","isRootView","getRootView","lViewData","readPatchedLViewData","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","getContext","mpValue","isComponentInstance","instance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexStart","getDirectiveStartIndex","directiveIndexEnd","getDirectiveEndIndex","traverseNextElement","discoverDirectives","includeComponents","directiveStartIndex","directiveEndIndex","slice","findViaNativeElement","existingCtx","native","context","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","parent","componentIndices","components","elementComponentIndex","startIndex","count","queueInitHooks","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","executeHooks","allHooks","hooksToCall","callHooks","getRenderer","getRendererFactory","getCurrentSanitizer","enableBindings","disableBindings","getCurrentView","restoreView","viewToRestore","contextViewData","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","getTView","getCurrentQueries","setCurrentQueries","queries","getCreationMode","getViewData","getCleanup","getTViewCleanup","cleanup","checkNoChangesMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","getFirstTemplatePass","setFirstTemplatePass","bindingRootIndex","getBindingRoot","setBindingRoot","enterView","newView","hostTNode","oldView","bindingStartIndex","resetComponentState","leaveView","creationOnly","includeViewProviders","setIncludeViewProviders","v","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentData","footer","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveViewData","previousTView","shouldSearchParent","bloomHasToken","searchTokensOnInjector","NOT_FOUND","moduleInjector","injectorView","currentTView","nodeFlags","nodeProviderIndexes","providerIndexes","tInjectables","canAccessViewProviders","node","startInjectables","startDirectives","directiveCount","providerTokenOrDef","getNodeInjectable","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","previousInjectImplementation","NodeInjector","_tNode","_hostView","_injectorIndex","getFactoryOf","typeAny","getInheritedFactory","throwMultipleComponentError","tagName","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getParentNative","getHostNative","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","rootTNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","findComponentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","lView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","destroy","getRenderParent","canInsertNativeNode","nativeParentNode","tNodeParent","getHighestElementContainer","currentNode","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentEl","parentTNode","getBeforeNodeForView","ngContainer","containerNative","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","NO_CHANGE","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","createEmptyStylingContext","element","sanitizer","initialStylingValues","getStylingContext","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","input","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","isClassBased_5","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setContextDirty","setContextPlayersDirty","setStyle","prop","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","builder","insertionIndex","playerBuilderIndex","getPlayerBuilder","setFlag","getProp","limitToSingleClasses","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","playerIndex","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","_CLEAN_PROMISE","refreshDescendantViews","rf","parentFirstTemplatePass","setHostBindings","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","refreshChildComponents","componentRefresh","createLViewData","createNodeAtIndex","createTNode","createViewNode","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","nextContext","level","nextContextImpl","walkUpViews","nestingLevel","renderComponentOrTemplate","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementCreate","setUpAttributes","createDirectivesAndLocals","getElementDepthCount","increaseElementDepthCount","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","totalHostVars","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","prefillHostVars","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","setRendererFactory","defaultRenderer","selectRootElement","querySelector","listener","eventName","listenerFn","useCapture","storeCleanupFn","listen","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","cleanupInstances","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","decreaseElementDepthCount","elementAttribute","element_1","removeAttribute","strValue","elementProperty","dataValue","inputData","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","tViews","tParent","initialInputs","tNodeFlags","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementClassProp","stylingIndex","val","updateClassProp","addOrRemove","elementStyling","classDeclarations","styleDeclarations","styleSanitizer","hasClassInput","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","onlyProcessSingleClasses","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","initialStaticClasses","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","delegateToClassInput","initialClasses","elementStylingApply","renderStyleAndClassBindings","rootOrView","classesStore","stylesStore","totalPlayersQueued","isContextDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","isClassBased_6","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","elementStylingMap","classes","classInputVal","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","isClassBased_3","isClassBased_4","textNative","textBinding","element_2","textContent","elementIndex","directive","postProcessBaseDirective","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","queueHostBindingForCheck","addToViewTree","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","syncViewWithBlueprint","componentTView","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInRootView","hostTView","createViewQuery","renderFlags","viewFlags","updateViewQuery","bindingUpdated","interpolationV","different","content","interpolation1","prefix","v0","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","bindingUpdated3","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextViewData","loadQueryList","queryListIdx","load","getBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","msg","updateBinding","exp1","exp2","exp3","exp4","directiveInject","injectAttribute","attrNameToInject","injectAttributeImpl","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR$1","NullInjector","Injector","StaticInjector","NULL","SWITCH_INJECTOR_FACTORY","SWITCH_INJECTOR_FACTORY__POST_R3__","injectInjector","IDENT","EMPTY$1","CIRCULAR","MULTI_PROVIDER_FN","USE_VALUE","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","charAt","substr","parts","JSON","replace","R3ElementRef","R3TemplateRef","R3ViewContainerRef","NgModuleRef","NgModuleFactory","ViewRef","_view","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","_lookUpContext","enumerable","configurable","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_super","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","viewRef","hostContainer","NodeInjector$1","NodeInjector$$1","loadContext","createRootComponentView","rNode","createRootComponent","hostRNode","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","prevViewQuery_1","superViewQuery_1","ctx","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","getOwnPropertyDescriptor","setter_1","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ngOnChanges","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefFactory","hydrate","defOrWrappedDef","parents","ngModule","imported","delete","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","existing","multiRecord_1","hasOnDestroy","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","endIndex","cptViewProvidersCount","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","factoryFn","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","item","multiResolve","result","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","ngContentSelectors","projectableNodes","rootSelectorOrNode","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","setTimeout","WRAP_RENDERER_FACTORY2","ComponentFactory$$1","isInternalRootView","rootFlags","tElementNode","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","destroyCbs","changeDetectorRef","i18nTagRegex","appendI18nNode","i18nAttribute","i18nExp","expression","i18nStart","subTemplateIndex","i18nEnd","i18nApply","instructions","localParentTNode","localPreviousTNode","elementTNode","textRNode","removedElement","removedTNode","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","parentInjector","_bootstrapComponents","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","clone","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","list","viewValuesIdx","getIdxOfMatchingSelector","queryRead","matchingIdx","getIdxOfMatchingDirective","queryReadByTNodeType","addMatch","directiveIdx","matchingValue","createPredicate","_valuesTree","QueryList","QueryList_","changes","filter","find","reduce","init","some","toArray","reset","flatten","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","templateRefExtractor","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetFactoryOf","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵloadQueryList","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵelementStart","ɵelementEnd","ɵelement","ɵEC","elementContainerStart","ɵeC","elementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵquery","ɵqueryRefresh","ɵregisterContentQuery","ɵreference","ɵelementStyling","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18nAttribute","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ɵsanitizeUrl","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","EMPTY_ARRAY$2","compileNgModule","compileNgModuleDefs","setScopeOnDeclaredComponents","flatten$1","transitiveScopes","transitiveScopesFor","declaration","patchComponentDefWithScope","ngSelectorScope","expandModuleWithProviders","emitInline","compileInjector","from","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","out","isModuleWithProviders","compileComponent","metadata","maybeQueueResolutionOfComponentResources","directiveMetadata","preserveWhitespaces","viewQueries","extractQueriesMetadata","hasSelectorScope","compileDirective","facade","typeArgumentCount","EMPTY_OBJ$1","isContentQuery","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","isQueryAnn","queriesMeta","field","ann","convertToR3QueryMetadata","propertyName","convertToR3QueryPredicate","splitByComma","piece","compilePipe","Version","Directive","SWITCH_COMPILE_DIRECTIVE","Component","Default","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","VERSION","full","major","minor","patch","USE_VALUE$2","isUseClassProvider","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","meta_1","hasAProvider","compilerMeta","ctorDeps","userDeps","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","ApplicationRef_Factory","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","ViewContainerRef_","_lContainer","_hostTNode","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","templateRef","adjustedIdx","_adjustIndex","createComponent","ngModuleRef","contextInjector","insert","move","shift","commentNode","nativeNextSibling","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","createViewRef","componentIndex","hostComponentView","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","listeners","DebugElement","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","ApplicationModule_Factory","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","_data","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","Render3DebugRendererFactory2","Render3DebugContext","_nativeNode","getInjector","getHostComponent","lDebugCtx","directivesCount","directiveIdxStart","getLocalRefs","discoverLocalRefs","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","getModuleFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵgetInjectableDef","ɵinject","ɵsetCurrentInjector","ɵAPP_ROOT","ɵivyEnabled","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵRender3NgModuleRef","ɵmarkDirty","markDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵstore","ɵwhenRendered","whenRendered","getRootContext$2","ɵi18nExpMapping","i18nExpMapping","translation","placeholders","staticText","ɵi18nInterpolation1","i18nInterpolation1","ɵi18nInterpolation2","i18nInterpolation2","ɵi18nInterpolation3","i18nInterpolation3","idx","ɵi18nInterpolation4","i18nInterpolation4","b1","ɵi18nInterpolation5","i18nInterpolation5","ɵi18nInterpolation6","i18nInterpolation6","ɵi18nInterpolation7","i18nInterpolation7","b2","ɵi18nInterpolation8","i18nInterpolation8","ɵi18nInterpolationV","i18nInterpolationV","ɵi18nMapping","i18nMapping","elements","expressions","templateRoots","lastChildIndex","translationParts","generateMappingInstructions","tmplIndex","partIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","currentElements","currentExpressions","phIndex","templateRootIndex","newTmplIndex","tmplElements","phKeys","ph","tmplExpressions","ɵWRAP_RENDERER_FACTORY2","ɵsetClassMetadata","setClassMetadata","clazz","ɵRender3DebugRendererFactory2","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetContext","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","element$$1","getOrCreatePlayerContext","getRootContext$1","getRootView$1","componentOrView","ɵgetPlayers","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","ɵcompileNgModuleFactory__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵpublishGlobalUtil","publishGlobalUtil","ɵSWITCH_INJECTOR_FACTORY__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.1.0-beta.1+31.sha-bc68b59\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.rxjs.operators));\n}(this, (function (exports,rxjs,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            hostVars: componentDefinition.hostVars || 0,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type) {\n        return type[NG_MODULE_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & 8 /* Optional */)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 17;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n    var DECLARATION_VIEW = 16;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var NATIVE = 6;\n    var RENDER_PARENT = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LViewData` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LViewData`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LViewData` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData` or `TData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /**\n     * Takes the value of a slot in `LViewData` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LViewData. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LViewData`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, arr) {\n        return readElementValue(arr[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LViewData or an LContainer. If LContainer, unwrap to find LViewData.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && typeof value[ACTIVE_INDEX] === 'number';\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 64 /* IsRoot */) !== 0;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lViewData = Array.isArray(target) ? target : readPatchedLViewData(target);\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    function getRootContext(viewOrComponent) {\n        return getRootView(viewOrComponent)[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLViewData(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lViewData;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LViewData instance from which to start walking up the view tree\n     * @returns The LViewData instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LViewData instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        var parentTNode = startView[HOST_NODE];\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[HOST_NODE];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LViewData` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     */\n    function getContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LViewData instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lViewData = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = discoverDirectives(nodeIndex, lViewData, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lViewData, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, compontent or\n                // directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lViewData[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lViewData, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomElement(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lViewData = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lViewData = parentContext;\n                    }\n                    else {\n                        lViewData = parentContext.lViewData;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lViewData) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lViewData, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lViewData[index]);\n                        var context = createLContext(lViewData, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lViewData, nodeIndex, native) {\n        return {\n            lViewData: lViewData,\n            nodeIndex: nodeIndex, native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lViewData = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lViewData)) {\n            var nodeIndex = findViaComponent(lViewData, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lViewData);\n            var context = createLContext(lViewData, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lViewData;\n            view = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LViewData and returns the matching index\n     */\n    function findViaNativeElement(lViewData, target) {\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lViewData);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else if (tNode.parent) {\n            return tNode.parent.next || null;\n        }\n        return null;\n    }\n    /**\n     * Locates the component within the given LViewData and returns the matching index\n     */\n    function findViaComponent(lViewData, componentInstance) {\n        var componentIndices = lViewData[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lViewData);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lViewData);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LViewData and returns the matching index\n     */\n    function findViaDirective(lViewData, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LViewData of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = getDirectiveStartIndex(tNode);\n            var directiveIndexEnd = getDirectiveEndIndex(tNode, directiveIndexStart);\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lViewData[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    function assertDomElement(element) {\n        assertEqual(element.nodeType, 1, 'The provided value must be an instance of an HTMLElement');\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lViewData The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function discoverDirectives(nodeIndex, lViewData, includeComponents) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        var directiveStartIndex = getDirectiveStartIndex(tNode);\n        var directiveEndIndex = getDirectiveEndIndex(tNode, directiveStartIndex);\n        if (!includeComponents && tNode.flags & 4096 /* isComponent */)\n            directiveStartIndex++;\n        return lViewData.slice(directiveStartIndex, directiveEndIndex);\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lViewData, nodeIndex) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] =\n                    directiveIndex === -1 ? getNativeByTNode(tNode, lViewData) : lViewData[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n    function getDirectiveStartIndex(tNode) {\n        // the tNode instances store a flag value which then has a\n        // pointer which tells the starting index of where all the\n        // active directives are in the master directive array\n        return tNode.flags >> 16 /* DirectiveStartingIndexShift */;\n    }\n    function getDirectiveEndIndex(tNode, startIndex) {\n        // The end value is also a part of the same flag\n        // (see `TNodeFlags` to see how the flag bit shifting\n        // values are used).\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        return count ? (startIndex + count) : -1;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 16 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    function setRendererFactory(factory) {\n        rendererFactory = factory;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LViewData` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        viewData = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    var tView;\n    function getTView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return tView;\n    }\n    var currentQueries;\n    function getCurrentQueries() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueries;\n    }\n    function setCurrentQueries(queries) {\n        currentQueries = queries;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== viewData[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = currentQueries.clone());\n            previousOrParentTNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (currentQueries = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    function getContextViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextViewData;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    function getFirstTemplatePass() {\n        return firstTemplatePass;\n    }\n    function setFirstTemplatePass(value) {\n        firstTemplatePass = value;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = viewData;\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        bindingRootIndex = newView && tView.bindingStartIndex;\n        renderer = newView && newView[RENDERER];\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        viewData = contextViewData = newView;\n        oldView && (oldView[QUERIES] = currentQueries);\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(viewData, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(previousOrParentTNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = false;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 4096 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0, AcrossHostBoundary is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view[HOST_NODE];\n            viewOffset++;\n        }\n        var acrossHostBoundary = hostTNode && hostTNode.type === 3 /* Element */ ?\n            32768 /* AcrossHostBoundary */ :\n            0;\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) |\n                acrossHostBoundary :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(tNode, lViewData, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function') {\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveViewData = getViewData();\n            setTNodeAndViewData(tNode, lViewData);\n            try {\n                var value = bloomHash();\n                if (value == null && !(flags & 8 /* Optional */)) {\n                    throw new Error(\"No provider for \" + stringify$1(token));\n                }\n                else {\n                    return value;\n                }\n            }\n            finally {\n                setTNodeAndViewData(savePreviousOrParentTNode, saveViewData);\n            }\n        }\n        else if (typeof bloomHash == 'number') {\n            // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n            // A reference to the previous injector TView that was found while climbing the element injector\n            // tree. This is used to know if viewProviders can be accessed on the current injector.\n            var previousTView = null;\n            var injectorIndex = getInjectorIndex(tNode, lViewData);\n            var parentLocation = NO_PARENT_INJECTOR;\n            // If we should skip this injector, start by searching the parent injector.\n            if (flags & 4 /* SkipSelf */) {\n                parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lViewData) :\n                    lViewData[injectorIndex + PARENT_INJECTOR];\n                if (!shouldSearchParent(flags, parentLocation)) {\n                    injectorIndex = -1;\n                }\n                else {\n                    previousTView = lViewData[TVIEW];\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lViewData = getParentInjectorView(parentLocation, lViewData);\n                }\n            }\n            // Traverse up the injector tree until we find a potential match or until we know there\n            // *isn't* a match.\n            while (injectorIndex !== -1) {\n                parentLocation = lViewData[injectorIndex + PARENT_INJECTOR];\n                // Check the current injector. If it matches, see if it contains token.\n                var tView = lViewData[TVIEW];\n                if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                    // At this point, we have an injector which *may* contain the token, so we step through\n                    // the providers and directives associated with the injector's corresponding node to get\n                    // the instance.\n                    var instance = searchTokensOnInjector(injectorIndex, lViewData, token, previousTView);\n                    if (instance !== NOT_FOUND) {\n                        return instance;\n                    }\n                }\n                if (shouldSearchParent(flags, parentLocation) &&\n                    bloomHasToken(bloomHash, injectorIndex, lViewData)) {\n                    // The def wasn't found anywhere on this node, so it was a false positive.\n                    // Traverse up the tree and continue searching.\n                    previousTView = tView;\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lViewData = getParentInjectorView(parentLocation, lViewData);\n                }\n                else {\n                    // If we should not search parent OR If the ancestor bloom filter value does not have the\n                    // bit corresponding to the directive we can give up on traversing up to find the specific\n                    // injector.\n                    injectorIndex = -1;\n                }\n            }\n        }\n        if (flags & 8 /* Optional */ && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (2 /* Self */ | 1 /* Host */)) === 0) {\n            var moduleInjector = lViewData[INJECTOR];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & 8 /* Optional */);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & 8 /* Optional */);\n            }\n        }\n        if (flags & 8 /* Optional */) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, injectorView, token, previousTView) {\n        var currentTView = injectorView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        var nodeFlags = tNode.flags;\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = currentTView.data;\n        // First, we step through providers\n        var canAccessViewProviders = false;\n        // We need to determine if view providers can be accessed by the starting element.\n        // It happens in 2 cases:\n        // 1) On the initial element injector , if we are instantiating a token which can see the\n        // viewProviders of the component of that element. Such token are:\n        // - the component itself (but not other directives)\n        // - viewProviders tokens of the component (but not providers tokens)\n        // 2) Upper in the element injector tree, if the starting element is actually in the view of\n        // the current element. To determine this, we track the transition of view during the climb,\n        // and check the host node of the current view to identify component views.\n        if (previousTView == null && isComponent(tNode) && includeViewProviders ||\n            previousTView != null && previousTView != currentTView &&\n                (currentTView.node == null || currentTView.node.type === 3 /* Element */)) {\n            canAccessViewProviders = true;\n        }\n        var startInjectables = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var startDirectives = nodeFlags >> 16 /* DirectiveStartingIndexShift */;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? startInjectables : startInjectables + cptViewProvidersCount;\n        var directiveCount = nodeFlags & 4095 /* DirectiveCountMask */;\n        for (var i = startingIndex; i < startDirectives + directiveCount; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < startDirectives && token === providerTokenOrDef ||\n                i >= startDirectives && providerTokenOrDef.type === token) {\n                return getNodeInjectable(tInjectables, injectorView, i, tNode);\n            }\n        }\n        return NOT_FOUND;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringify$1(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveViewData = getViewData();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveViewData);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, parentLocation) {\n        return !(flags & 2 /* Self */ ||\n            (flags & 1 /* Host */ &&\n                (parentLocation & 32768 /* AcrossHostBoundary */)));\n    }\n    function injectInjector() {\n        var tNode = getPreviousOrParentTNode();\n        return new NodeInjector(tNode, getViewData());\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n            this._injectorIndex = getOrCreateNodeInjectorForNode(_tNode, _hostView);\n        }\n        NodeInjector.prototype.get = function (token) {\n            setTNodeAndViewData(this._tNode, this._hostView);\n            return getOrCreateInjectable(this._tNode, this._hostView, token);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent element of a given node. */\n    function getParentNative(tNode, currentView) {\n        return tNode.parent == null ? getHostNative(currentView) :\n            getNativeByTNode(tNode.parent, currentView);\n    }\n    /**\n     * Gets the host element given a view. Will return null if the current view is an embedded view,\n     * which does not have a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? container[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (renderParent)\n                    lContainer[RENDER_PARENT] = renderParent;\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 8192 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lViewData) {\n        var rootTNode = lViewData[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'viewData.parent');\n            lViewData = lViewData[PARENT];\n            rootTNode = lViewData[HOST_NODE];\n        }\n        return lViewData;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~8 /* Attached */;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        var childIndex = viewData[TVIEW].childIndex;\n        return childIndex === -1 ? null : viewData[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]);\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            // If we are asked for a render parent of the root component we need to do low-level DOM\n            // operation as LTree doesn't exist above the topmost host node. We might need to find a render\n            // parent of the topmost host node if the root component injects ViewContainerRef.\n            if (isRootView(currentView)) {\n                return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n            }\n            var hostTNode = currentView[HOST_NODE];\n            var tNodeParent = tNode.parent;\n            if (tNodeParent != null && tNodeParent.type === 4 /* ElementContainer */) {\n                tNode = getHighestElementContainer(tNodeParent);\n            }\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentNative(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 4096 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getLContainer(viewTNode, view);\n        if (container == null || container[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent && tNode.parent.type === 4 /* ElementContainer */) {\n            currentNode = getHighestElementContainer(tNode);\n            parent = currentNode.parent;\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentEl = getParentNative(childTNode, currentView);\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, lContainer[RENDER_PARENT], childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var renderParent = getRenderParent(childTNode, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, parentEl);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        // We only remove the element if not in View or not projected.\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var parentNative = getParentNative(childTNode, currentView);\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, childEl) :\n                parentNative.removeChild(childEl);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                nodeOrContainer[RENDER_PARENT] = renderParent;\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createEmptyStylingContext(element, sanitizer, initialStylingValues) {\n        return [\n            null,\n            sanitizer || null,\n            initialStylingValues || [null],\n            0,\n            0,\n            element || null,\n            null,\n            null // PreviousMultiStyleValue\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index + HEADER_OFFSET;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LViewData or an LContainer\n            var stylingTemplate = getTNode(index, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LViewData or an LContainer\n        return typeof value[FLAGS] !== 'number' && typeof value[ACTIVE_INDEX] !== 'number';\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lViewData = context.lViewData, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex - HEADER_OFFSET, lViewData);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[0 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[0 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer, onlyProcessSingleClasses) {\n        var initialStylingValues = [null];\n        var context = createEmptyStylingContext(null, styleSanitizer, initialStylingValues);\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        var initialStaticClasses = onlyProcessSingleClasses ? [] : null;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                        initialStaticClasses && initialStaticClasses.push(className);\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 4 /* Size */ * 2 + 8 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 8 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 8 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 4 /* Size */ + 8 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 4 /* Size */ + multiStart;\n            var indexForSingle = i * 4 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            setPlayerBuilderIndex(context, indexForSingle, 0);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n            setPlayerBuilderIndex(context, indexForMulti, 0);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStart) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 3 /* MasterFlagPosition */, masterFlag);\n        setContextDirty(context, initialStylingValues.length > 1);\n        if (initialStaticClasses) {\n            context[6 /* PreviousOrCachedMultiClassValue */] = initialStaticClasses.join(' ');\n        }\n        return context;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput) {\n        stylesInput = stylesInput || null;\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* PreviousOrCachedMultiClassValue */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* PreviousMultiStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* PreviousOrCachedMultiClassValue */] = classesValue;\n        context[7 /* PreviousMultiStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARR;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARR;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_2 && !ignoreAllStyleUpdates) || (isClassBased_2 && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased_2 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased_3 && !ignoreAllStyleUpdates) || (isClassBased_3 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased_3);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased_3 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_4 && !ignoreAllStyleUpdates) || (isClassBased_4 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased_4 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                context.push(flag, prop, value, playerBuilderIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, input) {\n        var singleIndex = 8 /* SingleStylesStartPosition */ + index * 4 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_5 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex);\n                playerBuildersAreDirty = true;\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyleAndClassBindings(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore) {\n        var totalPlayersQueued = 0;\n        if (isContextDirty(context)) {\n            var flushPlayerBuilders = context[3 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            for (var i = 8 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased_6 || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased_6) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                            setStyle(native, prop, valueToApply, renderer, sanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setContextDirty(context, false);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 8 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[0 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[0 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex) {\n        context[index + 3 /* PlayerBuilderIndexOffset */] = playerBuilderIndex;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        return context[index + 3 /* PlayerBuilderIndexOffset */] || 0;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[0 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[3 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[3 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[3 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setPlayerBuilderIndex(context, indexA, getPlayerBuilderIndex(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, playerIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(viewData, rf) {\n        var tView = getTView();\n        var parentFirstTemplatePass = getFirstTemplatePass();\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        setFirstTemplatePass(false);\n        // Dynamically created views must run first only in creation mode. If this is a\n        // creation-only pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update-only pass.\n        if (rf !== 1 /* Create */) {\n            var creationMode = getCreationMode();\n            var checkNoChangesMode = getCheckNoChangesMode();\n            setHostBindings(tView, viewData);\n            if (!checkNoChangesMode) {\n                executeInitHooks(viewData, tView, creationMode);\n            }\n            refreshDynamicEmbeddedViews(viewData);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView);\n            if (!checkNoChangesMode) {\n                executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n            }\n        }\n        refreshChildComponents(tView.components, parentFirstTemplatePass, rf);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    viewData[BINDING_INDEX] = bindingRootIndex;\n                    // We must subtract the header offset because the load() instruction\n                    // expects a raw, unadjusted index.\n                    instruction(currentDirectiveIndex - HEADER_OFFSET, currentElementIndex);\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components, parentFirstTemplatePass, rf) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i], parentFirstTemplatePass, rf);\n            }\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        var viewData = getViewData();\n        var instance = tView.blueprint.slice();\n        instance[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        instance[PARENT] = instance[DECLARATION_VIEW] = viewData;\n        instance[CONTEXT] = context;\n        instance[INJECTOR] = viewData ? viewData[INJECTOR] : null;\n        instance[RENDERER] = renderer;\n        instance[SANITIZER] = sanitizer || null;\n        return instance;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, viewData.length, \"Slot should have been initialized with null\");\n        viewData[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var previousOrParentTNode = getPreviousOrParentTNode();\n            var isParent = getIsParent();\n            tNode = tView.data[adjustedIndex] =\n                createTNode(viewData, type, adjustedIndex, name, attrs, null);\n            // Now link ourselves into the tree.\n            if (previousOrParentTNode) {\n                if (isParent && previousOrParentTNode.child == null &&\n                    (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                    // We are in the same view, which means we are adding content node to the parent view.\n                    previousOrParentTNode.child = tNode;\n                }\n                else if (!isParent) {\n                    previousOrParentTNode.next = tNode;\n                }\n            }\n        }\n        if (tView.firstChild == null && type === 3 /* Element */) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(view, 2 /* View */, index, null, null, null);\n        }\n        setIsParent(true);\n        var tNode = view[TVIEW].node;\n        setPreviousOrParentTNode(tNode);\n        return view[HOST_NODE] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function adjustBlueprintForNewNode(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            view.push(null);\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var oldView;\n        if (viewToRender[FLAGS] & 64 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(viewToRender[CONTEXT]);\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews(viewToRender, null);\n                }\n                else {\n                    // This must be set to false immediately after the first creation run because in an\n                    // ngFor loop, all the views will be created together before update mode runs and turns\n                    // off firstTemplatePass. If we don't set it here, instances will perform directive\n                    // matching, etc again and again.\n                    viewToRender[TVIEW].firstTemplatePass = false;\n                    setFirstTemplatePass(false);\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, rf, templateFn) {\n        var rendererFactory = getRendererFactory();\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(rf || getRenderFlags(hostView), componentOrContext);\n            }\n            refreshDescendantViews(hostView, rf);\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var renderer = getRenderer();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, null, attrs || null);\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(tView, viewData, localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var tView = getTView();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(tView, viewData, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, viewData);\n        }\n        increaseElementDepthCount();\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getRenderer();\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getFirstTemplatePass()) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, viewData, findDirectiveMatches(tView, viewData, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, viewData, previousOrParentTNode);\n        saveResolvedLocalsInData(viewData, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var renderer = getRenderer();\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        setRendererFactory(factory);\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var viewData = getViewData();\n        var tNode = getPreviousOrParentTNode();\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, viewData);\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = getRenderer();\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(native, eventName, listenerFn);\n                storeCleanupFn(viewData, cleanupFn);\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                native.addEventListener(eventName, wrappedListener, useCapture);\n                var cleanupInstances = getCleanup(viewData);\n                cleanupInstances.push(wrappedListener);\n                if (getFirstTemplatePass()) {\n                    getTViewCleanup(viewData).push(eventName, tNode.index, cleanupInstances.length - 1, useCapture);\n                }\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(viewData, outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(viewData, outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], viewData);\n            var subscription = viewData[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = getViewData();\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(previousOrParentTNode.flags, getTView());\n        decreaseElementDepthCount();\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var viewData = getViewData();\n            var renderer = getRenderer();\n            var element_1 = getNativeByIndex(index, viewData);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var viewData = getViewData();\n        var element = getNativeByIndex(index, viewData);\n        var tNode = getTNode(index, viewData);\n        var inputData = initializeTNodeInputs(tNode);\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(viewData, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(viewData, index + HEADER_OFFSET);\n        }\n        else if (tNode.type === 3 /* Element */) {\n            var renderer = getRenderer();\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ?\n                renderer.setProperty(element, propName, value) :\n                (element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(viewData, type, adjustedIndex, tagName, attrs, tViews) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && ngDevMode.tNode++;\n        var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && viewData && parent !== viewData[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(viewData, inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], viewData);\n            viewData[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number tNodeFlags node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var tView = getTView();\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 16 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        var val = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index, getViewData()), stylingIndex, val);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n        var tNode = getPreviousOrParentTNode();\n        var inputData = initializeTNodeInputs(tNode);\n        if (!tNode.stylingTemplate) {\n            var hasClassInput = inputData && inputData.hasOwnProperty('class') ? true : false;\n            if (hasClassInput) {\n                tNode.flags |= 32768 /* hasClassInput */;\n            }\n            // initialize the styling template.\n            tNode.stylingTemplate = createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer, hasClassInput);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            var index = tNode.index - HEADER_OFFSET;\n            if (delegateToClassInput(tNode)) {\n                var stylingContext = getStylingContext(index, getViewData());\n                var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n                setInputsForProperty(getViewData(), tNode.inputs['class'], initialClasses);\n            }\n            elementStylingApply(index);\n        }\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        var viewData = getViewData();\n        var isFirstRender = (viewData[FLAGS] & 1 /* CreationMode */) !== 0;\n        var totalPlayersQueued = renderStyleAndClassBindings(getStylingContext(index, viewData), getRenderer(), viewData, isFirstRender);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(viewData);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix) {\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index, getViewData()), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     */\n    function elementStylingMap(index, classes, styles) {\n        var viewData = getViewData();\n        var tNode = getTNode(index, viewData);\n        var stylingContext = getStylingContext(index, viewData);\n        if (delegateToClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(getViewData(), tNode.inputs['class'], classInputVal);\n        }\n        updateStylingMap(stylingContext, classes, styles);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var viewData = getViewData();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, getRenderer());\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, getViewData());\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = getRenderer();\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n                element_2.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var totalHostVars = 0;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                totalHostVars += def.hostVars;\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                queueInitHooks(directiveDefIdx, def.onInit, def.doCheck, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n        prefillHostVars(tView, viewData, totalHostVars);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, viewData, previousOrParentTNode) {\n        var start = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n        var end = start + previousOrParentTNode.flags & 4095 /* DirectiveCountMask */;\n        if (!getFirstTemplatePass() && start < end) {\n            getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(viewData, previousOrParentTNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, viewData, i, previousOrParentTNode);\n            postProcessDirective(viewData, directive, def, i);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, viewData, totalHostVars) {\n        for (var i = 0; i < totalHostVars; i++) {\n            viewData.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def.inputs, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(viewData, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, viewData);\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        attachPatchData(directive, viewData);\n        if (native) {\n            attachPatchData(native, viewData);\n        }\n        // TODO(misko): setUpAttributes should be a feature for better treeshakability.\n        if (def.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, def.attributes);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var tView = getTView();\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n    */\n    function queueHostBindingForCheck(tView, def) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        tView.expandoInstructions.push(def.hostBindings, def.hostVars);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 4096 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = index << 16 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ |\n            numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n        if (def.hostBindings)\n            queueHostBindingForCheck(tView, def);\n    }\n    function addComponentLogic(viewData, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, viewData);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentTNode.index, createLViewData(getRendererFactory().createRenderer(native, def), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = viewData[previousOrParentTNode.index];\n        viewData[previousOrParentTNode.index] = componentView;\n        if (getFirstTemplatePass()) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, hostTNode, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n            getRenderParent(hostTNode, currentView) // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var viewData = getViewData();\n        var tView = getTView();\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (getFirstTemplatePass()) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor);\n        var currentQueries = getCurrentQueries();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(tNode.flags, tView);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        getFirstTemplatePass() && (tNode.tViews = []);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var viewData = getViewData();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = getRenderer().createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = viewData[adjustedIndex] =\n            createLContainer(viewData[adjustedIndex], tNode, viewData, comment);\n        appendChild(comment, tNode, viewData);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, lContainer);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var previousOrParentTNode = loadInternal(index, tView.data);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        viewData[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        if (!getCheckNoChangesMode()) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, getCreationMode());\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getViewData()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var viewData = getViewData();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = viewData[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLViewData(getRenderer(), getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (getCreationMode()) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, viewData, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewToRender);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getTView();\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var viewData = getViewData();\n        var viewHost = viewData[HOST_NODE];\n        refreshDescendantViews(viewData, null);\n        leaveView(viewData[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex, parentFirstTemplatePass, rf) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, getViewData());\n        ngDevMode && assertNodeType(getTView().data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            parentFirstTemplatePass && syncViewWithBlueprint(hostView);\n            detectChangesInternal(hostView, hostView[CONTEXT], rf);\n        }\n    }\n    /**\n     * Syncs an LViewData instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LViewData is created.\n     * 3. Second <comp> is matched as a component and its LViewData is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LViewData was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getViewData())[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var viewData = getViewData();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(viewData);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 8192 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, viewData, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        var tView = getTView();\n        var firstTemplatePass = getFirstTemplatePass();\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(viewData, viewIndex) {\n        var view = getComponentViewByIndex(viewIndex, viewData);\n        if (!(view[FLAGS] & 2 /* CheckAlways */)) {\n            view[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView && !(currentView[FLAGS] & 64 /* IsRoot */)) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext should be defined');\n        var rootContext = currentView[CONTEXT];\n        scheduleTick(rootContext, 1 /* DetectChanges */);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLViewData(rootComponent), rootComponent, 2 /* Update */);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        detectChangesInternal(getComponentViewByInstance(component), component, null);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, component, rf) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, rf, hostView[FLAGS], component);\n            templateFn(rf || getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView, rf);\n            updateViewQuery(viewQuery, hostView[FLAGS], component);\n        }\n        finally {\n            leaveView(oldView, rf === 1 /* Create */);\n        }\n    }\n    function createViewQuery(viewQuery, renderFlags, viewFlags, component) {\n        if (viewQuery && (renderFlags === 1 /* Create */ ||\n            (renderFlags === null && (viewFlags & 1 /* CreationMode */)))) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, flags, component) {\n        if (viewQuery && flags & 2 /* Update */) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        markViewDirty(getComponentViewByInstance(component));\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(getViewData()[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(getViewData()[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(getViewData()[BINDING_INDEX]++, v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var tView = getTView();\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        getViewData()[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextViewData = getContextViewData();\n        return loadInternal(index, contextViewData);\n    }\n    function loadQueryList(queryListIdx) {\n        var viewData = getViewData();\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, getViewData());\n    }\n    /** Gets the current binding value. */\n    function getBinding(bindingIndex) {\n        var viewData = getViewData();\n        ngDevMode && assertDataInRange(viewData[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(viewData[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(bindingIndex, value) {\n        var viewData = getViewData();\n        var checkNoChangesMode = getCheckNoChangesMode();\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && assertLessThan(bindingIndex, viewData.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (viewData[bindingIndex] === NO_CHANGE) {\n            viewData[bindingIndex] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(getCreationMode(), checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding and returns the value. */\n    function updateBinding(bindingIndex, value) {\n        return getViewData()[bindingIndex] = value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(bindingIndex, exp1);\n        return bindingUpdated(bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated(bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated2(bindingIndex + 2, exp3, exp4) || different;\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getViewData(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList, currentDirectiveIndex) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (getFirstTemplatePass()) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode.flags, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    function delegateToClassInput(tNode) {\n        return tNode.flags & 32768 /* hasClassInput */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR$1 = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR$1); },\n        });\n        /** @internal */\n        Injector.__NG_ELEMENT_ID__ = function () { return SWITCH_INJECTOR_FACTORY(); };\n        return Injector;\n    }());\n    var SWITCH_INJECTOR_FACTORY__POST_R3__ = function () {\n        return injectInjector();\n    };\n    var SWITCH_INJECTOR_FACTORY = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY$1 = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            records.set(INJECTOR$1, { token: INJECTOR$1, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY$1;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY$1\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY$1;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY$1) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY$1;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY$1;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._view = _view;\n        }\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = getRendererFactory();\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._view[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        return RootViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getViewData());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getViewData());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context, 1 /* Create */);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getRenderer(), hostContainer[QUERIES], hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getViewData());\n    }\n    var NodeInjector$1 = /** @class */ (function () {\n        function NodeInjector$$1(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n        }\n        NodeInjector$$1.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._hostView, token, notFoundValue);\n        };\n        return NodeInjector$$1;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector$1(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NullInjector() :\n                            new NodeInjector$1(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._view;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostTNode, hostView, commentNode, true);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getViewData(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getViewData());\n    }\n\n    /**\n     * NOTE: The following functions might not be ideal for core usage in Angular...\n     *\n     * Each function below is designed\n     */\n    /**\n     * Returns the component instance associated with the target.\n     *\n     * If a DOM is used then it will return the component that\n     *    owns the view where the element is situated.\n     * If a component instance is used then it will return the\n     *    instance of the parent component depending on where\n     *    the component instance is exists in a template.\n     * If a directive instance is used then it will return the\n     *    component that contains that directive in it's template.\n     */\n    function getComponent(target) {\n        var context = loadContext(target);\n        if (context.component === undefined) {\n            var lViewData = context.lViewData;\n            while (lViewData) {\n                var ctx = lViewData[CONTEXT];\n                if (ctx && isComponentInstance(ctx)) {\n                    context.component = ctx;\n                    break;\n                }\n                lViewData = lViewData[FLAGS] & 64 /* IsRoot */ ? null : lViewData[PARENT];\n            }\n            if (context.component === undefined) {\n                context.component = null;\n            }\n        }\n        return context.component;\n    }\n    /**\n     * Returns the host component instance associated with the target.\n     *\n     * This will only return a component instance of the DOM node\n     * contains an instance of a component on it.\n     */\n    function getHostComponent(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        if (tNode.flags & 4096 /* isComponent */) {\n            var componentView = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n            return componentView[CONTEXT];\n        }\n        return null;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     */\n    function getRootContext$1(target) {\n        var lViewData = Array.isArray(target) ? target : loadContext(target).lViewData;\n        var rootLViewData = getRootView$1(lViewData);\n        return rootLViewData[CONTEXT];\n    }\n    /**\n     * Returns a list of all the components in the application\n     * that are have been bootstrapped.\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Returns the injector instance that is associated with\n     * the element, component or directive.\n     */\n    function getInjector(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        return new NodeInjector$1(tNode, context.lViewData);\n    }\n    /**\n     * Returns a list of all the directives that are associated\n     * with the underlying target element.\n     */\n    function getDirectives(target) {\n        var context = loadContext(target);\n        if (context.directives === undefined) {\n            context.directives = discoverDirectives(context.nodeIndex, context.lViewData, false);\n        }\n        return context.directives || [];\n    }\n    /**\n     * Returns LContext associated with a target passed as an argument.\n     * Throws if a given target doesn't have associated LContext.\n     */\n    function loadContext(target) {\n        var context = getContext(target);\n        if (!context) {\n            throw new Error(ngDevMode ? 'Unable to find the given context data for the given target' :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param componentOrView any component or view\n     */\n    function getRootView$1(componentOrView) {\n        var lViewData;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lViewData');\n            lViewData = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lViewData = readPatchedLViewData(componentOrView);\n        }\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     *  Retrieve map of local references (local reference name => element or directive instance).\n     */\n    function getLocalRefs(target) {\n        var context = loadContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lViewData, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ngDev).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ngDev';\n    /*\n     * Publishes a collection of default debug tools onto `window._ng_`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    var _published = false;\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getHostComponent', getHostComponent);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ngDevMode` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n            2 /* CheckAlways */ | 64 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window), opts.playerHandler || null);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLViewData(renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n        rootView[INJECTOR] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, renderer, sanitizer);\n            component = createRootComponent(hostRNode, componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            refreshDescendantViews(rootView, null);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLViewData(renderer, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 4096 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(hostRNode, componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass)\n            prefillHostVars(tView, rootView, componentDef.hostVars);\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLViewData(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        queueLifecycleHooks(dirIndex << 16 /* DirectiveStartingIndexShift */ | 1, rootTView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (dirIndex) {\n                            superContentQueries_1(dirIndex);\n                            prevContentQueries_1(dirIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR$1, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return nextInjector.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return function () { return new token(); };\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider) {\n        var factory = providerToFactory(provider);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider.useClass || provider.provide);\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var viewData = getViewData();\n        var tView = viewData[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var viewData = getViewData();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var previousOrParentTNode = getPreviousOrParentTNode();\n            var beginIndex = previousOrParentTNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n            var cptViewProvidersCount = previousOrParentTNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData), viewData, token);\n                    tInjectables.push(token);\n                    previousOrParentTNode.flags += 1 << 16 /* DirectiveStartingIndexShift */;\n                    if (isViewProvider) {\n                        previousOrParentTNode.providerIndexes +=\n                            65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    viewData.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    viewData[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData), viewData, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    previousOrParentTNode.flags += 1 << 16 /* DirectiveStartingIndexShift */;\n                    if (isViewProvider) {\n                        previousOrParentTNode.providerIndexes +=\n                            65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    viewData.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () {\n            var useRaf = typeof requestAnimationFrame !== 'undefined' && typeof window !== 'undefined';\n            return useRaf ? requestAnimationFrame.bind(window) : setTimeout;\n        },\n    });\n    /**\n     * A function used to wrap the `RendererFactory2`.\n     * Used in tests to change the `RendererFactory2` into a `DebugRendererFactory2`.\n     */\n    var WRAP_RENDERER_FACTORY2 = new InjectionToken('WRAP_RENDERER_FACTORY2');\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            if (ngModule) {\n                var wrapper = ngModule.injector.get(WRAP_RENDERER_FACTORY2, function (v) { return v; });\n                rendererFactory = wrapper(ngModule.injector.get(RendererFactory2));\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n                2 /* CheckAlways */ | 64 /* IsRoot */;\n            var rootContext = ngModule && !isInternalRootView ?\n                ngModule.injector.get(ROOT_CONTEXT) :\n                createRootContext(requestAnimationFrame.bind(window));\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n            rootView[INJECTOR] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootView, renderer);\n                tElementNode = getTNode(0, rootView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var tView = rootView[TVIEW];\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            if (tView.firstTemplatePass) {\n                                // For dynamically created components such as ComponentRef, we create a new TView for\n                                // each insert. This is not ideal since we should be sharing the TViews.\n                                // Also the logic here should be shared with `component.ts`'s `renderComponent`\n                                // method.\n                                tView.expandoStartIndex++;\n                                tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n                                tView.data.splice(index + HEADER_OFFSET, 0, null);\n                                rootView.splice(index + HEADER_OFFSET, 0, null);\n                            }\n                            var tNode = createNodeAtIndex(index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(hostRNode, componentView, this.componentDef, rootView, rootContext, [LifecycleHooksFeature]);\n                refreshDescendantViews(rootView, 1 /* Create */);\n            }\n            finally {\n                leaveView(oldView, true);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, createElementRef(ElementRef, tElementNode, rootView));\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, location) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(rootView);\n            _this.hostView._tViewNode = createViewNode(-1, rootView);\n            _this.injector = injector;\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /{\\$([^}]+)}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, templateRoots, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n        var instructions = (new Array(nbTemplates)).fill(undefined);\n        generateMappingInstructions(0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param tmplIndex The order of appearance of the template.\n     * 0 for the root template, following indexes match the order in `templateRoots`.\n     * @param partIndex The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(tmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex) {\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        var currentElements = elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n        var currentExpressions = expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n        instructions[tmplIndex] = tmplInstructions;\n        for (; partIndex < translationParts.length; partIndex++) {\n            // The value can either be text or the name of a placeholder (element/template root/expression)\n            var value = translationParts[partIndex];\n            // Odd indexes are placeholders\n            if (partIndex & 1) {\n                var phIndex = void 0;\n                if (currentElements && currentElements[value] !== undefined) {\n                    phIndex = currentElements[value];\n                    // The placeholder represents a DOM element, add an instruction to move it\n                    var templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n                    if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n                        // This is a template root, it has no closing tag, not treating it as an element\n                        tmplInstructions.push(phIndex | -2147483648 /* TemplateRoot */);\n                    }\n                    else {\n                        tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                        openedTagCount++;\n                    }\n                    phVisited.push(value);\n                }\n                else if (currentExpressions && currentExpressions[value] !== undefined) {\n                    phIndex = currentExpressions[value];\n                    // The placeholder represents an expression, add an instruction to move it\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else {\n                    // It is a closing tag\n                    tmplInstructions.push(-1073741824 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (phIndex !== undefined && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (templateRoots) {\n                    var newTmplIndex = templateRoots.indexOf(value) + 1;\n                    if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n                        partIndex = generateMappingInstructions(newTmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n                    }\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Add instructions to remove elements that are not used in the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        // Add instructions to remove expressions that are not used in the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index.toString(2).length, 28, \"Index \" + index + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                tmplInstructions.push(i | -1610612736 /* Any */);\n            }\n        }\n        return partIndex;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = getViewData();\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = viewData[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n                tNode.next = parentTNode.child;\n                parentTNode.child = tNode;\n            }\n            else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n                tNode.next = previousTNode.next;\n                previousTNode.next = tNode;\n            }\n            else {\n                tNode.next = null;\n            }\n            if (parentTNode !== viewData[HOST_NODE]) {\n                tNode.parent = parentTNode;\n            }\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    function i18nAttribute(index, attrs) {\n        // placeholder for i18nAttribute function\n    }\n    function i18nExp(expression) {\n        // placeholder for i18nExp function\n    }\n    function i18nStart(index, message, subTemplateIndex) {\n        if (subTemplateIndex === void 0) { subTemplateIndex = 0; }\n        // placeholder for i18nExp function\n    }\n    function i18nEnd() {\n        // placeholder for i18nEnd function\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var startTNode = getTNode(startIndex, viewData);\n        var localParentTNode = startTNode.parent || viewData[HOST_NODE];\n        var localPreviousTNode = localParentTNode;\n        resetComponentState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var elementTNode = getTNode(instruction & 536870911 /* IndexMask */, viewData);\n                    localPreviousTNode = appendI18nNode(elementTNode, localParentTNode, localPreviousTNode);\n                    localParentTNode = elementTNode;\n                    break;\n                case 1610612736 /* Expression */:\n                case -2147483648 /* TemplateRoot */:\n                case -1610612736 /* Any */:\n                    var nodeIndex = instruction & 536870911 /* IndexMask */;\n                    localPreviousTNode =\n                        appendI18nNode(getTNode(nodeIndex, viewData), localParentTNode, localPreviousTNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createNodeAtIndex takes a raw index (not adjusted by header offset).\n                    adjustBlueprintForNewNode(viewData);\n                    var textTNode = createNodeAtIndex(viewData.length - 1 - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                    localPreviousTNode = appendI18nNode(textTNode, localParentTNode, localPreviousTNode);\n                    resetComponentState();\n                    break;\n                case -1073741824 /* CloseNode */:\n                    localPreviousTNode = localParentTNode;\n                    localParentTNode = localParentTNode.parent || viewData[HOST_NODE];\n                    break;\n                case -536870912 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var removeIndex = instruction & 536870911 /* IndexMask */;\n                    var removedElement = getNativeByIndex(removeIndex, viewData);\n                    var removedTNode = getTNode(removeIndex, viewData);\n                    removeChild(removedTNode, removedElement || null, viewData);\n                    var slotValue = load(removeIndex);\n                    if (isLContainer(slotValue)) {\n                        var lContainer = slotValue;\n                        if (removedTNode.type !== 0 /* Container */) {\n                            removeChild(removedTNode, lContainer[NATIVE] || null, viewData);\n                        }\n                        removedTNode.detached = true;\n                        lContainer[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of an expression has changed and replaces it by its value in a translation,\n     * or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation1(instructions, v0) {\n        var different = bindingUpdated(getViewData()[BINDING_INDEX]++, v0);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                res += stringify$1(v0);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation2(instructions, v0, v1) {\n        var viewData = getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b1 ? v1 : v0;\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation3(instructions, v0, v1, v2) {\n        var viewData = getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? v2 : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation4(instructions, v0, v1, v2, v3) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation5(instructions, v0, v1, v2, v3, v4) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */ function i18nInterpolation6(instructions, v0, v1, v2, v3, v4, v5) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation7(instructions, v0, v1, v2, v3, v4, v5, v6) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     * @param v7 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation8(instructions, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var viewData = getViewData();\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return getCreationMode() ?\n            updateBinding(bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(bindingIndex, exp) ?\n            updateBinding(bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated2(bindingIndex, exp1, exp2) ?\n            updateBinding(bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated3(bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(bindingIndex + 4, exp5) || different ?\n            updateBinding(bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param currentView The view we are currently processing\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(tNode, currentView, type) {\n        var defs = currentView[TVIEW].data;\n        if (defs) {\n            var flags = tNode.flags;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var start = flags >> 16 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            for (var i = start; i < end; i++) {\n                var def = defs[i];\n                if (def.type === type) {\n                    return i;\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryRead(tNode, currentView, read) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(tNode, currentView, read);\n            if (matchingIdx !== null) {\n                return currentView[matchingIdx];\n            }\n        }\n        return null;\n    }\n    function queryReadByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function add(query, tNode) {\n        var currentView = getViewData();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                // if read token and / or strategy is not specified, use type as read token\n                var result = queryRead(tNode, currentView, predicate.read || type);\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        var result = null;\n                        if (predicate.read) {\n                            result = queryRead(tNode, currentView, predicate.read);\n                        }\n                        else {\n                            if (directiveIdx > -1) {\n                                result = currentView[directiveIdx];\n                            }\n                            else {\n                                // if read token and / or strategy is not specified,\n                                // detect it using appropriate tNode type\n                                result = queryReadByTNodeType(tNode, currentView);\n                            }\n                        }\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts`s have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵloadQueryList': loadQueryList,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵEC': elementContainerStart,\n        'ɵeC': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵquery': query,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵregisterContentQuery': registerContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18nAttribute': i18nAttribute,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        compileNgModuleDefs(moduleType, ngModule);\n        setScopeOnDeclaredComponents(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2),\n                        declarations: declarations,\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2).map(expandModuleWithProviders),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2).map(expandModuleWithProviders),\n                        emitInline: true,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$2,\n                        imports: [\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getNgModuleDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var meta = __assign({}, directiveMetadata(type, metadata), { template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, viewQueries: extractQueriesMetadata(getReflect().propMetadata(type), isViewQuery), directives: new Map(), pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, \"ng://\" + stringify(type) + \"/template.html\", meta);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var facade = directiveMetadata(type, directive);\n                    ngDirectiveDef = getCompilerFacade().compileDirective(angularCoreEnv, \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\", facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ$1,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(propMetadata, isContentQuery),\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n            providers: metadata.providers || null,\n        };\n    }\n    var EMPTY_OBJ$1 = {};\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : selector;\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null\n        };\n    }\n    function extractQueriesMetadata(propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('7.1.0-beta.1+31.sha-bc68b59');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    var meta_1 = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta_1) || isUseFactoryProvider(meta_1) ||\n                        isUseValueProvider(meta_1) || isUseExistingProvider(meta_1);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        providedIn: meta_1.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined\n                    };\n                    if ((isUseClassProvider(meta_1) || isUseFactoryProvider(meta_1)) && meta_1.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta_1.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta_1)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta_1.useClass;\n                    }\n                    else if (isUseValueProvider(meta_1)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta_1.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta_1)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta_1.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta_1)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta_1.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = defineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(inject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], [{\n            type: undefined,\n            decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }]\n        }], null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = defineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n    /*@__PURE__*/ setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = defineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /*@__PURE__*/ setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null);\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = defineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(inject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /*@__PURE__*/ setClassMetadata(Testability, [{\n            type: Injectable\n        }], [{\n            type: NgZone\n        }], null);\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = defineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], [], null);\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = defineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(inject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], [{\n            type: Injector\n        }], null);\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = defineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(inject(NgZone), inject(Console), inject(Injector), inject(ErrorHandler), inject(ComponentFactoryResolver), inject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], [{\n            type: NgZone\n        }, {\n            type: Console\n        }, {\n            type: Injector\n        }, {\n            type: ErrorHandler\n        }, {\n            type: ComponentFactoryResolver\n        }, {\n            type: ApplicationInitStatus\n        }], null);\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = defineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(inject(Compiler), inject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], [{\n            type: Compiler\n        }, {\n            type: SystemJsNgModuleLoaderConfig,\n            decorators: [{\n                    type: Optional\n                }]\n        }], null);\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @publicApi\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this.nativeNode = nativeNode;\n            this._debugContext = _debugContext;\n            this.listeners = [];\n            this.parent = null;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @publicApi\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @publicApi\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = defineNgModule({ type: ApplicationModule, bootstrap: [], declarations: [], imports: [], exports: [] });\n        ApplicationModule.ngInjectorDef = defineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(inject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS, imports: [] });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], [{\n            type: ApplicationRef\n        }], null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR$1);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR$1);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext() || (this.createDebugContext(el));\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n     *\n     * The created DebugRenderer know how to create a Debug Context specific to IVY.\n     */\n    var Render3DebugRendererFactory2 = /** @class */ (function (_super) {\n        __extends(Render3DebugRendererFactory2, _super);\n        function Render3DebugRendererFactory2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Render3DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            var renderer = _super.prototype.createRenderer.call(this, element, renderData);\n            renderer.debugContextFactory = function (nativeElement) { return new Render3DebugContext(nativeElement); };\n            return renderer;\n        };\n        return Render3DebugRendererFactory2;\n    }(DebugRendererFactory2));\n    /**\n     * Stores context information about view nodes.\n     *\n     * Used in tests to retrieve information those nodes.\n     */\n    var Render3DebugContext = /** @class */ (function () {\n        function Render3DebugContext(_nativeNode) {\n            this._nativeNode = _nativeNode;\n        }\n        Object.defineProperty(Render3DebugContext.prototype, \"nodeIndex\", {\n            get: function () { return loadContext(this._nativeNode).nodeIndex; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"view\", {\n            get: function () { return loadContext(this._nativeNode).lViewData; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"injector\", {\n            get: function () { return getInjector(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"component\", {\n            get: function () { return getHostComponent(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"providerTokens\", {\n            get: function () {\n                var lDebugCtx = loadContext(this._nativeNode);\n                var lViewData = lDebugCtx.lViewData;\n                var tNode = lViewData[TVIEW].data[lDebugCtx.nodeIndex];\n                var directivesCount = tNode.flags & 4095 /* DirectiveCountMask */;\n                if (directivesCount > 0) {\n                    var directiveIdxStart = tNode.flags >> 16 /* DirectiveStartingIndexShift */;\n                    var directiveIdxEnd = directiveIdxStart + directivesCount;\n                    var viewDirectiveDefs = this.view[TVIEW].data;\n                    var directiveDefs = viewDirectiveDefs.slice(directiveIdxStart, directiveIdxEnd);\n                    return directiveDefs.map(function (directiveDef) { return directiveDef.type; });\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"references\", {\n            get: function () { return getLocalRefs(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"context\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"componentRenderElement\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"renderNode\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(pk): check previous implementation and re-implement\n        Render3DebugContext.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            console.error.apply(console, __spread(values));\n        };\n        return Render3DebugContext;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lViewData = context.lViewData;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lViewData);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     */\n    function getPlayers(ref) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex - HEADER_OFFSET, context.lViewData);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵdefineNgModule = defineNgModule;\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR$1;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵinject = inject;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵdefineNgModule = ɵdefineNgModule;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵquery = query;\n    exports.ɵregisterContentQuery = registerContentQuery;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵloadQueryList = loadQueryList;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18nAttribute = i18nAttribute;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nExpMapping = i18nExpMapping;\n    exports.ɵi18nInterpolation1 = i18nInterpolation1;\n    exports.ɵi18nInterpolation2 = i18nInterpolation2;\n    exports.ɵi18nInterpolation3 = i18nInterpolation3;\n    exports.ɵi18nInterpolation4 = i18nInterpolation4;\n    exports.ɵi18nInterpolation5 = i18nInterpolation5;\n    exports.ɵi18nInterpolation6 = i18nInterpolation6;\n    exports.ɵi18nInterpolation7 = i18nInterpolation7;\n    exports.ɵi18nInterpolation8 = i18nInterpolation8;\n    exports.ɵi18nInterpolationV = i18nInterpolationV;\n    exports.ɵi18nMapping = i18nMapping;\n    exports.ɵWRAP_RENDERER_FACTORY2 = WRAP_RENDERER_FACTORY2;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵRender3DebugRendererFactory2 = Render3DebugRendererFactory2;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetContext = getContext;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵSWITCH_INJECTOR_FACTORY__POST_R3__ = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}